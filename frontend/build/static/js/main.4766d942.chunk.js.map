{"version":3,"sources":["store.js","reducers/doctorReducers.js","constants/doctorConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/therapyReducers.js","constants/therapyConstants.js","reducers/inquiryReducers.js","constants/inquiryConstants.js","reducers/prescriptionReducer.js","constants/prescriptionConstants.js","reducers/dashboardReducers.js","constants/dasboardConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/AyurvedInfo.js","components/Banner.js","components/MedicineCards.js","screens/Home.js","components/Message.js","screens/Login.js","screens/Register.js","components/Loader.js","screens/Profile.js","screens/Reset.js","screens/NewPassword.js","screens/PrescriptionTemplate.js","utils/history.js","screens/RefundPolicy.js","screens/PrivacyPolicy.js","screens/TermsAndConditions.js","components/Breadcrumb.js","screens/ContactUs.js","components/FormContainer.js","actions/doctorActions.js","screens/Role.js","screens/DemoRegistration.js","actions/therapyActions.js","screens/Therapy.js","actions/inquiryActions.js","screens/Inquiry.js","components/TabComponent.js","actions/prescriptionActions.js","components/DiechartList.js","components/PrescriptionWindow2.js","components/MasterTab.js","components/CarouselBanner.js","screens/Abouts.js","screens/SearchSymptom.js","components/OldPatientTab.js","components/BillHistoryTab.js","components/VisitingCalender.js","components/OldPrescriptions.js","components/OldMasterTab.js","components/ClinicalStock.js","components/CompanyStock.js","components/InventoryBill.js","components/NewMedicine.js","components/Inventory.js","screens/Dashboard.js","screens/Analytics.js","screens/Doctors.js","screens/Medicine.js","screens/Setting.js","screens/VisitingCards.js","screens/MainPage.js","screens/PrescriptionData.js","screens/Signup.js","components/PrescriptionLists.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","doctorList","state","arguments","length","undefined","doctors","action","type","loading","payload","error","updateDoctor","success","createDoctorData","loadingdoctordata","doctordata","errordoctordata","userLogin","userInfo","userRegister","userDetails","user","_objectSpread","userUpdateProfile","userInfoDetails","users","loadingUsers","errorUsers","userResetPassword","userspassword","updateAppointments","loadingAppointment","appointmentSlot","errorAppointments","cancelAppointmentDates","loadingApp","appointmentsCancel","errorApp","createTherapy","therapyData","createInquiry","inquiryData","getLatestUSer","userdesc","getallMedicineList","medicinesList","loadingMedicine","errorMedicine","addPatientDietChart","loadingDiet","patientdiet","errorDiet","addPatientPrescription","loadingprescription","successpresc","patientPrescription","errorprescription","getPrescriptionDetails","prescriptionList","getDietData","DietList","getPrescripionList","prescriptionData","getPatientPrescriptionList","patientPrescriptionData","loadingp","errorp","patientAppointment","appointmentData","getAppointmentPatients","appointmentsData","loadingapp","errorapp","updateUserStatus","addMedicines","loadingmed","medicineMaster","errormed","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","login","email","password","_ref","_asyncToGenerator","_callee","dispatch","config","_yield$axios$post","data","_context","headers","axios","post","setItem","stringify","alert","t0","response","message","_x","register","phone","address","age","gender","weight","reference","date","isAdmin","profilePictureURL","registrationFor","_ref2","_callee2","_yield$axios$post2","_context2","_x2","getUserInfoDetails","_ref5","_callee5","_yield$axios$get2","_context5","get","_x7","Header","location","history","useDispatch","isLogin","useSelector","isSuperAdmin","React","createElement","Fragment","Navbar","bg","variant","expand","collapseOnSelect","fixed","Container","LinkContainer","to","Brand","className","src","alt","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","onClick","removeItem","window","reload","href","Link","Footer","currentYear","Date","getFullYear","target","style","marginRight","AyurvedInfo","Banner","MedicineCards","padding","Home","marginTop","Message","children","Alert","defaultProps","Login","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","passwordShown","setPasswordShown","_useState5","FontAwesomeIcon","faEye","_useState6","setEmail","_useState7","_useState8","setPassword","Form","onSubmit","e","preventDefault","toast","position","POSITION","TOP_CENTER","controlid","placeholder","onChange","htmlFor","fontSize","aria-hidden","Button","backgroundColor","Register","RegisterData","confirmPassword","registrationForm","setRegistrationForm","setMessage","submitHandler","s","userRegisterReducer","concat","patientRegistrationNo","console","marginLeft","Row","Col","md","Group","controlId","Label","Control","required","DatePicker","selected","peekNextMonth","showMonthDropdown","dropdownMode","placeholderText","dateFormat","maxLength","as","rows","Check","inline","label","ToastContainer","autoClose","Loader","Spinner","animation","role","width","height","margin","display","Profile","setName","setPhone","_useState9","_useState10","setConfirmPassword","_useState11","_useState12","useEffect","_ref3","_callee3","getState","_getState","_yield$axios$get","_context3","Authorization","token","_x3","_x4","_ref4","_callee4","_getState2","_yield$axios$put","_context4","put","_x5","_x6","updateUserProfile","_id","Reset","useHistory","log","test","fetch","body","res","json","M","html","classes","NewPassword","useParams","redirect","search","split","PrescriptionTemplate","inputFields","_React$useState","head","_React$useState3","doc","jsPDF","setFont","setFontSize","setTextColor","text","addImage","line","autoTable","top","left","bottom","open","output","createBrowserHistory","RefundPolicy","Card","Body","Title","lineHeight","Text","PrivacyPolicy","TermsAndConditions","Breadcrumb","breadCrumbHeading","ContactUs","data-valid","data-error","FormContainer","xs","doctor","Role","_useState13","_useState14","setAge","_useState15","_useState16","setGender","_useState17","_useState18","setRole","_useState19","_useState20","dob","setDob","_useState21","_useState22","qualification","setQualification","_useState23","_useState24","experience","setExperience","_useState25","_useState26","fee","setFee","_useState27","_useState28","file","setFile","today","dayjs","birthdate","patitentAge","diff","getAge","email_id","phone_no","consultation_fee","color","fileReader","FileReader","readAsDataURL","onload","handleImageUpload","files","showYearDropdown","DemoRegistration","Therapy","defaultData","patientName","contact","therapyname","therapyfees","patientreview","therapistName","therapyform","setTherapyform","addTherapy","therapycontact","therapyemail","therapyName","therapyFees","patientReview","therapyreference","Inquiry","inquirySubject","inquiryForm","setInquiryForm","addInquiry","inquiryName","inquirycontact","inquiryemail","inquiryreference","colSpan","TabComponent","Tab","defaultActiveKey","sm","eventKey","Content","Pane","getMedicines","getPatientDetail","_ref8","_callee8","_yield$axios$get5","_context8","_x11","DiechartList","category","googleTransliterate","require","PrescriptionWindow2","diet","prescriptiondays","image","video","report","payment","Remark","prescription","setPrescription","isOpen","setIsOpen","PrescriptionDetails","DietchartDetails","allMedicines","Patient","request","XMLHttpRequest","_React$useState2","translateinputValue","setTranslateInputValue","_React$useState4","translatedValue","setTranslatedValue","_React$useState5","_React$useState6","selectValue","setSelectValue","symptomList","setSymptomList","addSymptomArray","prevItems","_toConsumableArray","setInputFields","addFields","event","_inputFields$find","_inputFields$find$med","medicineName","textContent","find","_","_$med","med","_allMedicines$medicin","newfield","Dose","Consulting","medicine","paid","Debit_Credit","discount","paymentmode","paymentRemark","inputVal","setInputVal","updateInputVal","pairs","prevInputVal","onValueChange","_event$target","newPaid","Number","_defineProperty","show","setShow","handleClose","_React$useState7","_React$useState8","allowanceState","setAllowanceState","dietCategories","Set","map","item","getIdFromUnicode","unicode","getUniCodeFromId","_React$useState9","_React$useState10","dietArray","setDietArray","wtodo","wto_dont","pateientDietChart","preDiet","setPreDiet","headerChange","handelMarkState","replace","innerHTML","showInstruction","setShowInstruction","_React$useState11","_React$useState12","medicineAndDoseArray","updateDose","document","getElementById","trim","newState","_obj$med2","dose","imagefile","setImageFile","videofile","setVideoFile","reportfile","setReportFile","patient","setPatient","togglePopup","Autocomplete","sx","border","freeSolo","options","fontWeight","getOptionLabel","option","renderInput","params","TextField","assign","renderOption","props","inputValue","matches","match","insideWords","parts","selectedOption","setUser","part","index","onKeyDown","align","_yield$axios$post3","splice","_obj$med","medicineDetails","mainPrescription","prescriptionUser","Symptoms","diet_chart","medicineData","Image","Video","bordercolor","borderRight","filter","removeSymptomArray","Icon","baseClassName","content","input","_input$med","_input$med2","removeFields","DeleteIcon","cellSpacing","cellPadding","readOnly","size","handleVideoUpload","handleReportUpload","Modal","aria-labelledby","centered","onHide","closeButton","defaultChecked","element","flexWrap","flexDirection","elem","_dietArray$find","cursor","dangerouslySetInnerHTML","__html","allowance","InputGroup","aria-label","inputId","toString","checked","join","MasterTab","setKey","Tabs","activeKey","onSelect","k","CarouselBanner","OwlCarousel","items","animateOut","autoplay","autoplayTimeout","autoplayHoverPause","dots","responsiveClass","nav","navText","smartSpeed","loop","responsive","0","400","600","700","1000","Abouts","SearchSymptom","setInputValue","OldPatientTab","choosePatient","prescriptionDetail","uniqueData","Array","from","_item$Patient$","dataItem","_dataItem$Patient$","_ref7","_callee7","_yield$axios$get4","_context7","_x10","setPatientDetail","setOpen","previousPrescription","setPreviousPrescription","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","tr","td","toUpperCase","getElementsByTagName","innerText","indexOf","_data$Patient$","_data$Patient$2","_data$Patient$4","_data$Patient$3","oldPrescription","p","_p$Patient$","sortedPrescriptions","createdAt","handleClickOpen","Dialog","onClose","maxWidth","DialogTitle","DialogContent","DialogContentText","v","_v$Symptoms","_v$medicineData","format","_v$PatientMedicines","_v$PatientMedicines$f","PatientMedicines","el","DialogActions","BillHistoryTab","_filterbill$","PatientId","OldPrescriptions","PrescriptionVisitData","filterbill","visit","Total","Paid","bill","_bill$payment","_bill$payment2","_bill$payment3","_bill$payment4","_v$payment","_v$payment2","_v$payment3","_v$payment4","VisitingCalender","_filteredVisits$","_filteredVisits$2","patientId","PrescriptionVisitData1","filteredVisits","_patientDataPrescript","_patientDataPrescript2","_patientDataPrescript3","_selectedVisit$sympto","_selectedVisit$medici","patientIds","selectedVisit","setSelectedVisit","selectedVisitDate","setSelectedVisitDate","createdAtDates","patientInfo","patientDataPrescription","setPatientDataPrescription","patientData","PrescriptionDates","_patientPrescriptions","_patientPrescriptions2","_patientPrescriptions3","_patientPrescriptions4","_patientPrescriptions5","_patientPrescriptions6","_patientPrescriptions7","_patientPrescriptions8","patientPrescriptions","_prescription$Patient","_prescription$Patient2","visits","_prescriptionD$","_prescriptionD$$medic","_prescriptionD$3","prescriptionD","newMedicineData","_prescriptionD$2","visitDate","medicinePrescribed","symptomObserved","CardGroup","ListGroup","handleDateClick","symptom","_medicine$medicineDat","OldMasterTab","selectedPatientId","setSelectedPatientId","isSelectedTab","setIsSelectedTab","SetTab","tabkey","oldPatient","ClinicalStock","selectedRow","setSelectedRow","colspan","m","supplierName","Qty","handleAdd","CompanyStock","InventoryBill","NewMedicine","justifyContent","Inventory","Dashboard","Analytics","disableClearable","year","InputProps","Doctors","imageFile","DoctorData","speciality","licenseNumber","doctorForm","setDoctorForm","addDoctors","Medicine","Unit","Gram","contactNo","amount","medicine_reciver_name","medicineform","setMedicineform","errorMessage","setErrorMessage","Setting","VisitingCards","MainPage","PrescriptionData","filteredTodayData","isSame","overflowX","_v$Patient","Signup","class","PrescriptionLists","PatientPrescriptions","userPrescriptions","generatePrecription","_prescription$medicin","setFillColor","rect","internal","pageSize","pMed","startY","headStyles","fillColor","textColor","styles","columnStyles","fontStyle","1","cellWidth","2","save","App","Router","Route","path","component","HomeScreen","exact","RegisterScreen","About","ProfileScreen","LoginScreen","Boolean","hostname","ReactDOM","render","Provider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4766d942.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport{\r\n    updateDoctorReducer,\r\n    updateAppointmentReducer,\r\n    cancelAppointmentDateReducer,\r\n    createDoctorDataReducer,\r\n    doctorListReducer,\r\n}from './reducers/doctorReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userInfoDetailsReducer,\r\n    userResetPasswordReducer,\r\n    userInfoDescReducer,\r\n    userUpdateStatusReducer\r\n} from './reducers/userReducers'\r\n\r\nimport{\r\n    createTherapyReducer\r\n} from './reducers/therapyReducers'\r\n\r\nimport {medicinesListReducer,dietChartDetailReducer,prescriptionDetailReducer,\r\n    getPrescriptionDataReducer,getDietChartDataReducer,getPrescriptionDetailsReducer,\r\n    getPatientPrescriptionDetailReducer,medicinesDetailsDetailReducer} from './reducers/prescriptionReducer'\r\nimport {createInquiryReducer} from './reducers/inquiryReducers'\r\n\r\n\r\nimport {createDashboardAppointmentReducer,getPatientAppointmentDetailsReducer} from './reducers/dashboardReducers'\r\n\r\nconst reducer = combineReducers({\r\n    doctorList: doctorListReducer,\r\n    updateDoctor:updateDoctorReducer,\r\n    createDoctorData:createDoctorDataReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userInfoDetails:userInfoDetailsReducer,\r\n    userResetPassword:userResetPasswordReducer,\r\n    updateAppointments:updateAppointmentReducer,\r\n    cancelAppointmentDates:cancelAppointmentDateReducer,\r\n    createTherapy:createTherapyReducer,\r\n    createInquiry:createInquiryReducer,\r\n    getLatestUSer:userInfoDescReducer,\r\n    getallMedicineList:medicinesListReducer,\r\n    addPatientDietChart:dietChartDetailReducer,\r\n    addPatientPrescription:prescriptionDetailReducer,\r\n    getPrescriptionDetails:getPrescriptionDataReducer,\r\n    getDietData:getDietChartDataReducer,\r\n    getPrescripionList:getPrescriptionDetailsReducer,\r\n    getPatientPrescriptionList:getPatientPrescriptionDetailReducer,\r\n    patientAppointment:createDashboardAppointmentReducer,\r\n    getAppointmentPatients:getPatientAppointmentDetailsReducer,\r\n    updateUserStatus:userUpdateStatusReducer,\r\n    addMedicines:medicinesDetailsDetailReducer\r\n\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null\r\n\r\n// Load initial state when the application is loaded\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import{\r\n    DOCTORS_LIST_FAIL,\r\n    DOCTORS_LIST_SUCCESS,\r\n    DOCTORS_LIST_REQUEST,\r\n    DOCTORS_UPDATE_SUCCESS,\r\n    DOCTORS_UPDATE_FAIL,\r\n    DOCTORS_UPDATE_REQUEST,\r\n    DOCTORS_APPOINTMENT_SUCCESS,\r\n    DOCTORS_APPOINTMENT_FAIL,\r\n    DOCTORS_APPOINTMENT_REQUEST,\r\n    DOCTORS_DELETE_FAIL,\r\n    DOCTORS_DELETE_REQUEST,\r\n    DOCTORS_DELETE_RESET,\r\n    DOCTORS_DATA_SUCCESS,\r\n    DOCTORS_DATA_FAIL,\r\n    DOCTORS_DATA_REQUEST,\r\n    DOCTORS_DATA_RESET,\r\n    DOCTORS_DELETE_SUCCESS,\r\n\r\n} from '../constants/doctorConstants';\r\n\r\nexport const doctorListReducer = (state = { doctors: [] }, action) => {\r\n    switch (action.type) {\r\n        case DOCTORS_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n                doctors: [],\r\n            }\r\n        case DOCTORS_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                doctors: action.payload,\r\n            }\r\n        case DOCTORS_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case DOCTORS_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                doctors: action.payload,\r\n            }\r\n        case DOCTORS_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateDoctorReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DOCTORS_UPDATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case DOCTORS_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                doctors: action.payload,\r\n            }\r\n        case DOCTORS_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case DOCTORS_UPDATE_REQUEST:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const updateAppointmentReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DOCTORS_APPOINTMENT_REQUEST:\r\n            return {\r\n                loadingAppointment: true,\r\n            }\r\n        case DOCTORS_APPOINTMENT_SUCCESS:\r\n            return {\r\n                loadingAppointment: false,\r\n                success: true,\r\n                appointmentSlot: action.payload,\r\n            }\r\n        case DOCTORS_APPOINTMENT_FAIL:\r\n            return {\r\n                loadingAppointment: false,\r\n                errorAppointments: action.payload,\r\n            }\r\n        case DOCTORS_APPOINTMENT_REQUEST:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const cancelAppointmentDateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DOCTORS_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingApp: true,\r\n            }\r\n        case DOCTORS_DELETE_SUCCESS:\r\n            return {\r\n                loadingApp: false,\r\n                success: true,\r\n                appointmentsCancel: action.payload,\r\n            }\r\n        case DOCTORS_DELETE_FAIL:\r\n            return {\r\n                loadingApp: false,\r\n                errorApp: action.payload,\r\n            }\r\n        case DOCTORS_DELETE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const createDoctorDataReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DOCTORS_DATA_REQUEST:\r\n            return {\r\n                loadingdoctordata: true,\r\n            }\r\n        case DOCTORS_DATA_SUCCESS:\r\n            return {\r\n                loadingdoctordata: false,\r\n                success: true,\r\n                doctordata: action.payload,\r\n            }\r\n        case DOCTORS_DATA_FAIL:\r\n            return {\r\n                loadingdoctordata: false,\r\n                errordoctordata: action.payload,\r\n            }\r\n        case DOCTORS_DATA_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const DOCTORS_LIST_SUCCESS = 'DOCTORS_LIST_SUCCESS'\r\nexport const DOCTORS_LIST_FAIL = 'DOCTORS_LIST_FAIL'\r\nexport const DOCTORS_LIST_REQUEST = 'DOCTORS_LIST_REQUEST'\r\n\r\nexport const DOCTORS_UPDATE_SUCCESS = 'DOCTORS_UPDATE_SUCCESS'\r\nexport const DOCTORS_UPDATE_FAIL = 'DOCTORS_UPDATE_FAIL'\r\nexport const DOCTORS_UPDATE_REQUEST = 'DOCTORS_UPDATE_REQUEST'\r\nexport const DOCTORS_UPDATE_RESET = 'DOCTORS_UPDATE_RESET'\r\n\r\n//update appointment date constants\r\nexport const DOCTORS_APPOINTMENT_SUCCESS = 'DOCTORS_APPOINTMENT_SUCCESS'\r\nexport const DOCTORS_APPOINTMENT_FAIL = 'DOCTORS_APPOINTMENT_FAIL'\r\nexport const DOCTORS_APPOINTMENT_REQUEST = 'DOCTORS_APPOINTMENT_REQUEST'\r\nexport const DOCTORS_APPOINTMENT_RESET = 'DOCTORS_APPOINTMENT_RESET'\r\n//delete appointment date constants\r\nexport const DOCTORS_DELETE_SUCCESS = 'DOCTORS_DELETE_SUCCESS'\r\nexport const DOCTORS_DELETE_FAIL = 'DOCTORS_DELETE_FAIL'\r\nexport const DOCTORS_DELETE_REQUEST = 'DOCTORS_DELETE_REQUEST'\r\nexport const DOCTORS_DELETE_RESET = 'DOCTORS_DELETE_RESET'\r\n\r\n//create doctor data constants\r\nexport const DOCTORS_DATA_SUCCESS = 'DOCTORS_DATA_SUCCESS'\r\nexport const DOCTORS_DATA_FAIL = 'DOCTORS_DATA_FAIL'\r\nexport const DOCTORS_DATA_REQUEST = 'DOCTORS_DATA_REQUEST'\r\nexport const DOCTORS_DATA_RESET = 'DOCTORS_DATA_RESET'","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_INFO_DETAILS_REQUEST,\r\n    USER_INFO_DETAILS_SUCCESS,\r\n    USER_INFO_DETAILS_FAIL,\r\n    USER_UPDATE_PASSWORD_REQUEST,\r\n    USER_UPDATE_PASSWORD_SUCCESS,\r\n    USER_UPDATE_PASSWORD_FAIL,\r\n    USER_LATEST_REQUEST,\r\n    USER_LATEST_SUCCESS,\r\n    USER_LATEST_FAIL,\r\n    USER_LATEST_RESET,\r\n    USER_STATUS_REQUEST,\r\n    USER_STATUS_SUCCESS,\r\n    USER_STATUS_FAIL,\r\n    USER_STATUS_RESET\r\n\r\n} from '../constants/userConstants'\r\n\r\n// Getting a user from server\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: action.payload,\r\n            }\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: action.payload,\r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: action.payload,\r\n            }\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case USER_DETAILS_RESET:\r\n            return {\r\n                user: {},\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                userInfo: action.payload,\r\n            }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//to get all users\r\nexport const userInfoDetailsReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_INFO_DETAILS_REQUEST:\r\n            return {\r\n                loadingUsers: true,\r\n                users: [],\r\n            }\r\n        case USER_INFO_DETAILS_SUCCESS:\r\n            return {\r\n                loadingUsers: false,\r\n                users: action.payload,\r\n            }\r\n        case USER_INFO_DETAILS_FAIL:\r\n            return {\r\n                loadingUsers: false,\r\n                errorUsers: action.payload,\r\n            }\r\n        case USER_INFO_DETAILS_SUCCESS:\r\n            return {\r\n                loadingUsers: false,\r\n                users: action.payload,\r\n            }\r\n        case USER_INFO_DETAILS_FAIL:\r\n            return {\r\n                loadingUsers: false,\r\n                errorUsers: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//reset password\r\nexport const userResetPasswordReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PASSWORD_REQUEST:\r\n            return {\r\n                loadingUsers: true,\r\n                users: [],\r\n            }\r\n        case USER_UPDATE_PASSWORD_SUCCESS:\r\n            return {\r\n                loadingUsers: false,\r\n                users: action.payload,\r\n            }\r\n        case USER_UPDATE_PASSWORD_FAIL:\r\n            return {\r\n                loadingUsers: false,\r\n                errorUsers: action.payload,\r\n            }\r\n        case USER_UPDATE_PASSWORD_SUCCESS:\r\n            return {\r\n                loadingUsers: false,\r\n                userspassword: action.payload,\r\n            }\r\n        case USER_UPDATE_PASSWORD_FAIL:\r\n            return {\r\n                loadingUsers: false,\r\n                errorUsers: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//to get all users\r\nexport const userInfoDescReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LATEST_REQUEST:\r\n            return {\r\n                loadingUsers: true,\r\n                userdesc: [],\r\n            }\r\n        case USER_LATEST_SUCCESS:\r\n            return {\r\n                loadingUsers: false,\r\n                userdesc: action.payload,\r\n            }\r\n        case USER_LATEST_FAIL:\r\n            return {\r\n                loadingUsers: false,\r\n                errorUsers: action.payload,\r\n            }\r\n        case USER_LATEST_SUCCESS:\r\n            return {\r\n                loadingUsers: false,\r\n                userdesc: action.payload,\r\n            }\r\n        case USER_LATEST_FAIL:\r\n            return {\r\n                loadingUsers: false,\r\n                errorUsers: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateStatusReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_STATUS_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case USER_STATUS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                userInfo: action.payload,\r\n            }\r\n        case USER_STATUS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_INFO_DETAILS_REQUEST = 'USER_INFO_DETAILS_REQUEST'\r\nexport const USER_INFO_DETAILS_SUCCESS = 'USER_INFO_DETAILS_SUCCESS'\r\nexport const USER_INFO_DETAILS_FAIL = 'USER_INFO_DETAILS_FAIL'\r\nexport const USER_INFO_DETAILS_RESET = 'USER_INFO_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_DETAILS_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_UPDATE_PASSWORD_REQUEST = 'USER_UPDATE_PASSWORD_REQUEST'\r\nexport const USER_UPDATE_PASSWORD_SUCCESS = 'USER_UPDATE_PASSWORD_SUCCESS'\r\nexport const USER_UPDATE_PASSWORD_FAIL = 'USER_UPDATE_PASSWORD_FAIL'\r\nexport const USER_UPDATE_PASSWORD_RESET = 'USER_UPDATE_PASSWORD_RESET'\r\n\r\nexport const USER_LATEST_REQUEST = 'USER_LATEST_REQUEST'\r\nexport const USER_LATEST_SUCCESS = 'USER_LATEST_SUCCESS'\r\nexport const USER_LATEST_FAIL = 'USER_LATEST_FAIL'\r\nexport const USER_LATEST_RESET = 'USER_LATEST_RESET'\r\n\r\nexport const USER_STATUS_REQUEST = 'USER_STATUS_REQUEST'\r\nexport const USER_STATUS_SUCCESS = 'USER_STATUS_SUCCESS'\r\nexport const USER_STATUS_FAIL = 'USER_STATUS_FAIL'\r\nexport const USER_STATUS_RESET = 'USER_STATUS_RESET'","import {\r\n    THERAPY_ADD_REQUEST,\r\n    THERAPY_ADD_SUCCESS,\r\n    THERAPY_ADD_FAIL,\r\n    THERAPY_ADD_RESET\r\n}\r\n from '../constants/therapyConstants'\r\n\r\n export const createTherapyReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case THERAPY_ADD_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case THERAPY_ADD_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                therapyData: action.payload,\r\n            }\r\n        case THERAPY_ADD_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case THERAPY_ADD_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","export const THERAPY_ADD_REQUEST = 'THERAPY_ADD_REQUEST'\r\nexport const THERAPY_ADD_SUCCESS = 'THERAPY_ADD_SUCCESS'\r\nexport const THERAPY_ADD_FAIL = 'THERAPY_ADD_FAIL'\r\nexport const THERAPY_ADD_RESET = 'THERAPY_ADD_RESET'","import {\r\n    INQUIRY_ADD_REQUEST,\r\n    INQUIRY_ADD_SUCCESS,\r\n    INQUIRY_ADD_FAIL,\r\n    INQUIRY_ADD_RESET\r\n}\r\n from '../constants/inquiryConstants'\r\n\r\n export const createInquiryReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INQUIRY_ADD_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case INQUIRY_ADD_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                inquiryData: action.payload,\r\n            }\r\n        case INQUIRY_ADD_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case INQUIRY_ADD_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const INQUIRY_ADD_REQUEST = 'INQUIRY_ADD_REQUEST'\r\nexport const INQUIRY_ADD_SUCCESS = 'INQUIRY_ADD_SUCCESS'\r\nexport const INQUIRY_ADD_FAIL = 'INQUIRY_ADD_FAIL'\r\nexport const INQUIRY_ADD_RESET = 'INQUIRY_ADD_RESET'","import {\r\n    MEDICINE_REQUEST,\r\n    MEDICINE_SUCCESS,\r\n    MEDICINE_FAIL,\r\n    PRESCRIPTION_REQUEST,\r\n    PRESCRIPTION_SUCCESS,\r\n    PRESCRIPTION_FAIL,\r\n    PRESCRIPTION_RESET,\r\n    DIETCHART_REQUEST,\r\n    DIETCHART_SUCCESS,\r\n    DIETCHART_FAIL,\r\n    DIETCHART_RESET,\r\n    GET_PRESCRIPTION_REQUEST,\r\n    GET_PRESCRIPTION_SUCCESS,\r\n    GET_PRESCRIPTION_FAIL,\r\n    GET_DIETCHART_REQUEST,\r\n    GET_DIETCHART_SUCCESS,\r\n    GET_DIETCHART_FAIL,\r\n    DATA_PRESCRIPTION_REQUEST,\r\n    DATA_PRESCRIPTION_SUCCESS,\r\n    DATA_PRESCRIPTION_FAIL,\r\n    PATIENT_PRESCRIPTION_REQUEST,\r\n    PATIENT_PRESCRIPTION_SUCCESS,\r\n    PATIENT_PRESCRIPTION_FAIL,\r\n    PATIENT_PRESCRIPTION_RESET,\r\n    ADD_MEDICINE_REQUEST,\r\n    ADD_MEDICINE_SUCCESS,\r\n    ADD_MEDICINE_FAIL,\r\n    ADD_MEDICINE_RESET\r\n}\r\n    from '../constants/prescriptionConstants'\r\n\r\n//medicines get\r\nexport const medicinesListReducer = (state = { medicinesList: [] }, action) => {\r\n    switch (action.type) {\r\n        case MEDICINE_REQUEST:\r\n            return {\r\n                loadingMedicine: true,\r\n                medicinesList: [],\r\n            }\r\n        case MEDICINE_SUCCESS:\r\n            return {\r\n                loadingMedicine: false,\r\n                medicinesList: action.payload,\r\n            }\r\n        case MEDICINE_FAIL:\r\n            return {\r\n                loadingMedicine: false,\r\n                errorMedicine: action.payload,\r\n            }\r\n        case MEDICINE_SUCCESS:\r\n            return {\r\n                loadingMedicine: false,\r\n                medicinesList: action.payload,\r\n            }\r\n        case MEDICINE_FAIL:\r\n            return {\r\n                loadingMedicine: false,\r\n                errorMedicine: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//add medicines\r\nexport const medicinesDetailsDetailReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_MEDICINE_REQUEST:\r\n            return {\r\n                loadingmed: true,\r\n            }\r\n        case ADD_MEDICINE_SUCCESS:\r\n            return {\r\n                loadingmed: false,\r\n                success: true,\r\n                medicineMaster: action.payload,\r\n\r\n            }\r\n        case ADD_MEDICINE_FAIL:\r\n            return {\r\n                loadingmed: false,\r\n                errormed: action.payload,\r\n\r\n            }\r\n        case ADD_MEDICINE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//dietchart add\r\nexport const dietChartDetailReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DIETCHART_REQUEST:\r\n            return {\r\n                loadingDiet: true,\r\n            }\r\n        case DIETCHART_SUCCESS:\r\n            return {\r\n                loadingDiet: false,\r\n                success: true,\r\n                patientdiet: action.payload,\r\n\r\n            }\r\n        case DIETCHART_FAIL:\r\n            return {\r\n                loadingDiet: false,\r\n                errorDiet: action.payload,\r\n\r\n            }\r\n        case DIETCHART_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// add prescription \r\nexport const prescriptionDetailReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRESCRIPTION_REQUEST:\r\n            return {\r\n                loadingprescription: true,\r\n            }\r\n        case PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loadingprescription: false,\r\n                successpresc: true,\r\n                patientPrescription: action.payload,\r\n            }\r\n        case PRESCRIPTION_FAIL:\r\n            return {\r\n                loadingprescription: false,\r\n                errorprescription: action.payload,\r\n            }\r\n        case PRESCRIPTION_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//get prescription\r\nexport const getPrescriptionDataReducer = (state = { prescriptionList: [] }, action) => {\r\n    switch (action.type) {\r\n        case GET_PRESCRIPTION_REQUEST:\r\n            return {\r\n                loading: true,\r\n                prescriptionList: [],\r\n            }\r\n        case GET_PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                prescriptionList: action.payload,\r\n            }\r\n        case GET_PRESCRIPTION_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case GET_PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                prescriptionList: action.payload,\r\n            }\r\n        case GET_PRESCRIPTION_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//get Diet Chart \r\nexport const getDietChartDataReducer = (state = { DietList: [] }, action) => {\r\n    switch (action.type) {\r\n        case GET_DIETCHART_REQUEST:\r\n            return {\r\n                loadingDiet: true,\r\n                DietList: [],\r\n            }\r\n        case GET_DIETCHART_SUCCESS:\r\n            return {\r\n                loadingDiet: false,\r\n                DietList: action.payload,\r\n            }\r\n        case GET_DIETCHART_FAIL:\r\n            return {\r\n                loadingDiet: false,\r\n                errorDiet: action.payload,\r\n            }\r\n        case GET_DIETCHART_SUCCESS:\r\n            return {\r\n                loadingDiet: false,\r\n                DietList: action.payload,\r\n            }\r\n        case GET_DIETCHART_FAIL:\r\n            return {\r\n                loadingDiet: false,\r\n                errorDiet: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//get prescription\r\nexport const getPrescriptionDetailsReducer = (state = { prescriptionData: [] }, action) => {\r\n    switch (action.type) {\r\n        case DATA_PRESCRIPTION_REQUEST:\r\n            return {\r\n                loading: true,\r\n                prescriptionData: [],\r\n            }\r\n        case DATA_PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                prescriptionData: action.payload,\r\n            }\r\n        case DATA_PRESCRIPTION_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case DATA_PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                prescriptionData: action.payload,\r\n            }\r\n        case DATA_PRESCRIPTION_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//get prescription\r\nexport const getPatientPrescriptionDetailReducer = (state = { patientPrescriptionData: [] }, action) => {\r\n    switch (action.type) {\r\n        case PATIENT_PRESCRIPTION_REQUEST:\r\n            return {\r\n                loadingp: true,\r\n                patientPrescriptionData: [],\r\n            }\r\n        case PATIENT_PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loadingp: false,\r\n                patientPrescriptionData: action.payload,\r\n            }\r\n        case PATIENT_PRESCRIPTION_FAIL:\r\n            return {\r\n                loadingp: false,\r\n                errorp: action.payload,\r\n            }\r\n        case PATIENT_PRESCRIPTION_SUCCESS:\r\n            return {\r\n                loadingp: false,\r\n                patientPrescriptionData: action.payload,\r\n            }\r\n        case PATIENT_PRESCRIPTION_FAIL:\r\n            return {\r\n                loadingp: false,\r\n                errorp: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","//medicine constants\r\nexport const MEDICINE_REQUEST = 'MEDICINE_REQUEST'\r\nexport const MEDICINE_SUCCESS = 'MEDICINE_SUCCESS'\r\nexport const MEDICINE_FAIL = 'MEDICINE_FAIL'\r\nexport const MEDICINE_RESET = 'MEDICINE_RESET'\r\n\r\n//add Medicines\r\nexport const ADD_MEDICINE_REQUEST = 'ADD_MEDICINE_REQUEST'\r\nexport const ADD_MEDICINE_SUCCESS = 'ADD_MEDICINE_SUCCESS'\r\nexport const ADD_MEDICINE_FAIL = 'ADD_MEDICINE_FAIL'\r\nexport const ADD_MEDICINE_RESET = 'ADD_MEDICINE_RESET'\r\n\r\n\r\n\r\n//add prescription constants\r\nexport const PRESCRIPTION_REQUEST = 'PRESCRIPTION_REQUEST'\r\nexport const PRESCRIPTION_SUCCESS = 'PRESCRIPTION_SUCCESS'\r\nexport const PRESCRIPTION_FAIL = 'PRESCRIPTION_FAIL'\r\nexport const PRESCRIPTION_RESET = 'PRESCRIPTION_RESET'\r\n\r\n//add dietchart constants\r\nexport const DIETCHART_REQUEST = 'DIETCHART_REQUEST'\r\nexport const DIETCHART_SUCCESS = 'DIETCHART_SUCCESS'\r\nexport const DIETCHART_FAIL = 'DIETCHART_FAIL'\r\nexport const DIETCHART_RESET = 'DIETCHART_RESET'\r\n\r\n//get latest prescription constants\r\nexport const GET_PRESCRIPTION_REQUEST = 'GET_PRESCRIPTION_REQUEST'\r\nexport const GET_PRESCRIPTION_SUCCESS = 'GET_PRESCRIPTION_SUCCESS'\r\nexport const GET_PRESCRIPTION_FAIL = 'GET_PRESCRIPTION_FAIL'\r\nexport const GET_PRESCRIPTION_RESET = 'GET_PRESCRIPTION_RESET'\r\n\r\n//get DietChart\r\nexport const GET_DIETCHART_REQUEST = 'GET_DIETCHART_REQUEST'\r\nexport const GET_DIETCHART_SUCCESS = 'GET_DIETCHART_SUCCESS'\r\nexport const GET_DIETCHART_FAIL = 'GET_DIETCHART_FAIL'\r\nexport const GET_DIETCHART_RESET = 'GET_DIETCHART_RESET'\r\n\r\n//get  prescription constants\r\nexport const DATA_PRESCRIPTION_REQUEST = 'DATA_PRESCRIPTION_REQUEST'\r\nexport const DATA_PRESCRIPTION_SUCCESS = 'DATA_PRESCRIPTION_SUCCESS'\r\nexport const DATA_PRESCRIPTION_FAIL = 'DATA_PRESCRIPTION_FAIL'\r\nexport const DATA_PRESCRIPTION_RESET = 'DATA_PRESCRIPTION_RESET'\r\n\r\n\r\n//get  prescription and patient constants\r\nexport const PATIENT_PRESCRIPTION_REQUEST = 'PATIENT_PRESCRIPTION_REQUEST'\r\nexport const PATIENT_PRESCRIPTION_SUCCESS = 'PATIENT_PRESCRIPTION_SUCCESS'\r\nexport const PATIENT_PRESCRIPTION_FAIL = 'PATIENT_PRESCRIPTION_FAIL'\r\nexport const PATIENT_PRESCRIPTION_RESET = 'PATIENT_PRESCRIPTION_RESET'\r\n\r\n","import {\r\n    DASHBOARD_APPOINTMNET_FAIL,\r\n    DASHBOARD_APPOINTMNET_RESET,\r\n    DASHBOARD_APPOINTMNET_REQUEST,\r\n    DASHBOARD_APPOINTMNET_SUCCESS,\r\n    DASHBOARD_GETAPPOINTMNET_REQUEST,\r\n    DASHBOARD_GETAPPOINTMNET_SUCCESS,\r\n    DASHBOARD_GETAPPOINTMNET_FAIL,\r\n    DASHBOARD_GETAPPOINTMNET_RESET\r\n}\r\nfrom '../constants/dasboardConstants'\r\n\r\n export const createDashboardAppointmentReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DASHBOARD_APPOINTMNET_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case DASHBOARD_APPOINTMNET_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                appointmentData: action.payload,\r\n            }\r\n        case DASHBOARD_APPOINTMNET_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case DASHBOARD_APPOINTMNET_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//get prescription\r\nexport const getPatientAppointmentDetailsReducer = (state = { appointmentsData: [] }, action) => {\r\n    switch (action.type) {\r\n        case DASHBOARD_GETAPPOINTMNET_REQUEST:\r\n            return {\r\n                loadingapp: true,\r\n                appointmentsData: [],\r\n            }\r\n        case DASHBOARD_GETAPPOINTMNET_SUCCESS:\r\n            return {\r\n                loadingapp: false,\r\n                appointmentsData: action.payload,\r\n            }\r\n        case DASHBOARD_GETAPPOINTMNET_FAIL:\r\n            return {\r\n                loadingapp: false,\r\n                errorapp: action.payload,\r\n            }\r\n        case DASHBOARD_GETAPPOINTMNET_SUCCESS:\r\n            return {\r\n                loadingapp: false,\r\n                appointmentsData: action.payload,\r\n            }\r\n        case DASHBOARD_GETAPPOINTMNET_FAIL:\r\n            return {\r\n                loadingapp: false,\r\n                errorapp: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const DASHBOARD_APPOINTMNET_REQUEST = 'DASHBOARD_APPOINTMNET_REQUEST'\r\nexport const DASHBOARD_APPOINTMNET_SUCCESS = 'DASHBOARD_APPOINTMNET_SUCCESS'\r\nexport const DASHBOARD_APPOINTMNET_FAIL = 'DASHBOARD_APPOINTMNET_FAIL'\r\nexport const DASHBOARD_APPOINTMNET_RESET = 'DASHBOARD_APPOINTMNET_RESET'\r\n\r\n\r\nexport const DASHBOARD_GETAPPOINTMNET_REQUEST = 'DASHBOARD_GETAPPOINTMNET_REQUEST'\r\nexport const DASHBOARD_GETAPPOINTMNET_SUCCESS = 'DASHBOARD_GETAPPOINTMNET_SUCCESS'\r\nexport const DASHBOARD_GETAPPOINTMNET_FAIL = 'DASHBOARD_GETAPPOINTMNET_FAIL'\r\nexport const DASHBOARD_GETAPPOINTMNET_RESET = 'DASHBOARD_GETAPPOINTMNET_RESET'","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_INFO_DETAILS_REQUEST,\r\n    USER_INFO_DETAILS_SUCCESS,\r\n    USER_INFO_DETAILS_FAIL,\r\n    USER_LATEST_REQUEST,\r\n    USER_LATEST_SUCCESS,\r\n    USER_LATEST_FAIL,\r\n    USER_STATUS_REQUEST,\r\n    USER_STATUS_SUCCESS,\r\n    USER_STATUS_FAIL,\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password }, config)\r\n\r\n        // Dispatch user login success after making the request\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // Set user data to local storage\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        alert(\"Login Successfully\")\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n    })\r\n\r\n    dispatch({\r\n        type: USER_DETAILS_RESET,\r\n    })\r\n}\r\n\r\nexport const register = (name, \r\n    email, \r\n    phone, \r\n    password, \r\n    address, \r\n    age, \r\n    gender,\r\n    weight, \r\n    reference, \r\n    date, \r\n    isAdmin, \r\n    profilePictureURL,\r\n    registrationFor) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, \r\n            email, \r\n            phone, \r\n            password, \r\n            address, \r\n            age, \r\n            gender, \r\n            weight, \r\n            reference, \r\n            date,\r\n            isAdmin,\r\n            profilePictureURL,\r\n            registrationFor },\r\n            config\r\n        )\r\n        return dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // alert('Register Successfully!');\r\n        // Set user data to local storage\r\n        // localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n         return dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        // Get user login and user info\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        // Dispatch user register success after making the request\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        // Get user login and user info\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        // Dispatch user register success after making the request\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"get users\",data)\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//userinfo action api\r\n\r\nexport const getUserInfoDetails = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_INFO_DETAILS_REQUEST,\r\n        })\r\n        const { data } = await axios.get('/api/users/userInfo')\r\n\r\n        dispatch({\r\n            type: USER_INFO_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_INFO_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//GET USER DETAILS IN DESCENDING ORDER\r\nexport const getUserDesc = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LATEST_REQUEST,\r\n        })\r\n        const { data } = await axios.get('/api/users/latest-patient')\r\n\r\n        dispatch({\r\n            type: USER_LATEST_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"get latest user\")\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LATEST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n        // console.log(\"get latest user Failed\")\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserStaff = (id, user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_STATUS_REQUEST,\r\n        })\r\n\r\n        // Get user login and user info\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.put(`/api/users/${id}/updateStatus`, user, config)\r\n\r\n        // Dispatch user register success after making the request\r\n        dispatch({\r\n            type: USER_STATUS_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"user is\")\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_STATUS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\n// Bootstrap UI Components\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n// React Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// Redux User Actions\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = ({location, history}) => {\r\n    const dispatch = useDispatch()\r\n    // const history = useHistory()\r\n\r\n    const isLogin = localStorage.getItem('isLogin');\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n  \r\n\r\n    const baseUrl = process.env.REACT_APP_API__BASE_URL;\r\n    const isAdmin = userInfo?.isAdmin;\r\n    const isSuperAdmin = userInfo?.isSuperAdmin;\r\n\r\n    const isAdminUser = isAdmin ? isAdmin : false;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        localStorage.removeItem('isLogin')\r\n        // history.push('/');\r\n        // window.location.reload();\r\n        window.location.reload();\r\n        window.location.href = '/';\r\n       \r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <header>\r\n                <Navbar\r\n                    bg='primary'\r\n                    variant='dark'\r\n                    expand='lg'\r\n                    collapseOnSelect\r\n                    fixed=\"top\"\r\n                >\r\n                    <Container>\r\n                        <LinkContainer to='/'>\r\n                            <Navbar.Brand>\r\n                                <img\r\n                                    className=\"logo\"\r\n                                    src={\"images/vaidya-logo-preview.png\"}\r\n                                    // src={\"http://localhost:2000/images/vaidya-logo-preview.resized.png\"}\r\n                                    alt=\"mindvein Brand Logo\"\r\n                                />\r\n                            </Navbar.Brand>\r\n                        </LinkContainer>\r\n\r\n                        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\r\n                        <Navbar.Collapse id='basic-navbar-nav'>\r\n                            <Nav className='me-auto'>\r\n                                <LinkContainer to={`/`}>\r\n                                    <Navbar.Brand>Home\r\n                                        &nbsp;  |&nbsp;\r\n                                    </Navbar.Brand>\r\n                                </LinkContainer>\r\n                                {/* {\r\n                                    isSuperAdmin ? <LinkContainer to={`/dashboard`}>\r\n                                        <Navbar.Brand>Dashboard\r\n                                            &nbsp;  |&nbsp;\r\n                                        </Navbar.Brand>\r\n                                    </LinkContainer> : \"\"\r\n                                } */}\r\n                                {\r\n                                    isSuperAdmin ? <LinkContainer to={`/mastertab`}>\r\n                                        <Navbar.Brand>Patient Registeration\r\n                                            &nbsp;  |&nbsp;\r\n                                        </Navbar.Brand>\r\n                                    </LinkContainer> : \"\"\r\n                                }\r\n\r\n                                {\r\n                                    isSuperAdmin ? <LinkContainer to={`/old-mastertab`}>\r\n                                        <Navbar.Brand>OPD Visits\r\n                                            &nbsp;  |&nbsp;\r\n                                        </Navbar.Brand>\r\n                                    </LinkContainer> : \"\"\r\n                                }\r\n\r\n                                {isAdmin ? <LinkContainer to={`/receptionist`}>\r\n                                    <Navbar.Brand>Patient Data\r\n                                        &nbsp;  |&nbsp;\r\n                                    </Navbar.Brand>\r\n                                </LinkContainer> : \"\"}\r\n\r\n                                <LinkContainer to={`/about`}>\r\n                                    <Navbar.Brand>About\r\n                                        &nbsp;  |&nbsp;\r\n                                    </Navbar.Brand>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to={`/contact-us`}>\r\n                                    <Navbar.Brand>Contact\r\n                                        &nbsp;  |&nbsp;\r\n                                    </Navbar.Brand>\r\n                                </LinkContainer>\r\n\r\n                                {isLogin && !isAdmin ?<LinkContainer to={`/patientPrescription`}>\r\n                                    <Navbar.Brand>Prescription\r\n                                        &nbsp;  |&nbsp;\r\n                                    </Navbar.Brand>\r\n                                </LinkContainer>: \"\"}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n\r\n                        <Navbar.Collapse id='basic-navbar-nav'>\r\n                            <Nav className='ml-auto'>\r\n                                {userInfo ? (\r\n                                    <NavDropdown\r\n                                        title={userInfo.name}\r\n                                        id='username'\r\n                                    >\r\n                                        {/* <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>\r\n                                                Profile\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer> */}\r\n                                        {/* <LinkContainer to='/visitingcard'>\r\n                                            <NavDropdown.Item>\r\n                                                Visiting Card\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>*/}\r\n                                      { isSuperAdmin ? <LinkContainer to='/settings'>\r\n                                            <NavDropdown.Item>\r\n                                                Setting\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer> : \"\"}\r\n                                        <NavDropdown.Item\r\n                                            onClick={logoutHandler}\r\n                                        >\r\n                                            Logout\r\n                                        </NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                    <LinkContainer to='/mainpage'>\r\n                                        <Nav.Link>\r\n                                            <i className='fa fa-user mr-2'></i>\r\n                                            Sign In\r\n                                        </Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport '../footer2.css'\r\n\r\nconst Footer = () => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pa-footer-three\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3 col-md-6\">\r\n              <div className=\"pa-foot-box\">\r\n                <h2 className=\"pa-foot-title\">Legal Information</h2>\r\n                <ul>\r\n                  <li>\r\n                    <a href=\"/about\">About Us</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/contact-us\">Contact us</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/refund-policy\">Return Policy</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/terms-condition\">Terms & Conditions</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n            <div className='row'>\r\n              <div className=\"col-md-6 offset-md-5\">\r\n                <div >\r\n                  <a href=\"https://www.facebook.com/story.php?story_fbid=pfbid0Gvgv1EvvLCVjJYUCpvuSSYbqgKt7yJgfAzSJ92u4zUZFv2YG7B3B6Jz1GUC4tCDkl&id=100076816459208&mibextid=Nif5oz&_rdr\" target=\"_blank\">\r\n                    <img style={{ marginRight: \"15px\" }}\r\n                      src=\"images/facebook.svg\"\r\n                      // src={\"http://localhost:2000/images/facebook.svg\"}\r\n                    />\r\n                  </a>\r\n                  <a href=\"\" target=\"_blank\">\r\n                    <img style={{ marginRight: \"15px\" }}\r\n                      src=\"images/instagram.svg\" \r\n                      // src={\"http://localhost:2000/images/instagram.svg\"}\r\n                    />\r\n                  </a>\r\n                   <a href=\"\" target=\"_blank\">\r\n                    <img style={{ marginRight: \"15px\" }}\r\n                      src=\"images/linkedin.svg\" \r\n                      // src={\"http://localhost:2000/images/linkedin.svg\"}\r\n                    />\r\n                  </a> \r\n                   <a href=\"\" target=\"_blank\">\r\n                    <img style={{ marginRight: \"15px\" }}\r\n                      src=\"images/twitter.svg\" \r\n                      // src={\"http://localhost:2000/images/twitter.svg\"}\r\n                    />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pa-copyright pa-copyright-two\">\r\n          <div className=\"container\">\r\n            <p>Copyright © {currentYear}. All right reserved. <a href=\"\"></a></p>\r\n          </div>\r\n        </div>\r\n      </>\r\n   \r\n  )\r\n};\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react'\r\nimport '../whyus.css'\r\n\r\nconst AyurvedInfo = () => {\r\n    return (\r\n        <>\r\n            <div className=\"pa-why spacer-top spacer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"pa-heading\">\r\n                        <img src=\"/images/herbal.svg\" alt=\"image\" className=\"img-fluid\" />\r\n                        <h1>Many Problems One Solution</h1>\r\n                        <h5>best for you</h5>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {/* <img src={\"images/whysukhayu.png\"} alt=\"image\" className=\"img-fluid\"/> */}\r\n                        <div className=\"col-md-4 col-sm-6 pr-0\">\r\n                            <div className=\"pa-why-ul pa-why-left\">\r\n                                <ul>\r\n                                    <li>Joint Problems</li>\r\n                                    <li>Viddhakarma</li>\r\n                                    <li>Pediatric diseases</li>\r\n                                    <li>Saundarya Chikitsa</li>\r\n                                    <li>Hair Problems</li>\r\n                                    <li>Eye-diseases</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4 p-0\">\r\n                            <div className=\"pa-why-img\">\r\n\r\n                                <img src=\"images/herbal.svg\" alt=\"image\" className=\"img-fluid\" />\r\n                            </div>\r\n                            <div className='whyImage'>\r\n                            \r\n                                <p>The Mother of all Healing</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-6 pl-0\">\r\n                            <div className=\"pa-why-ul pa-why-right\">\r\n                                <ul>\r\n                                    <li>Ear-Nose-Throat Probelms</li>\r\n                                    <li>Skin Problems</li>\r\n                                    <li>Agnikarma</li>\r\n                                    <li>Stree Vikar</li>\r\n                                    <li>Infertility</li>\r\n                                    <li>Panchkarma</li>\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AyurvedInfo","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport '../banner.css';\r\n\r\nfunction Banner() {\r\n    return (\r\n        <>\r\n            <div className='pa-banner'>\r\n                <Container>\r\n                    <div className='row'>\r\n                        <div className=\"col-lg-6 offset-lg-6\">\r\n                            <div className=\"pa-banner-text\">\r\n                                <h3 className=\"pa-banner-category\">Health Care </h3>\r\n                                <h2> The Heart Clinic</h2>\r\n                                {/* <p>Panchkarma, Vidhakarma</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport '../medicinecards.css'\r\n\r\nfunction MedicineCards() {\r\n    return (\r\n        <div>\r\n            <div className=\"pa-medicine spacer-top spacer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <div className=\"pa-medicine-box\" style={{padding: \"41px\"}}>\r\n                                <div className=\"pa-medi-icon\">\r\n                                    <img src={\"images/acupuncture.png\"} />\r\n                                </div>\r\n                                <h2>Agnikarm </h2>\r\n                                {/* <a href=\"#\">Pure Ayurveda</a> */}\r\n                                <p>इस चिकित्सा पद्धती में सोने कि काडी से त्वचा पर सेक दिया जाता है|</p>\r\n                                <p>यह 5००० वर्ष पुराणी शास्त्रीय आयुर्वेद चिकित्सा पद्धती है |</p>\r\n                                <p>यह नस का दब जाना, करोडरज्जू के विकार, वात के विकार, सभी प्रकार का दर्द, संधिवात जैसे व्याधी मी लाभदायी उपचार पद्धती है|</p>\r\n                                <p>\r\n\r\n                                </p>\r\n                                <p></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <div className=\"pa-medicine-box\">\r\n                                <div className=\"pa-medi-icon\">\r\n                                <img src={\"images/acupunture2.png\"} />\r\n                                </div>\r\n                                <h2>Viddhakarma</h2>\r\n                                {/* <a href=\"#\">Herbal Medicine</a> */}\r\n                                <p>यह उपचार पद्धती से रक्तप्रवाह सरल किया जाता है| </p>\r\n                                <p>\r\n                                    यह संपूर्ण से आयुर्वेद उपचार पध्दती है| शरीरपर विशिष्ट स्थानोंपर विद्ध्कर्म करने से विकार मिटते है|\r\n                                </p>\r\n                                <p>विद्धकर्म याने अक्यूपंक्चर नही|</p>\r\n                                <p>\r\n                                    संपूर्ण शरीर में १०८ विशिष्ट जगह है, जहां पे हर एक अवयव का नियंत्रण होता है| उसे मर्म कहा जाता है|\r\n                                </p>\r\n                                <p>इस चिकित्सा पध्दती में उन जागाह का प्रयोग होता है|</p>\r\n                                <p>यह मानसिक विकारोंमे अत्यंत लाभदायी चिकित्सा पध्दती है|  </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <div className=\"pa-medicine-box\">\r\n                                <div className=\"pa-medi-icon\">\r\n                                <img src={\"images/panchkarma2.png\"} />\r\n                                </div>\r\n                                <h2>Panchakarma</h2>\r\n                            \r\n                                <p>पंचकर्म आयुर्वेद चिकित्सा पद्धति की विशिष्टता है जो किसी चिकिंत्सा पद्धति में नहीं है अनेक जटिल एंव असाध्य व्याधियां जो केवल औषधोपचार से उपचारित नहीं हो पाती, वे पंचकर्म से सहजता से ठीक की जा सकती है।  </p>\r\n                                    <p>इस चिकित्सा में प्रमुख रूप से स्नेहन, स्वेदन, वमन, विरेचन, वस्ति, नस्य व रक्त मोक्षण आदि क्रिया-कलापों के माध्यम से शरीर व मन में स्थित विकृत दोषों को बाहर निकाला जाता है। जिससे दुबारा रोगों की उत्पति न हो।</p>\r\n\r\n                           \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicineCards","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n// Redux\r\nimport AyurvedInfo from '../components/AyurvedInfo'\r\nimport Banner from '../components/Banner'\r\nimport MedicineCards from '../components/MedicineCards'\r\n\r\nconst Home = () => {\r\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\r\n  return (\r\n    <>\r\n        {/* <img className='center'\r\n          src={\"images/vaidyalogo3.png\"} width=\"546px\"\r\n          height=\" 425px\" /> */}\r\n        <div style={{ marginTop: \"2rem\" }}>\r\n          <Banner />\r\n          </div>\r\n          <div >\r\n          <MedicineCards />\r\n          </div>\r\n          <Container>\r\n          <AyurvedInfo/>\r\n          </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Bootstrap Components\r\nimport { Form, Button } from 'react-bootstrap'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI Components\r\nimport Message from '../components/Message'\r\n// Redux Actions\r\nimport { login } from '../actions/userActions'\r\n//css\r\nimport \"../login.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Login = ({ location, history }) => {\r\n    const [isFetching, setIsFetching] = useState(true);\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n    const eye = <FontAwesomeIcon icon={faEye} />;\r\n    // State to hold email and password\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Get user login info from Redux state\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n\r\n    // Handler that logs in the user\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // console.log(\"trigger\")\r\n        // Dispatch login\r\n        dispatch(login(email, password))\r\n        toast.success('Registration Successfully!', {\r\n            position: toast.POSITION.TOP_CENTER\r\n          });\r\n        localStorage.setItem('isLogin', true)\r\n    }\r\n    // Password toggle handler\r\n    const togglePassword = () => {\r\n        // When the handler is invoked\r\n        // inverse the boolean state of passwordShown\r\n        setPasswordShown(!passwordShown);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"vh-100\">\r\n                <div className=\"container py-5 h-100\">\r\n                    <div className=\"row d-flex align-items-center justify-content-center h-100\">\r\n                        <div className=\"col-md-8 col-lg-7 col-xl-6\">\r\n                            <img src={\"images/undraw_medicine.svg\"}\r\n                                className=\"img-fluid\" alt=\"Phone image\" />\r\n                        </div>\r\n                        <div className=\"col-md-7 col-lg-5 col-xl-5 offset-xl-1\">\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                            {/* {loading && <Loader />} */}\r\n                            <Form onSubmit={submitHandler}>\r\n\r\n                                <div className=\"form-outline mb-4\">\r\n                                    <input \r\n                                       type=\"email\"\r\n                                        id=\"form1Example13\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        controlid='email'\r\n                                        placeholder='email@example.com'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)} />\r\n                                    <label className=\"form-label\" htmlFor=\"form1Example13\">Email address</label>\r\n                                </div>\r\n                                <div className=\"form-outline mb-4\">\r\n                                    <div className=\"pass-wrapper\">\r\n                                        <input\r\n                                            type={passwordShown ? \"text\" : \"password\"}\r\n                                            // type=\"password\"\r\n                                            id=\"form1Example23\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            controlid='password'\r\n                                            placeholder='Enter password'\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                        <i className=\"fa fa-eye icons\" style={{fontSize:\"20px\"}} onClick={togglePassword} aria-hidden=\"true\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-around align-items-center mb-4\">\r\n                                    <a href=\"/reset\">Forgot password?</a>\r\n                                </div>\r\n                                <Button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" style={{ backgroundColor: \"#3b5998\" }}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </section >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport '../demoreg.css'\r\nimport '../register.css'\r\nimport { register } from '../actions/userActions'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Button, Image, Form, InputGroup, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Register = () => {\r\n  const RegisterData = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    address: \"\",\r\n    date: new Date(),\r\n    age: \"\",\r\n    weight: \"\",\r\n    gender: \"\",\r\n    reference: \"\",\r\n    profilePictureURL: \"\",\r\n    isAdmin: false,\r\n  }\r\n  const [registrationForm, setRegistrationForm] = useState(RegisterData)\r\n  const [message, setMessage] = useState(null)\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // Get user login info from Redux state\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const registrationResponse = useSelector(s => s.userRegisterReducer)\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (registrationForm.password !== registrationForm.confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      try {\r\n        dispatch(\r\n          register(\r\n            registrationForm.name,\r\n            registrationForm.email,\r\n            registrationForm.phone,\r\n            registrationForm.password,\r\n            registrationForm.address,\r\n            registrationForm.age,\r\n            registrationForm.gender,\r\n            registrationForm.weight,\r\n            registrationForm.reference,\r\n            registrationForm.date,\r\n            registrationForm.isAdmin,\r\n            registrationForm.profilePictureURL,\r\n            registrationForm.registrationFor\r\n          )\r\n        ).then((e) => {\r\n          // console.log(\"Register DAta\",registrationForm);\r\n          if (e.payload.success) {\r\n            toast.success(\r\n              `Registration Successfully!\\nPatient RegistrationNo: ${e.payload.patientRegistrationNo}`,\r\n              {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                className: 'toast-message'\r\n              }\r\n            );\r\n\r\n          }\r\n        })\r\n        localStorage.setItem(\"isLogin\", true);\r\n        setRegistrationForm(RegisterData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ marginLeft: \"-69px\" }}>Registration</h1>\r\n      <Form onSubmit={submitHandler} className='registerform' >\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Full Name'\r\n                value={registrationForm.name}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, name: e.target.value })}\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='Date'>\r\n              <Form.Label>Date</Form.Label>\r\n              <div className='date-input'>\r\n                <DatePicker\r\n                  selected={registrationForm.date}\r\n                  onChange={(date) => setRegistrationForm({ ...registrationForm, date: date })}\r\n                  peekNextMonth\r\n                  showMonthDropdown\r\n                  dropdownMode=\"select\"\r\n                  placeholderText=\"Date\"\r\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Email'\r\n                value={registrationForm.email}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, email: e.target.value })}\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='phone'>\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type='tel'\r\n                placeholder='Phone Number'\r\n                maxLength=\"10\"\r\n                value={registrationForm.phone}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, phone: e.target.value })}\r\n              // required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group controlId='Age'>\r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Age'\r\n                value={registrationForm.age}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, age: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='gender'>\r\n              <Form.Label>Gender</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                value={registrationForm.gender}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, gender: e.target.value })}\r\n                required\r\n              >\r\n                <option value=''>Choose...</option>\r\n                <option value='male'>Male</option>\r\n                <option value='female'>Female</option>\r\n                <option value='other'>Other</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='Weight'>\r\n              <Form.Label>Weight</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Weight in Kg'\r\n                value={registrationForm.weight}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, weight: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='address'>\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={1}\r\n                type='text'\r\n                placeholder='Address'\r\n                value={registrationForm.address}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, address: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Password'\r\n                value={registrationForm.password}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, password: e.target.value })}\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                value={registrationForm.confirmPassword}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, confirmPassword: e.target.value })}\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group controlId='reference' >\r\n              <Form.Label>Reference for vaidya manager?</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                type='text'\r\n                placeholder='Reference for vaidya manager?'\r\n                value={registrationForm.reference}\r\n                onChange={(e) => setRegistrationForm({ ...registrationForm, reference: e.target.value })}\r\n              >\r\n                <option value=\"\">Reference</option>\r\n                <option value=\"Newspaper\">Newspaper</option>\r\n                <option value=\"Internet\">Internet</option>\r\n                <option value=\"Call Center\">Call Center</option>\r\n                <option value=\"Friend/Relative\">Friend/Relative</option>\r\n                <option value=\"Other\">Other</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group controlId='registrationFor'>\r\n              <Form.Label>Registration For?</Form.Label>\r\n              <div>\r\n                <Form.Check\r\n                  inline\r\n                  type='radio'\r\n                  label='Therapy'\r\n                  name='registrationFor'\r\n                  id='therapy'\r\n                  value='Therapy'\r\n                  // checked={registrationForm.registrationFor === 'therapy'}\r\n                  onChange={(e) => setRegistrationForm({ ...registrationForm, registrationFor: e.target.value })}\r\n                  required\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type='radio'\r\n                  label='Inquiry'\r\n                  name='registrationFor'\r\n                  id='inquiry'\r\n                  value='Inquiry'\r\n                  // checked={registrationForm.gender === 'female'}\r\n                  onChange={(e) => setRegistrationForm({ ...registrationForm, registrationFor: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Button type='submit' variant='primary' className='mb-1'>\r\n          Sign Up\r\n        </Button>\r\n        <ToastContainer autoClose={10000} />\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from 'react'\r\n// Bootstrap Components\r\nimport { Form, Button, Row, Col} from 'react-bootstrap'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI Components\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n// Redux Actions\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\n\r\nconst Profile = ({ history }) => {\r\n    // State to hold email and password\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Get user details from Redux store\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    // Get user token from Redux store\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    // Get update status on user info\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // If there is NO user info then redirect to login page\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setPhone(user.phone)\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch, user])\r\n\r\n    // Handler that logs in the user\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Check if passwords are the same\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // Dispatch update profile reducer\r\n            dispatch(updateUserProfile({ id: user._id, name, email, phone, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {success && (\r\n                    <Message variant='success'>Profile Updated</Message>\r\n                )}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='email@example.com'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='phone'>\r\n                        <Form.Label>Phone </Form.Label>\r\n                        <Form.Control\r\n                            type='phone'\r\n                            placeholder='10 digit mobile no'\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <Button\r\n                    className='btn-sm'\r\n                    variant='light'\r\n                >\r\n                    Details\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport M from 'materialize-css'\r\n\r\n\r\n\r\nconst Reset = () => {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = (e) => {\r\n        // console.log(\"hi postdata reset\")\r\n        e.preventDefault()\r\n        console.log(email)\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch('http://localhost:8000/api/users/resetpassword', {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n          \r\n            body: JSON.stringify({\r\n                email\r\n                \r\n            })\r\n            \r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    // console.log(\"object\")\r\n                    alert(\"Please Check your mail\")\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    alert('Please Check Your Mail')\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                    // history.push('/login')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n      <div>\r\n            <section className=\"vh-100\">\r\n                <div className=\"container py-5 h-100\">\r\n                    <div className=\"row d-flex align-items-center justify-content-center h-100\">\r\n                        <div className=\"col-md-8 col-lg-7 col-xl-6\">\r\n                            <img \r\n                            // src={\"images/undrawl.png\"}\r\n                            src={\"http://localhost:3000/images/undrawl.png\"}\r\n                                className=\"img-fluid\" alt=\"Phone image\" />\r\n                        </div>\r\n                        <div className=\"col-md-7 col-lg-5 col-xl-5 offset-xl-1\">\r\n                            <Form onSubmit={PostData}>\r\n                                <div className=\"form-outline mb-4\">\r\n                                    <input type=\"email\"\r\n                                        id=\"form1Example13\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        controlId='email'\r\n                                        placeholder='email@example.com'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)} />\r\n                                </div>\r\n                                <Button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" style={{ backgroundColor: \"#3b5998\" }}\r\n                                 \r\n                                 >\r\n                                    Reset Password\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Reset","import React, { useState, useEffect} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n// Bootstrap Components\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport '../bootstrap.min.css'\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport M from 'materialize-css'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI Components\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n//css\r\nimport \"../login.css\"\r\n\r\nconst NewPassword = ({ location, history }) => {\r\n    // State to hold email and password\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [position, setPosition] = useState('top-center');\r\n    const [message, setMessage] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams()\r\n    // console.log(token)\r\n    // Get user login info from Redux state\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        // If there is user info then redirect\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const PostData = (e)=>{\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n        \r\n            // setMessage('Passwords do not match')\r\n            alert(\"Password do no match\")\r\n        }\r\n         else {\r\n            // Dispatch Register\r\n            fetch(\"https://vaidyabackend.vercel.app/api/users/new-password\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    password,\r\n                    token\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(data)\r\n               if(data.error){\r\n                alert(\"Please Check your mail\")\r\n                  M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n               }\r\n               else{\r\n                   M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n                   history.push('/login')\r\n               \r\n               }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n       \r\n    }\r\n    // Handler that logs in the user\r\n    \r\n    return (\r\n        <div>\r\n            <section className=\"vh-100\">\r\n                <div className=\"container py-5 h-100\">\r\n                    <div className=\"row d-flex align-items-center justify-content-center h-100\">\r\n                        <div className=\"col-md-8 col-lg-7 col-xl-6\">\r\n                            <img src={\"http://localhost:3000/images/undrawl.png\"}\r\n                                className=\"img-fluid\" alt=\"Phone image\" />\r\n                        </div>\r\n                        <div className=\"col-md-7 col-lg-5 col-xl-5 offset-xl-1\">\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                            {loading && <Loader />}\r\n                            <Form \r\n                            onSubmit={PostData}\r\n                            >\r\n                                <div className=\"form-outline mb-4\">\r\n                                    <input type=\"password\"\r\n                                        id=\"form1Example13\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        controlId='password'\r\n                                        placeholder='New Password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)} />\r\n                                </div>\r\n\r\n                                <div className=\"form-outline mb-4\">\r\n                                    <input type=\"password\"\r\n                                        id=\"form1Example13\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        controlId='confirmPassword'\r\n                                        placeholder='Confirm Password'\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                                </div>\r\n\r\n                                <Button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" style={{ backgroundColor: \"#3b5998\" }}\r\n                                //  onClick={()=>PostData()}\r\n                                 >\r\n                                    Update Password\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n\r\n\r\n","import React from 'react'\r\nimport \"../trial.css\"\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst PrescriptionTemplate = (inputFields) => {\r\n\r\n    // console.log(\"Success Prescription Template\",inputFields)\r\n    //     doc.save('Prescription.pdf')\r\n    const data = []\r\n    // inputFields.forEach((a)=>{\r\n    //     data.push(Object.values(a));\r\n    // })\r\n    const [head] = React.useState([\"Drug\", \"Daily Dose\", \"Duration\", \"Instruction\"]);\r\n    const [body] = React.useState(data);\r\n\r\n    \r\n    const generatePDF = () => {\r\n        let doc = new jsPDF(\"p\", \"pt\", \"a4\");\r\n\r\n        doc.setFont(\"Calibri\", \"bold\");\r\n        doc.setFontSize(14);\r\n        doc.setTextColor(14, 3, 64);\r\n\r\n        //   doc.text(\"Prescription\", 20, 140);\r\n        doc.text(\"Octonyan loves jsPDF\", 25, 10);\r\n        doc.addImage(\"/images/mindvein.png\", \"PNG\", 20, 60, 140, 74);\r\n        doc.text(\"Doctor's Name\", 520, 135, null, null, \"right\");\r\n        // doc.addImage(\"/images/mindvein.png\", \"PNG\", X-axis, Y-asis, width, height);\r\n        doc.line(20, 142, 550, 142);\r\n        doc.text(\"Prescription\", 20, 190);\r\n\r\n        //   doc.text(\"Table 2\", 20, 300);\r\n        //   doc.line(20, 302, 550, 302);\r\n\r\n        doc.autoTable({\r\n            margin: { top: 250, left: 20, bottom: 30 },\r\n            head: [head],\r\n            body: [body[0], body[1], body[2]],\r\n        });\r\n\r\n        //   doc.autoTable({\r\n        //     margin: { top: 400, left: 20, bottom: 30 },\r\n        //     head: [head],\r\n        //     body: [body[0], body[1], body[2], body[3], body[4]],\r\n        //   });\r\n\r\n        window.open(doc.output(\"bloburl\"), \"_blank\");\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: \"10rem\" }}>\r\n            <button onClick={generatePDF} type=\"primary\">Download PDF</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PrescriptionTemplate","import { createBrowserHistory } from 'history'\r\nexport default createBrowserHistory()","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\nconst RefundPolicy = ({ history }) => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"text-center\">\r\n        <Card.Header>Refund Policy</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title >\r\n            <strong style={{ lineHeight: \"2.2\" }}>\r\n              Welcome\r\n            </strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-12px\" }}>\r\n            Sorry, these medications are non-refundable and non-exchangeable.\r\n          </Card.Text>\r\n\r\n        </Card.Body>\r\n\r\n\r\n\r\n\r\n        {/* <Card.Footer className=\"text-muted\">\r\n              <p>\r\n            &copy; {currentYear} <strong>Mindvein</strong> - Medicine online Store\r\n          </p>\r\n          </Card.Footer> */}\r\n      </Card>\r\n      <p className=\"footer-links\">\r\n        <a\r\n          href=\"#\"\r\n          target=\"_blank\"\r\n        >\r\n        </a>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RefundPolicy","import React from 'react'\r\nimport { Container, Card } from 'react-bootstrap'\r\n\r\n\r\nconst PrivacyPolicy = ({ history }) => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <Container>\r\n      <Card className=\"text-center\">\r\n        <Card.Header> \r\n       Privacy Policy</Card.Header>\r\n        {/* <Card.Body>\r\n          <Card.Title>\r\n          <strong>  Privacy Policy for Mindvein</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-10px\"}}>\r\n            These terms and conditions outline the rules and regulations for the use of Mindvein’s Website, located at www.mindvein.com\r\n            By accessing this website we assume you accept these terms and conditions. Do not continue to use Mindvein if you do not agree to take all of the terms and conditions stated on this page.\r\n            The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: “Client”, “You” and “Your” refers to you, the person log on this website and compliant to the Company’s terms and conditions. “The Company”, “Ourselves”, “We”, “Our”, “Mindvein”, “Mindvein Healthcare Pvt. Ltd.” and “Us”, refers to our Company. “Party”, “Parties”, or “Us”, refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of provision of the Company’s stated services, in accordance with and subject to, prevailing law of India. Any use of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring to same.\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"1.2\"}}> Consent</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            By using our website, you hereby consent to our Privacy Policy and agree to its terms.\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"2.2\"}}> Information we collect </strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\r\n            If you contact us directly, we may receive additional information about you such as your name, email address, phone number, and the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\r\n            When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"2.2\"}}>   How we use your information </strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            We use the information we collect in various ways, including to:\r\n            - Provide, operate, and maintain our website.\r\n            - Improve, personalize, and expand our website\r\n            - Understand and analyze how you use our website\r\n            - Develop new products, services, features, and functionality\r\n            - Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the website, and for marketing and promotional purposes\r\n            - Send you emails\r\n            - Find and prevent fraud\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"2.2\"}}>  Log Files</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            Mindvein follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services’ analytics. The information collected by log files include internet protocol (IP)\r\n addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users’ movement on the website, and gathering demographic information.\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"2.2\"}}>Cookies and Web Beacons</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            Like any other website, Mindvein uses ‘cookies’. These cookies are used to store information including visitors’ preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users’ experience by customizing our web page content based on visitors’ browser type and/or other information.\r\n            For more general information on cookies, please read “What Are Cookies”.\r\n            Our Advertising Partners\r\n            Some of advertisers on our site may use cookies and web beacons. Our advertising partners are listed below. Each of our advertising partners has their own Privacy Policy for their policies on user data. For easier access, we hyperlinked to their Privacy Policies below\r\n            Google https://policies.google.com/technologies/ads\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"2.2\"}}>Advertising Partners Privacy Policies</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            You may consult this list to find the Privacy Policy for each of the advertising partners of Mindvein.\r\n            Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Mindvein, which are sent directly to users’ browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\r\n            Note that Mindvein has no access to or control over these cookies that are used by third-party advertisers.\r\n          </Card.Text>\r\n          <Card.Title>\r\n          <strong style={{lineHeight: \"2.2\"}}>Third Party Privacy Policies</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-12px\"}}>\r\n            Mindvein’s Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.\r\n            You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers’ respective websites.\r\n          </Card.Text>\r\n        </Card.Body> */}\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PrivacyPolicy","import React from 'react'\r\nimport { Container, Card, } from 'react-bootstrap'\r\n\r\n\r\nconst TermsAndConditions = ({ history }) => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"text-center\">\r\n        <Card.Header>\r\n          Terms And Conditions</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <strong>\r\n              Welcome to Mindvein!\r\n            </strong>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            These terms and conditions outline the rules and regulations for the use of Mindvein’s Website, located at www.mindvein.com\r\n            By accessing this website we assume you accept these terms and conditions. Do not continue to use Mindvein if you do not agree to take all of the terms and conditions stated on this page.\r\n            The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: “Client”, “You” and “Your” refers to you, the person log on this website and compliant to the Company’s terms and conditions. “The Company”, “Ourselves”, “We”, “Our”, “Mindvein”, “Mindvein Healthcare Pvt. Ltd.” and “Us”, refers to our Company. “Party”, “Parties”, or “Us”, refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of provision of the Company’s stated services, in accordance with and subject to, prevailing law of India. Any use of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring to same.\r\n          </Card.Text>\r\n          <Card.Title>\r\n\r\n            <strong style={{ lineHeight: \"2.2\" }}>\r\n\r\n              Cookies\r\n            </strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-17px\" }}>\r\n            We employ the use of cookies. By accessing Mindvein, you agreed to use cookies in agreement with the Mindvein’s Privacy Policy.\r\n            Most interactive websites use cookies to let us retrieve the user’s details for each visit. Cookies are used by our website to enable the functionality of certain areas to make it easier for people visiting our website. Some of our affiliate/advertising partners may also use cookies.\r\n          </Card.Text>\r\n          <Card.Title>\r\n            <strong style={{ lineHeight: \"2.2\" }}> License</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-16px\" }}>\r\n\r\n            Unless otherwise stated, Mindvein and/or its licensors own the intellectual property rights for all material on Mindvein. All intellectual property rights are reserved. You may access this from Mindvein for your own personal use subjected to restrictions set in these terms and conditions.\r\n            You must not:\r\n            Republish material from Mindvein\r\n            Sell, rent or sub-license material from Mindvein\r\n            Reproduce, duplicate or copy material from Mindvein\r\n            Redistribute content from Mindvein\r\n            This Agreement shall begin on the date hereof.\r\n            Parts of this website offer an opportunity for users to post and exchange opinions and information in certain areas of the website. Mindvein does not filter, edit, publish or review Comments prior to their presence on the website. Comments do not reflect the views and opinions of Mindvein, its agents and/or affiliates. Comments reflect the views and opinions of the person who post their views and opinions. To the extent permitted by applicable laws, Mindvein shall not be liable for the Comments or for any liability, damages or expenses caused and/or suffered as a result of any use of and/or posting of and/or appearance of the Comments on this website.\r\n            Mindvein reserves the right to monitor all Comments and to remove any Comments which can be considered inappropriate, offensive or causes breach of these Terms and Conditions.\r\n\r\n            You warrant and represent that:\r\n            •\tYou are entitled to post the Comments on our website and have all necessary licenses and consents to do so;\r\n            •\tThe Comments do not invade any intellectual property right, including without limitation copyright, patent or trademark of any third party;\r\n            •\tThe Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material which is an invasion of privacy\r\n            •\tThe Comments will not be used to solicit or promote business or custom or present commercial activities or unlawful activity.\r\n            You hereby grant Mindvein a non-exclusive license to use, reproduce, edit and authorize others to use, reproduce and edit any of your Comments in any and all forms, formats or media.\r\n          </Card.Text>\r\n\r\n          <Card.Title>\r\n            <strong style={{ lineHeight: \"2.2\" }}> Hyper linking to our Content</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-12px\" }}>\r\n            <p>\r\n              The following organizations may link to our Website without prior written approval:\r\n            </p>\r\n            <p>Government agencies;</p>\r\n            <p>Search engines;</p>\r\n            <p>News organizations;</p>\r\n\r\n\r\n            Online directory distributors may link to our Website in the same manner as they hyperlink to the Websites of other listed businesses; and\r\n            System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls, and charity fundraising groups which may not hyperlink to our Web site.\r\n            These organizations may link to our home page, to publications or to other Website information so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products and/or services; and (c) fits within the context of the linking party’s site.\r\n            We may consider and approve other link requests from the following types of organizations:\r\n            Commonly-known consumer and/or business information sources;\r\n            Dot.com community sites;\r\n            Associations or other groups representing charities;\r\n            Online directory distributors;\r\n            Internet portals;\r\n            Accounting, law and consulting firms; and\r\n            Educational institutions and trade associations\r\n            <p>\r\n              We will approve link requests from these organizations if we decide that:\r\n              (a) the link would not make us look unfavorably to ourselves or to our accredited businesses;\r\n              (b) the organization does not have any negative records with us;\r\n              (c) the benefit to us from the visibility of the hyperlink compensates the absence of Mindvein; and\r\n              (d) the link is in the context of general resource information.\r\n            </p>\r\n\r\n            <p>\r\n              These organizations may link to our home page so long as the link:\r\n              (a) is not in any way deceptive;\r\n              (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products or services; and\r\n              (c) fits within the context of the linking party’s site.\r\n\r\n              If you are one of the organizations listed in paragraph 2 above and are interested in linking to our website, you must inform us by sending an e-mail to Mindvein. Please include your name, your organization name, contact information as well as the URL of your site, a list of any URLs from which you intend to link to our Website, and a list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.\r\n              Approved organizations may hyperlink to our Website as follows:\r\n              By use of our corporate name; or\r\n              By use of the uniform resource locator being linked to; or\r\n              By use of any other description of our Website being linked to that makes sense within the context and format of content on the linking party’s site.\r\n              No use of Mindvein’s logo or other artwork will be allowed for linking absent a trademark license agreement.\r\n            </p>\r\n\r\n          </Card.Text>\r\n          <Card.Title>\r\n            <strong style={{ lineHeight: \"2.2\" }}>iFrames</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-9px\" }}>\r\n            Without prior approval and written permission, you may not create frames around our WebPages that alter in any way the visual presentation or appearance of our Website.\r\n          </Card.Text>\r\n          <Card.Title>\r\n            <strong style={{ lineHeight: \"2.2\" }}>Content Liability</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-10px\" }}>\r\n            We shall not be hold responsible for any content that appears on your Website. You agree to protect and defend us against all claims that are rising on your Website. No link(s) should appear on any Website that may be interpreted as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the infringement or other violation of, any third party rights.\r\n          </Card.Text>\r\n          {/* <Card.Title>\r\n            <strong style={{lineHeight: \"2.2\"}}>Your Privacy</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{marginTop:\"-9px\"}}>\r\n            Please read Privacy Policy\r\n          </Card.Text> */}\r\n          <Card.Title>\r\n            <strong style={{ lineHeight: \"2.2\" }}>Reservation of Rights</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-10px\" }}>\r\n            We reserve the right to request that you remove all links or any particular link to our Website. You approve to immediately remove all links to our Website upon request. We also reserve the right to amen these terms and conditions and it’s linking policy at any time. By continuously linking to our Website, you agree to be bound to and follow these linking terms and conditions.\r\n            Removal of links from our website\r\n            If you find any link on our Website that is offensive for any reason, you are free to contact and inform us any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you directly.\r\n            We do not ensure that the information on this website is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the website remains available or that the material on the website is kept up to date.\r\n          </Card.Text>\r\n          <Card.Title>\r\n            <strong style={{ lineHeight: \"2.2\" }}>Disclaimer</strong>\r\n          </Card.Title>\r\n          <Card.Text style={{ marginTop: \"-10px\" }}>\r\n\r\n            To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions relating to our website and the use of this website. Nothing in this disclaimer will:\r\n            Limit or exclude our or your liability for death or personal injury;\r\n            Limit or exclude our or your liability for fraud or fraudulent misrepresentation;\r\n            Limit any of our or your liabilities in any way that is not permitted under applicable law; or\r\n            Exclude any of our or your liabilities that may not be excluded under applicable law.\r\n            We do not ensure that the information on this website is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the website remains available or that the material on the website is kept up to date.\r\n            As long as the website and the information and services on the website are provided free of charge, we will not be liable for any loss or damage of any nature.\r\n            I agree and consent to receive all communications at the mobile number provided, even if this mobile number is registered under DND/NCPR list under TRAI regulations. And for that purpose, I further authorize Company to share/disclose the information to any third party service provider or any affiliates, group companies, their authorized agents, or third-party service providers.\r\n          </Card.Text>\r\n\r\n        </Card.Body>\r\n        {/* <Card.Footer className=\"text-muted\">\r\n              <p>\r\n            &copy; {currentYear} <strong>Mindvein</strong> - Medicine online Store\r\n          </p>\r\n          </Card.Footer> */}\r\n      </Card>\r\n      <p className=\"footer-links\">\r\n        <a\r\n          href=\"#\"\r\n          target=\"_blank\"\r\n        >\r\n        </a>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TermsAndConditions","import React from 'react'\r\nimport '../breadcrumb.css'\r\n\r\nfunction Breadcrumb() {\r\n    const breadCrumbHeading = window.location.href.split(\"/\").slice(-1)[0];\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"pa-breadcrumb\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"pa-breadcrumb-box\">\r\n                        {breadCrumbHeading === 'about' ? (\r\n                            <>\r\n                                <h1>About us</h1>\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"/\">\r\n                                            Home</a>\r\n                                    </li>\r\n                                    <li>About us</li>\r\n                                </ul>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <h1>Contact us</h1>\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"/\">\r\n                                            Home</a>\r\n                                    </li>\r\n                                    <li>Contact us</li>\r\n                                </ul>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Breadcrumb","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport \"../contact.css\";\r\nimport Breadcrumb from '../components/Breadcrumb';\r\n\r\nconst ContactUs = ({ history }) => {\r\n  const currentYear = new Date().getFullYear();\r\n  return (\r\n    <>\r\n      <Breadcrumb />\r\n      <Container>\r\n        <section className=\"contact-page-sec\">\r\n          <div className=\"contactcontainer\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4  d-flex\">\r\n                <div className=\"contact-info\">\r\n                  <div className=\"contact-info-item\">\r\n                    <div className=\"contact-info-icon\">\r\n                      <i className=\"fas fa-map-marked\"></i>\r\n                    </div>\r\n                    <div className=\"contact-info-text\">\r\n                      <h2> Clinic Address</h2>\r\n                      <span style={{padding:\"5px\"}}>  Apartment Sidhharat Nagar, near Aundh, Pune Parihar Chowk, Maharashtra</span>\r\n           \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4  d-flex\">\r\n                <div className=\"contact-info\">\r\n                  <div className=\"contact-info-item\">\r\n                    <div className=\"contact-info-icon\">\r\n                      <i className=\"fas fa-envelope\"></i>\r\n                    </div>\r\n                    <div className=\"contact-info-text  flex-fill\" >\r\n                      <h2>E-mail</h2>\r\n                  \r\n                      <span>Clinic@gmail.com</span>\r\n                  \r\n                      <span> Mobile No: 7854123695</span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4  d-flex\">\r\n                <div className=\"contact-info\">\r\n                  <div className=\"contact-info-item\">\r\n                    <div className=\"contact-info-icon\">\r\n                      <i className=\"fas fa-clock\"></i>\r\n                    </div>\r\n                    <div className=\"contact-info-text\" >\r\n                      <h2>Clinic time</h2>\r\n                 \r\n                      <span>Morning - 10:30 am - 2.00 pm</span>\r\n                      <span>Evening - 5:00 pm - 8:00 pm</span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"pa-contact-form\">\r\n                <h5 className='contact-heading'>Please Fill the Form</h5>\r\n                <form>\r\n                  <input type=\"text\" placeholder=\"Enter your name\" name=\"full_name\" id=\"full_name\" className=\"require\" />\r\n                  <input type=\"text\" placeholder=\"Enter your email\" name=\"email\" id=\"email\" className=\"require\" data-valid=\"email\" data-error=\"Email should be valid.\" />\r\n                  <input type=\"text\" placeholder=\"Enter your subject\" name=\"subject\" id=\"subject\" className=\"require\" />\r\n                  <textarea placeholder=\"Message here\" name=\"message\" id=\"message\" className=\"require\"></textarea>\r\n                  <button type=\"button\" className=\"pa-btn submitForm\">submit</button>\r\n                  <div className=\"response\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactUs\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import{\r\n    DOCTORS_LIST_SUCCESS,\r\n    DOCTORS_LIST_FAIL,\r\n    DOCTORS_UPDATE_SUCCESS,\r\n    DOCTORS_UPDATE_FAIL,\r\n    DOCTORS_UPDATE_REQUEST,\r\n    DOCTORS_APPOINTMENT_SUCCESS,\r\n    DOCTORS_APPOINTMENT_FAIL,\r\n    DOCTORS_APPOINTMENT_REQUEST,\r\n    DOCTORS_DELETE_SUCCESS,\r\n    DOCTORS_DELETE_FAIL,\r\n    DOCTORS_DELETE_REQUEST,\r\n    DOCTORS_DATA_FAIL,\r\n    DOCTORS_DATA_REQUEST,\r\n    DOCTORS_DATA_SUCCESS\r\n} from '../constants/doctorConstants';\r\nimport axios from 'axios';\r\n\r\n//doctor api\r\nexport const createDoctorData = (doctor) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DOCTORS_DATA_REQUEST,\r\n        })\r\n\r\n        // Get user login and user info\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // console.log(\"${userInfo.token}\", userInfo);\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(`/api/doctors/add_doc`,doctor ,config)\r\n\r\n        // Dispatch doctor success after making the request\r\n        dispatch({\r\n            type: DOCTORS_DATA_SUCCESS,\r\n            payload: data,\r\n        })\r\n        alert('Doctor Added Successfully..')\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DOCTORS_DATA_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listDoctors = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: DOCTORS_LIST_SUCCESS,\r\n        })\r\n        const { data } = await axios.get('/api/doctors/doc')\r\n\r\n        dispatch({\r\n            type: DOCTORS_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DOCTORS_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateDoctor = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DOCTORS_UPDATE_REQUEST,\r\n        })\r\n\r\n        // Get user login and user info\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // console.log(\"${userInfo.token}\", userInfo);\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.put(`/api/doctors/${id}/doc`,\r\n            config\r\n        )\r\n\r\n        // Dispatch doctor success after making the request\r\n        dispatch({\r\n            type: DOCTORS_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DOCTORS_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateAppointments = (id, dateid, details) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DOCTORS_APPOINTMENT_REQUEST,\r\n        })\r\n\r\n        // Get user login and user info\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // console.log(\"${userInfo.token}\", userInfo);\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.put(`/api/doctors/${id}/doc/${dateid}`,\r\n            details, config)\r\n\r\n        // Dispatch doctor success after making the request\r\n        dispatch({\r\n            type: DOCTORS_APPOINTMENT_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"Success\")\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DOCTORS_APPOINTMENT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n        // console.log(\"Fail\")\r\n\r\n    }\r\n}\r\n\r\nexport const cancelAppointmentDates = (id, deleteid) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: DOCTORS_DELETE_REQUEST,\r\n        })\r\n\r\n        // Get user login to get the bearer token\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.delete(\r\n            `/api/doctors/${id}/deleteappointment/${deleteid}`,\r\n            config\r\n        )\r\n        // Dispatch  success after making the request\r\n        dispatch({\r\n            type: DOCTORS_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"Success Appointment Delete\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DOCTORS_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n        // console.log(\"Fail\")\r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\n// Bootstrap Components\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI Components\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\n// Redux Actions\r\nimport { register } from '../actions/userActions'\r\n//Packages\r\nimport dayjs from 'dayjs'\r\n//css\r\n// import '../register.css'\r\nimport { createDoctorData } from '../actions/doctorActions'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Role = ({ location, history }) => {\r\n    // State to hold email and password\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [age, setAge] = useState();\r\n    const [gender, setGender] = useState();\r\n    const [role, setRole] = useState('');\r\n    const [dob, setDob] = useState();\r\n    const [qualification, setQualification] = useState('');\r\n    const [experience, setExperience] = useState('');\r\n    const [fee, setFee] = useState();\r\n    const [file, setFile] = useState()\r\n    // const [isAdmin, setIsAdmin] = useState();\r\n    const dispatch = useDispatch()\r\n\r\n    // Get user login info from Redux state\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n    // console.log(\"user is\", userInfo)s\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    var isAdmin = false\r\n\r\n    //calculate the age\r\n    const getAge = (dob) => {\r\n        // console.log(\"do\", dob)\r\n        var today = dayjs();\r\n        var birthdate = dayjs(dob)\r\n        var patitentAge = today.diff(birthdate, 'year')\r\n        // console.log(\"patient age is\",patitentAge)\r\n        setAge(patitentAge)\r\n    }\r\n    useEffect(() => {\r\n        getAge(dob)\r\n    }, [dob])\r\n\r\n    useEffect(() => {\r\n        // If there is user info then redirect\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    // Handler that logs in the user\r\n    const submitHandler = (e, userInfo) => {\r\n        e.preventDefault()\r\n\r\n        // console.log(role)\r\n        // Check if passwords are the same\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        }\r\n        else {\r\n            // Dispatch Register\r\n            if (role === \"Doctor\") {\r\n                isAdmin = true\r\n                console.log(\"first\", isAdmin)\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n                const data = {\r\n                    name: name,\r\n                    email: email,\r\n                    phone: phone,\r\n                    password: password,\r\n                    dob: dob,\r\n                    age: age,\r\n                    gender: gender,\r\n                    isAdmin: isAdmin\r\n                }\r\n                axios\r\n                    .post(`https://vaidyabackend.vercel.app/api/users`, data)\r\n                    .then((response) => {\r\n                        console.log(response.data)\r\n\r\n                        dispatch(createDoctorData({\r\n                            name: response.data.name,\r\n                            qualification: qualification,\r\n                            experience: experience,\r\n                            email_id: response.data.email,\r\n                            phone_no: response.data.phone,\r\n                            consultation_fee: fee,\r\n                            profilePictureURL: file\r\n                        }))\r\n                        setFee('')\r\n                        setQualification('')\r\n                        setExperience('')\r\n                        setEmail('')\r\n                        setPhone('')\r\n                        setFile('')\r\n                    })\r\n                    .catch((err) => console.error(err));\r\n            }\r\n            else {\r\n                console.log(\"Second\")\r\n                dispatch(register(name, email, phone, password, dob, age, gender, false))\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleImageUpload = (file) => {\r\n        // const base64 = imageConvertor(file)\r\n        // setFile(base64)\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file)\r\n        fileReader.onload = () => {\r\n\r\n            console.log(fileReader.result)\r\n            setFile(fileReader.result)\r\n        }\r\n    }\r\n\r\n  \r\n \r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className='formContent'>\r\n                    <FormContainer>\r\n                        <h1>Sign Up</h1>\r\n                        {error && <Message variant='danger'>{error}</Message>}\r\n                        {message && <Message variant='danger'>{message}</Message>}\r\n                        {loading && <Loader />}\r\n                        <Form onSubmit={submitHandler} >\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='Role'>\r\n                                <Form.Label>Role</Form.Label>\r\n                                <Form.Control as=\"select\"\r\n                                    value={role}\r\n                                    type='text'\r\n                                    placeholder='Optional'\r\n                                    onChange={(e) => setRole(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Select Role</option>\r\n                                    <option value=\"Patient\">Patient</option>\r\n                                    <option value=\"Doctor\">Doctor</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            {role === \"Doctor\" ?\r\n                                <>\r\n                                    <Form.Group controlId='qualification'>\r\n                                        <Form.Label>Qualification</Form.Label>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='qualification'\r\n                                            value={qualification}\r\n                                            onChange={(e) => setQualification(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='experience'>\r\n                                        <Form.Label>Experience</Form.Label>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='Experience'\r\n                                            value={experience}\r\n                                            onChange={(e) => setExperience(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='fee'>\r\n                                        <Form.Label>Consulation fee</Form.Label>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='e.g. 1000.00'\r\n                                            value={fee}\r\n                                            onChange={(e) => setFee(e.target.value)}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Default file input example</Form.Label>\r\n                                        <Form.Control\r\n                                            style={{ color: \"black\" }}\r\n                                            type=\"file\"\r\n                                            // value={file}\r\n                                            // onChange={(e) => setFile(e.target.value)}\r\n                                            onChange={(e) => handleImageUpload(e.target.files[0])}\r\n                                        />\r\n\r\n                                    </Form.Group>\r\n                                </> :\r\n                                <>\r\n                                    {role === \"Patient\" ?\r\n                                        <>\r\n                                            <Form.Group controlId='DOB'>\r\n                                                <Form.Label>Date of Birth</Form.Label>\r\n                                                <div >\r\n                                                    <DatePicker\r\n                                                        selected={dob}\r\n                                                        onChange={(date) => setDob(date)}\r\n                                                        peekNextMonth\r\n                                                        showMonthDropdown\r\n                                                        showYearDropdown\r\n                                                        dropdownMode=\"select\"\r\n                                                        placeholderText=\"DOB(Optional)\"\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='Age'>\r\n                                                <Form.Label>Age</Form.Label>\r\n                                                <Form.Control\r\n                                                    type='text'\r\n                                                    placeholder='Optional'\r\n                                                    value={age}\r\n                                                    onChange={(e) => setEmail(e.target.value)}\r\n\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='Gender'>\r\n                                                <Form.Label>Gender</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    value={gender}\r\n                                                    type='text'\r\n                                                    placeholder='Optional'\r\n                                                    onChange={(e) => setGender(e.target.value)}\r\n                                                >\r\n                                                    <option value=\"FEMALE\">FEMALE</option>\r\n                                                    <option value=\"MALE\">MALE</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </> : null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='email@example.com'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='phone'>\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control\r\n                                    type='phone'\r\n                                    placeholder=' 10 digit mobile number'\r\n                                    value={phone}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Enter password'\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='confirmPassword'>\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Confirm password'\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type='submit' variant='primary'>\r\n                                Register\r\n                            </Button>\r\n                        </Form >\r\n\r\n                    </FormContainer >\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Role\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import '../demoreg.css'\r\n// import '../register.css'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport dayjs from 'dayjs'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Container, Row, Card, Col, ListGroup, Button, Image, Form } from 'react-bootstrap';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     formControl: {\r\n//         //   margin: theme.spacing(1),\r\n//         width: \"13vw\"\r\n//     },\r\n//     // selectEmpty: {\r\n//     //     marginTop: theme.spacing(1)\r\n//     // },\r\n//     select: {\r\n//         height: \"6vh\"\r\n//     },\r\n//     inputLabel: {\r\n//         fontSize: \"16px\",\r\n//         alignSelf: \"center\"\r\n//     }\r\n// }));\r\n\r\nconst DemoRegistration = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [age, setAge] = useState();\r\n    const [gender, setGender] = useState();\r\n    const [dob, setDob] = useState();\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // const classes = useStyles();\r\n\r\n\r\n    // Get user login info from Redux state\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    //calculate the age\r\n    const getAge = (dob) => {\r\n        console.log(\"do\", dob)\r\n        var today = dayjs();\r\n        var birthdate = dayjs(dob)\r\n        var patitentAge = today.diff(birthdate, 'year')\r\n        console.log(\"patient age is\", patitentAge)\r\n        setAge(patitentAge)\r\n    }\r\n    useEffect(() => {\r\n        getAge(dob)\r\n    }, [dob])\r\n\r\n    useEffect(() => {\r\n        // If there is user info then redirect\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const togglePassword = () => {\r\n        // When the handler is invoked\r\n        // inverse the boolean state of passwordShown\r\n        setPasswordShown(!passwordShown);\r\n    };\r\n    // Handler that logs in the user\r\n    const submitHandler = (e) => {\r\n\r\n        e.preventDefault()\r\n        // Check if passwords are the same\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n\r\n            // Dispatch Register\r\n            // dispatch(register(name, email, phone, password, dob, age, gender, false))\r\n        }\r\n    }\r\n\r\n    const myFunction = () => {\r\n        var x = document.getElementById(\"password-field\");\r\n        if (x.type === \"password\") {\r\n            x.type = \"text\";\r\n        } else {\r\n            x.type = \"password\";\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* \r\n            <div className=\"wrapper\">\r\n                <div className='formContent'>\r\n                    <FormContainer>\r\n                        <h1 style={{marginLeft: \"-71px\"}}>Sign Up</h1>\r\n                        {error && <Message variant='danger'>{error}</Message>}\r\n                        {message && <Message variant='danger'>{message}</Message>}\r\n                        {loading && <Loader />}\r\n                        <Form onSubmit={submitHandler} className='registerform'>\r\n                            <Form.Group controlId='name' className='registerform-group'>\r\n                               \r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='DOB' className='registerform-group'>\r\n                                <div >\r\n                                    <DatePicker\r\n                                        selected={dob}\r\n                                        onChange={(date) => setDob(date)}\r\n                                        peekNextMonth\r\n                                        showMonthDropdown\r\n                                        showYearDropdown\r\n                                        dropdownMode=\"select\"\r\n                                        placeholderText=\"DOB\"\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='Age' className='registerform-group'>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Age'\r\n                                    value={age}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='Gender' className='registerform-group'>\r\n                                <Form.Control as=\"select\"\r\n                                    value={gender}\r\n                                    type='text'\r\n                                    placeholder='Gender'\r\n                                    onChange={(e) => setGender(e.target.value)}\r\n                                >\r\n                                      <option value=\"\">Select</option>\r\n                                    <option value=\"FEMALE\">FEMALE</option>\r\n                                    <option value=\"MALE\">MALE</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='email' className='registerform-group'>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='email@example.com'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='phone' className='registerform-group'>\r\n                                <Form.Control\r\n                                    type='phone'\r\n                                    placeholder='10 digit mobile number'\r\n                                    value={phone}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='password' className='registerform-group-pass'>\r\n                                <Form.Control\r\n                                   type={passwordShown ? \"text\" : \"password\"}\r\n                                    // type='password'\r\n                                    placeholder='Enter password'\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                >\r\n                                    \r\n                                </Form.Control>\r\n                                \r\n                            </Form.Group>\r\n                    \r\n                            <input type=\"checkbox\" onClick={togglePassword}/>\r\n                            <Form.Group controlId='confirmPassword' className='registerform-group'>\r\n                                <Form.Control\r\n                                    type='password'\r\n                                    placeholder='Confirm password'\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type='submit' variant='primary'>\r\n                                Register\r\n                            </Button>\r\n                        </Form >\r\n                        <Row className='py-3'>\r\n                            <Col style={{ color: \"black\" }}>\r\n                                Have an Account?{' '}\r\n\r\n                                <Link style={{ backgroundColor: \"white\" }}\r\n                                    to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                                >\r\n                                    Login\r\n                                </Link>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </FormContainer >\r\n\r\n                </div>\r\n            </div> */}\r\n\r\n            <Form onSubmit={submitHandler} className='registerform' >\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Full Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='phone'>\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type='tel'\r\n                                placeholder='Phone Number'\r\n                                value={phone}\r\n                                onChange={(e) => setPhone(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Password'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Confirm Password'\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='gender'>\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <Form.Control\r\n                                as='select'\r\n                                value={gender}\r\n                                onChange={(e) => setGender(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=''>Choose...</option>\r\n                                <option value='male'>Male</option>\r\n                                <option value='female'>Female</option>\r\n                                <option value='other'>Other</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DemoRegistration","\r\nimport {\r\n    THERAPY_ADD_REQUEST,\r\n    THERAPY_ADD_SUCCESS,\r\n    THERAPY_ADD_FAIL,\r\n}\r\n    from '../constants/therapyConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createTherapy = (\r\n    patientName,\r\n    therapycontact,\r\n    therapyemail,\r\n    therapyName,\r\n    therapyFees,\r\n    patientReview,\r\n    therapistName,\r\n    therapyreference) => async (dispatch) => {\r\n        try {\r\n            \r\n            dispatch({\r\n                type: THERAPY_ADD_REQUEST,\r\n            })\r\n\r\n            // Header to send with the request\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // Make request to server and get the response data\r\n            const { data } = await axios.post(\r\n                `/api/therapy/`,\r\n                {\r\n                    patientName,\r\n                    therapycontact,\r\n                    therapyemail,\r\n                    therapyName,\r\n                    therapyFees,\r\n                    patientReview,\r\n                    therapistName,\r\n                    therapyreference\r\n                },\r\n                config\r\n            )\r\n\r\n            // Dispatch user register success after making the request\r\n            dispatch({\r\n                type: THERAPY_ADD_SUCCESS,\r\n                payload: data,\r\n            })\r\n            alert('Therapy Data Successfully!');\r\n            // Login in the user as well after registering\r\n            dispatch({\r\n                type: THERAPY_ADD_SUCCESS,\r\n                payload: data,\r\n            })\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: THERAPY_ADD_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            })\r\n\r\n        }\r\n    }","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport '../demoreg.css'\r\nimport '../register.css'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { createTherapy } from '../actions/therapyActions'\r\n\r\nconst Therapy = ({ location, history }) => {\r\n    const defaultData = {\r\n        patientName: \"\",\r\n        contact: \"\",\r\n        email: \"\",\r\n        therapyname: \"\",\r\n        therapyfees: \"\",\r\n        patientreview: \"\",\r\n        therapistName: \"\",\r\n        reference: \"\"\r\n    }\r\n\r\n    const [therapyform, setTherapyform] = useState(defaultData);\r\n    const dispatch = useDispatch();\r\n\r\n    const addTherapy = useSelector((state) => state.createTherapy)\r\n    const { loading, error, success, therapyData } = addTherapy\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // console.log(\"thrapy\", therapyform);\r\n        dispatch(createTherapy(\r\n            therapyform.patientName,\r\n            therapyform.contact,\r\n            therapyform.email,\r\n            therapyform.therapyname,\r\n            therapyform.therapyfees,\r\n            therapyform.patientreview,\r\n            therapyform.therapistName,\r\n            therapyform.reference))\r\n        setTherapyform(defaultData)\r\n    }\r\n\r\n\r\n    const resetHandler = (e) => {\r\n        setTherapyform(defaultData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            console.log(\"sydg\")\r\n        }\r\n    }, [history, success])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='col-md-8'>\r\n                <h1 style={{ marginLeft: \"44px\" }}>Therapy Form</h1>\r\n                <Form onSubmit={submitHandler} className='registerform'>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Name</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Group controlId='name' >\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='Full Name'\r\n                                            value={therapyform.patientName}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, patientName: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>\r\n                                        Contact No.\r\n                                    </label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='contact'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            maxLength=\"10\"\r\n                                            placeholder='10 digit mobile number'\r\n                                            value={therapyform.contact}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, contact: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Email Id</label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='email' >\r\n                                        <Form.Control\r\n                                            type='email'\r\n                                            placeholder='email@example.com'\r\n                                            value={therapyform.email}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, email: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Therapy Name</label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='Therapy Name' >\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder=' Therapy Name'\r\n                                            value={therapyform.therapyname}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, therapyname: e.target.value })}\r\n\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Therapy Fees</label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='Therapy Fees' >\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='Therapy Fees'\r\n                                            value={therapyform.therapyfees}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, therapyfees: e.target.value })}\r\n\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Patient Review\r\n                                    </label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId=\"Patient Review\" >\r\n\r\n                                        <Form.Control as=\"textarea\" rows={2}\r\n                                            type='text'\r\n                                            placeholder='Patient Review'\r\n                                            value={therapyform.patientreview}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, patientreview: e.target.value })}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Therapist Name</label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='Therapist'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='Therapist Name'\r\n                                            value={therapyform.therapistName}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, therapistName: e.target.value })}\r\n\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>\r\n                                        Reference of Vaidya Manager?\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Group controlId='reference' >\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            type='text'\r\n                                            placeholder='Reference for vaidya manager?'\r\n                                            value={therapyform.reference}\r\n                                            onChange={(e) => setTherapyform({ ...therapyform, reference: e.target.value })}\r\n\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value=\"Newspaper\">Newspaper</option>\r\n                                            <option value=\"Internet\">Internet</option>\r\n                                            <option value=\"Call Center\">Call Center</option>\r\n                                            <option value=\"Friend/Relative\">Friend/Relative</option>\r\n                                            <option value=\"Other\">Other</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Save\r\n                                    </Button>\r\n\r\n                                    <Button style={{ marginLeft: \"5px\" }} onClick={resetHandler} variant='primary'>\r\n                                        Reset\r\n                                    </Button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Form >\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Therapy","import {\r\n    INQUIRY_ADD_REQUEST,\r\n    INQUIRY_ADD_SUCCESS,\r\n    INQUIRY_ADD_FAIL,\r\n}\r\n from '../constants/inquiryConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createInquiry = (  \r\n    inquiryName,\r\n    inquirycontact,\r\n    inquiryemail,\r\n    inquirySubject,\r\n    inquiryreference) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: INQUIRY_ADD_REQUEST,\r\n        })\r\n       \r\n        // Header to send with the request\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(\r\n            '/api/inquiry/',\r\n            { inquiryName,\r\n                inquirycontact,\r\n                inquiryemail,\r\n                inquirySubject,\r\n                inquiryreference},\r\n            config\r\n        )\r\n\r\n        // Dispatch user register success after making the request\r\n        dispatch({\r\n            type: INQUIRY_ADD_SUCCESS,\r\n            payload: data,\r\n        })\r\n        alert('Inquiry Data Successfully!');\r\n        // Login in the user as well after registering\r\n        dispatch({\r\n            type: INQUIRY_ADD_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INQUIRY_ADD_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport '../demoreg.css'\r\nimport '../register.css'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { createInquiry } from '../actions/inquiryActions';\r\n\r\n\r\nconst Inquiry = () => {\r\n  const defaultData = {\r\n    name: \"\",\r\n    contact: \"\",\r\n    email: \"\",\r\n    inquirySubject: \"\",\r\n    reference: \"\"\r\n  }\r\n  const [inquiryForm, setInquiryForm] = useState(defaultData)\r\n  const dispatch = useDispatch();\r\n\r\n  const addInquiry = useSelector((state) => state.createInquiry)\r\n  const { loading, error, success, inquiryData } = addInquiry\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // console.log(\"thrapy\", inquiryForm);\r\n    dispatch(createInquiry(\r\n      inquiryForm.name,\r\n      inquiryForm.contact,\r\n      inquiryForm.email,\r\n      inquiryForm.inquirySubject,\r\n      inquiryForm.reference,))\r\n    setInquiryForm(defaultData)\r\n\r\n  }\r\n\r\n  const resetHandler = (e) => {\r\n    setInquiryForm(defaultData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='col-md-8'>\r\n        <h1 style={{ marginLeft: \"44px\" }}>Inquiry</h1>\r\n        <Form onSubmit={submitHandler} className='registerform w-100'>\r\n          <table style={{ width: \"100%\" }}>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label> Name</label>\r\n                </td>\r\n                <td colSpan={5}>\r\n                  <Form.Group controlId='name' >\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Full Name'\r\n                      value={inquiryForm.name}\r\n                      onChange={(e) => setInquiryForm({ ...inquiryForm, name: e.target.value })}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Contact No.\r\n                  </label>\r\n                </td>\r\n                <td colSpan={5}>\r\n                  <Form.Group controlId='contact' >\r\n                    <Form.Control\r\n                      type='text'\r\n                      maxLength=\"10\"\r\n                      placeholder='10 digit mobile number'\r\n                      value={inquiryForm.contact}\r\n                      onChange={(e) => setInquiryForm({ ...inquiryForm, contact: e.target.value })}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>Email Id</label>\r\n                </td>\r\n                <td colSpan={5}>\r\n                  <Form.Group controlId='email' >\r\n                    <Form.Control\r\n                      type='email'\r\n                      placeholder='email@example.com'\r\n                      value={inquiryForm.email}\r\n                      onChange={(e) => setInquiryForm({ ...inquiryForm, email: e.target.value })}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>For What?\r\n                  </label>\r\n                </td>\r\n                <td colSpan={5}>\r\n                  <Form.Group controlId=\"Inquiry\" >\r\n\r\n                    <Form.Control as=\"textarea\" rows={2}\r\n                      type='text'\r\n                      placeholder='Inquiry Subject'\r\n                      value={inquiryForm.inquirySubject}\r\n                      onChange={(e) => setInquiryForm({ ...inquiryForm, inquirySubject: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Reference of Vaidya Manager?\r\n                  </label>\r\n                </td>\r\n                <td colSpan={5}>\r\n                  <Form.Group controlId='reference'>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      type='text'\r\n                      placeholder='Reference for vaidya manager?'\r\n                      value={inquiryForm.reference}\r\n                      onChange={(e) => setInquiryForm({ ...inquiryForm, reference: e.target.value })}\r\n\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Newspaper\">Newspaper</option>\r\n                      <option value=\"Internet\">Internet</option>\r\n                      <option value=\"Call Center\">Call Center</option>\r\n                      <option value=\"Friend/Relative\">Friend/Relative</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td colSpan={5}>  <Button type='submit' variant='primary'>\r\n                  Save\r\n                </Button>\r\n\r\n                  <Button style={{ marginLeft: \"5px\" }} onClick={resetHandler} variant='primary'>\r\n                    Reset\r\n                  </Button></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Form >\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Inquiry","import React, { useState } from 'react'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Inquiry from '../screens/Inquiry';\r\nimport Register from '../screens/Register';\r\nimport Therapy from '../screens/Therapy';\r\n\r\nconst TabComponent = () => {\r\n    return (\r\n        <div>\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Patient\">\r\n                <Row>\r\n                    <Col className='ms-3' sm={2}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"Patient\">Patient\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"Therapy\">Therapy\r\n                             </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"Inquiry\">Inquiry\r\n                             </Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Patient\">\r\n                            <Register/>   \r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Therapy\">\r\n                            <Therapy/>\r\n                        \r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Inquiry\">\r\n                           <Inquiry/>\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TabComponent","import {\r\n    MEDICINE_SUCCESS,\r\n    MEDICINE_FAIL,\r\n    PRESCRIPTION_REQUEST,\r\n    PRESCRIPTION_SUCCESS,\r\n    PRESCRIPTION_FAIL,\r\n    DIETCHART_REQUEST,\r\n    DIETCHART_SUCCESS,\r\n    DIETCHART_FAIL,\r\n    GET_PRESCRIPTION_SUCCESS,\r\n    GET_PRESCRIPTION_FAIL,\r\n    GET_DIETCHART_SUCCESS,\r\n    GET_DIETCHART_FAIL,\r\n    DATA_PRESCRIPTION_SUCCESS,\r\n    DATA_PRESCRIPTION_FAIL,\r\n    PATIENT_PRESCRIPTION_SUCCESS,\r\n    PATIENT_PRESCRIPTION_FAIL,\r\n    ADD_MEDICINE_REQUEST,\r\n    ADD_MEDICINE_SUCCESS,\r\n    ADD_MEDICINE_FAIL,\r\n\r\n\r\n}\r\n    from '../constants/prescriptionConstants'\r\nimport axios from 'axios'\r\n\r\n//getting medicines list\r\nexport const getMedicines = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: MEDICINE_SUCCESS,\r\n        })\r\n        const { data } = await axios.get('/api/prescription/get_medicines')\r\n\r\n        dispatch({\r\n            type: MEDICINE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MEDICINE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//Add Medicines\r\n\r\nexport const addMedicineDetails = (medicineData) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ADD_MEDICINE_REQUEST,\r\n        }) \r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(`/api/prescription/add_medicines`, medicineData)\r\n\r\n        // Dispatch  success after making the request\r\n        dispatch({\r\n            type: ADD_MEDICINE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        alert(\"Medicine added Successfully\");\r\n\r\n        return data\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADD_MEDICINE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n        alert(\"Medicine cannot be Added\")\r\n    }\r\n}\r\n\r\n//ADD PRESCRIPTION\r\nexport const addPrescriptionUser = (prescriptionData) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRESCRIPTION_REQUEST,\r\n        })\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(`/api/prescription/add_prescription`, prescriptionData)\r\n\r\n        // Dispatch  success after making the request\r\n        dispatch({\r\n            type: PRESCRIPTION_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"prescription added\")\r\n        alert(\"Prescription added Successfully\");\r\n        return data\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRESCRIPTION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//add Dietchart\r\nexport const addDietChart = (diet) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DIETCHART_REQUEST,\r\n        })\r\n\r\n        // Make request to server and get the response data\r\n        const { data } = await axios.post(`/api/prescription/add_dietchart`, diet)\r\n\r\n        // Dispatch  success after making the request\r\n        dispatch({\r\n            type: DIETCHART_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"Diet chart data entered sucessfully\",diet)\r\n        return data\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DIETCHART_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//getting prescription list\r\nexport const getPrescription = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: GET_PRESCRIPTION_SUCCESS,\r\n        })\r\n        const { data } = await axios.get('/api/prescription/get_prescription')\r\n\r\n        dispatch({\r\n            type: GET_PRESCRIPTION_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_PRESCRIPTION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//getting DietChart list\r\nexport const getDietChartList = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: GET_DIETCHART_SUCCESS,\r\n        })\r\n        const { data } = await axios.get('/api/prescription/get_dietchart')\r\n\r\n        dispatch({\r\n            type: GET_DIETCHART_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_DIETCHART_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//getting prescription Details\r\nexport const getPrescriptionDetail = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: DATA_PRESCRIPTION_SUCCESS,\r\n        })\r\n        const { data } = await axios.get('/api/prescription/getallPrescription')\r\n\r\n        dispatch({\r\n            type: DATA_PRESCRIPTION_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"sucess data\")\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DATA_PRESCRIPTION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//getting prescription Details\r\nexport const getPatientDetail = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: PATIENT_PRESCRIPTION_SUCCESS,\r\n        })\r\n        const { data } = await axios.get('/api/prescription/getpatientPrescription')\r\n\r\n        dispatch({\r\n            type: PATIENT_PRESCRIPTION_SUCCESS,\r\n            payload: data,\r\n        })\r\n        // console.log(\"sucess patient\")\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PATIENT_PRESCRIPTION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}","\r\nexport const DiechartList = [\r\n    {\r\n      id: 1,\r\n      category:'Milk Products',\r\n      name: \"Milk\",\r\n      \r\n    },\r\n    {\r\n      id: 2,\r\n      category:'Milk Products',\r\n      name: \" Butter Milk\",\r\n      \r\n    },\r\n   \r\n    {\r\n      id: 3,\r\n      category:'Milk Products',\r\n      name: \"Curd\",\r\n      \r\n    },\r\n    {\r\n      id: 4,\r\n      category:'Milk Products',\r\n      name: \"Cow Ghee\",\r\n      \r\n    },\r\n    {\r\n      id: 5,\r\n      category:'Milk Products',\r\n      name: \"Milk Sweets\",\r\n      \r\n    },\r\n    {\r\n      id: 6,\r\n      category:'Milk Products',\r\n      name: \"Milk Shakes\",\r\n      \r\n    },\r\n    {\r\n      id: 7,\r\n      category:'Milk Products',\r\n      name: \"Ice-Cream\",\r\n      \r\n    },\r\n    {\r\n      id: 8,\r\n      category:'Milk Products',\r\n      name: \"Chocolate\",\r\n      \r\n    },\r\n    {\r\n      id: 9,\r\n      category:'vegetables',\r\n      name: \"Red Paprika\",\r\n    \r\n    },\r\n    {  id: 10,\r\n      category:'vegetables',\r\n      name: \"Green Paprika\",\r\n\r\n    },\r\n    {\r\n      id: 11,\r\n      category:'Milk Products',\r\n      name: \"Paneer\",\r\n    },\r\n    {\r\n      id:12,\r\n      category:'vegetables',\r\n      name: \"Spinach\",\r\n    },\r\n    {\r\n      id: 13,\r\n      category:'Grain & Pulses',\r\n      name: \"Wheat\",\r\n    },\r\n    {\r\n      id: 14,\r\n      category:'Grain & Pulses',\r\n      name: \"Rice \",\r\n    },\r\n    {\r\n      id: 15,\r\n      category:'Grain & Pulses',\r\n      name: \"Barley\",\r\n    },\r\n    {\r\n      id: 16,\r\n      category:'Grain & Pulses',\r\n      name: \"Bajari\",\r\n    },\r\n    {\r\n      id: 17,\r\n      category:'vegetables',\r\n      name: \"cucumber\",\r\n    },\r\n    {\r\n      id: 18,\r\n      category:'vegetables',\r\n      name: \"Potato\",\r\n    },\r\n    {\r\n      id: 19,\r\n      category:'vegetables',\r\n      name: \"Lady's Finger\",\r\n    },\r\n    {\r\n      id: 20,\r\n      category:'vegetables',\r\n      name: \"Radish\",\r\n    },\r\n    {\r\n      id: 21,\r\n      category:'vegetables',\r\n      name: \"Cabbage\",\r\n    },\r\n    {\r\n      id: 22,\r\n      category:'vegetables',\r\n      name: \"Bringal\",\r\n    },\r\n    {\r\n      id: 23,\r\n      category:'vegetables',\r\n      name: \"Tomato\",\r\n    },\r\n    {\r\n      id: 24,\r\n      category:'Grain & Pulses',\r\n      name: \"Green gram\",\r\n    },\r\n    {\r\n      id: 25,\r\n      category:'Grain & Pulses',\r\n      name: \"Red gram\",\r\n    },\r\n    {\r\n      id: 26,\r\n      category:'Grain & Pulses',\r\n      name: \"Piegon Pea\",\r\n    },\r\n    {\r\n      id: 27,\r\n      category:'Grain & Pulses',\r\n      name: \"Chana Dal\",\r\n    },\r\n  \r\n  ];\r\n  ","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Modal, InputGroup } from 'react-bootstrap'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport '../prescription.css'\r\nimport { getUserInfoDetails } from '../actions/userActions'\r\nimport { addPrescriptionUser, addDietChart } from '../actions/prescriptionActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Icon from '@mui/material/Icon';\r\nimport { DiechartList } from './DiechartList';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport jsPDF from 'jspdf'\r\nimport { getMedicines } from '../actions/prescriptionActions'\r\nimport '../prescriptionWindow.css'\r\nlet googleTransliterate = require(\"google-input-tool\");\r\n\r\n\r\nconst PrescriptionWindow2 = () => {\r\n  const defaultData = {\r\n    diet: \"\",\r\n    prescriptiondays: \"\",\r\n    image: \"\",\r\n    video: \"\",\r\n    report: \"\",\r\n    payment: {},\r\n    Remark: \"\",\r\n  }\r\n\r\n  const [prescription, setPrescription] = useState(defaultData);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  //Prescription API Data\r\n  const PrescriptionDetails = useSelector((state) => state.addPatientPrescription)\r\n  const { successpresc, errorprescription, patientPrescription } = PrescriptionDetails;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addDietChart(preDiet))\r\n      .then((response) => {\r\n        if (medicineAndDoseArray.length != 0) {\r\n          medicineAndDoseArray.splice(0, medicineAndDoseArray.length);\r\n\r\n        }\r\n        inputFields.map((obj) => {\r\n          medicineAndDoseArray.push({ dose: obj.dose, medicineDetails: obj.med?._id })\r\n        });\r\n\r\n        let mainPrescription = {\r\n          prescriptionUser: patient?._id,\r\n          Symptoms: symptomList,\r\n          diet_chart: response._id,\r\n          medicineData: medicineAndDoseArray,\r\n          Image: imagefile,\r\n          Video: videofile,\r\n          report: reportfile,\r\n          payment: inputVal,\r\n          prescriptiondays: prescription.prescriptiondays,\r\n          Remark: prescription.Remark\r\n\r\n        }\r\n        dispatch(addPrescriptionUser(mainPrescription))\r\n      })\r\n      .catch(e => console.log(e))\r\n    //reload\r\n    // window.location.reload();\r\n  }\r\n\r\n  //dietchart API\r\n  const DietchartDetails = useSelector((state) => state.addPatientDietChart)\r\n  const { success, errorDiet, patientdiet } = DietchartDetails;\r\n\r\n  const allMedicines = useSelector((state) => state.getallMedicineList)\r\n  const { loadingMedicine, errorMedicine, medicinesList } = allMedicines;\r\n\r\n\r\n  // User(Patient)List\r\n  const Patient = useSelector((state) => state.userInfoDetails)\r\n  const { loadingUsers, errorUsers, users } = Patient;\r\n  // console.log(\"Patient List\", users)\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserInfoDetails());\r\n    dispatch(getMedicines());\r\n  }, [dispatch])\r\n\r\n\r\n  //translation code\r\n  let maxResult = 8;\r\n  let request = new XMLHttpRequest();\r\n  const [translateinputValue, setTranslateInputValue] = React.useState(\"\");\r\n  const [translatedValue, setTranslatedValue] = React.useState(\"\");\r\n  const [selectValue, setSelectValue] = React.useState(\"\");\r\n  const [symptomList, setSymptomList] = useState([]);\r\n\r\n  //select langauage\r\n  const handleSelectChange = (event) => {\r\n    setSelectValue(event.target.value);\r\n  };\r\n  const onSymptomChange = (event) => {\r\n    setTranslateInputValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    googleTransliterate(request, translateinputValue, selectValue, maxResult).then(\r\n      function (response) {\r\n        setTranslatedValue(response[0][0]);\r\n      }\r\n    );\r\n  }, [translateinputValue]);\r\n\r\n  //add symptoms\r\n  const addSymptomArray = (e) => {\r\n    if (selectValue === \"\") {\r\n\r\n      // setSymptomList(prevItems => prevItems.concat(document.getElementById(\"lan\").value));\r\n      setSymptomList(prevItems => [...prevItems, translateinputValue]);\r\n      setTranslateInputValue('');\r\n      // console.log(\"Settoms\", symptomList)\r\n      setTranslateInputValue('')\r\n\r\n      return\r\n    }\r\n    setSymptomList(prevItems => [...prevItems, translatedValue]);\r\n    setTranslateInputValue('');\r\n    setTranslatedValue('');\r\n    // setSymptomList(prevItems => prevItems.concat(document.getElementById(\"translatedvalue\").value));\r\n    // setSymptomList([...symptomList, document.getElementById('translatedvalue').value])\r\n  }\r\n\r\n  const onSymptomKeydown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      addSymptomArray();\r\n    }\r\n  }\r\n  //remove symptoms\r\n  const removeSymptomArray = item => {\r\n    // Remove an item from the array using `filter`\r\n    setSymptomList(prevItems => prevItems?.filter(i => i !== item));\r\n  };\r\n\r\n  //use state for dynamic input fields for medicines\r\n  const [inputFields, setInputFields] = useState([]);\r\n  const addFields = (event) => {\r\n\r\n    let medicineName = event.target.textContent;\r\n    // console.log(medicineName)\r\n    // console.log(event.target.innerHTML)\r\n    let isMedicineAdded = inputFields.find((_) => { return _.med?.medicineName == medicineName })?.med?._id !== undefined\r\n    if (!isMedicineAdded) {\r\n      let med = allMedicines?.medicinesList?.find((med) => { return med?.medicineName === medicineName })\r\n      let newfield = { Dose: '', med: med }\r\n      setInputFields([...inputFields, newfield])\r\n      return\r\n    }\r\n    alert(`${medicineName} is already added.`);\r\n  }\r\n\r\n  //remove field of medicines\r\n  const removeFields = (index) => {\r\n    let data = [...inputFields];\r\n    data.splice(index, 1)\r\n    setInputFields(data)\r\n  }\r\n\r\n  //payment{} states\r\n  const [inputVal, setInputVal] = useState({\r\n    Consulting: \"\",\r\n    medicine: \"\",\r\n    paid: \"\",\r\n    Debit_Credit: \"\",\r\n    discount: \"\",\r\n    paymentmode: \"\",\r\n    paymentRemark: \"\",\r\n\r\n  });\r\n  const updateInputVal = (pairs) =>\r\n    setInputVal((prevInputVal) => ({ ...prevInputVal, ...pairs }));\r\n\r\n  const onValueChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"Consulting\") {\r\n      const newPaid = Number(value) + Number(inputVal.medicine);\r\n      updateInputVal({ paid: newPaid });\r\n    }\r\n    else if (name === \"medicine\") {\r\n      const newPaid = Number(value) + Number(inputVal.Consulting);\r\n      updateInputVal({ paid: newPaid });\r\n    }\r\n    else if (name === \"discount\") {\r\n      const newPaid = Number(inputVal.paid) - Number(value);\r\n      updateInputVal({ Debit_Credit: newPaid });\r\n    }\r\n    else if (name === \"paymentmode\") {\r\n      updateInputVal({ paymentmode: value });\r\n    }\r\n    else if (name === \"paymentRemark\") {\r\n      updateInputVal({ paymentRemark: value });\r\n    }\r\n    updateInputVal({ [name]: value });\r\n  };\r\n\r\n  // Modal\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setAllowanceState(\"1\");\r\n    setShow(true);\r\n  };\r\n\r\n  //checkboxes\r\n  const [allowanceState, setAllowanceState] = React.useState(\"\");\r\n  const dietCategories = [...new Set(DiechartList?.map((item) => item.category))];\r\n\r\n  function getIdFromUnicode(unicode) {\r\n    switch (unicode) {\r\n      case \"✓\": {\r\n        return \"1\";\r\n      }\r\n      case \"✗\": {\r\n        return \"2\";\r\n      }\r\n      case \"!\": {\r\n        return \"3\";\r\n      }\r\n      default: {\r\n        return \"0\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function getUniCodeFromId(id) {\r\n    switch (id) {\r\n      case \"1\": {\r\n        return \"&#10003;\";\r\n      }\r\n      case \"2\": {\r\n        return \"&#x2717;\";\r\n      }\r\n      case \"3\": {\r\n        return \"!\";\r\n      }\r\n      default: {\r\n        return \"&#9634;\";\r\n      }\r\n    }\r\n  }\r\n\r\n  //diet array \r\n  const [dietArray, setDietArray] = React.useState([]);\r\n  const [preDiet, setPreDiet] = useState({\r\n    wtodo: \"\",\r\n    wto_dont: \"\",\r\n    pateientDietChart: []\r\n  });\r\n\r\n  const setDietArrayLocally = (e) => {\r\n    if (dietArray.length != 0) {\r\n      dietArray.splice(0, dietArray.length)\r\n      setDietArray([...dietArray]);\r\n    }\r\n    DiechartList.forEach((element) => {\r\n      let inputId = \"lb\" + element.id;\r\n      let unicode = document.getElementById(inputId).textContent.toString();\r\n      if (unicode !== \"▢\") {\r\n        setDietArray(dietArray => [...dietArray, { diet: element, allowance: getIdFromUnicode(unicode) }]);\r\n      }\r\n    });\r\n    document.getElementById('dos').checked = true;\r\n    setAllowanceState(\"1\");\r\n    setPreDiet(preDiet => ({ ...preDiet, wtodo: document.getElementById('what_todo').value, wto_dont: document.getElementById('what_todont').value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPreDiet(preDiet => ({ ...preDiet, pateientDietChart: dietArray }))\r\n  }, [dietArray])\r\n\r\n\r\n  // get all function\r\n  const handelAllButtonClick = (e) => {\r\n    if (allowanceState === \"4\") {\r\n      DiechartList.forEach((element) => {\r\n        let id = \"lb\" + element.id;\r\n        document.getElementById(id).innerHTML = getUniCodeFromId(\r\n          allowanceState\r\n        );\r\n        // document.getElementById(inputId).value = allowanceState;\r\n      });\r\n      return\r\n    }\r\n    DiechartList.forEach((element) => {\r\n      let id = \"lb\" + element.id;\r\n      if (document.getElementById(id).innerHTML === \"▢\") {\r\n        document.getElementById(id).innerHTML = getUniCodeFromId(\r\n          allowanceState\r\n        );\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  const headerChange = (e) => {\r\n    if (e.target.value == '5') {\r\n    }\r\n    setAllowanceState(e.target.value);\r\n  }\r\n\r\n  const handelMarkState = (e) => {\r\n    let index = e.target.id.replace(\"lb\", \"\");\r\n    if (allowanceState === \"1\") {\r\n      e.target.innerHTML = \"&#10003;\";\r\n    } else if (allowanceState === \"2\") {\r\n      e.target.innerHTML = \"&#x2717;\";\r\n    } else if (allowanceState === \"3\") {\r\n      e.target.innerHTML = \"!\";\r\n    } else {\r\n      e.target.innerHTML = \"&#9634;\";\r\n    }\r\n  };\r\n\r\n\r\n  const [showInstruction, setShowInstruction] = useState(false);\r\n  const handelInstructionShow = (e) => {\r\n    setShowInstruction(true)\r\n  }\r\n  const handelInstructionclose = (e) => {\r\n    setShowInstruction(false)\r\n  }\r\n\r\n  const generatePdf = () => {\r\n    var doc = new jsPDF('p', 'pt', 'a4');\r\n    doc.html(document.getElementById(\"instructions\"), {\r\n      callback: function (pdf) {\r\n        pdf.save(\"Instructions.pdf\");\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const [medicineAndDoseArray, setMedicineAndDoseArray] = React.useState([]);\r\n  const updateDose = (e) => {\r\n    // getmedicine name using the id\r\n    let medicineName = document.getElementById('me' + e.target.id).textContent.trim();\r\n    // first find the index where of the medicine whose dose is to be set\r\n    const newState = inputFields.map((obj) => {\r\n      if (obj.med?.medicineName === medicineName) {\r\n        return { ...obj, dose: e.target.value };\r\n      }\r\n      return obj;\r\n    });\r\n    setInputFields(newState);\r\n  }\r\n\r\n  //image upload \r\n  const [imagefile, setImageFile] = useState();\r\n  const handleImageUpload = (file) => {\r\n    if (file.size <= 7 * 1024) {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file)\r\n      fileReader.onload = () => {\r\n        // console.log(fileReader.result)\r\n        setImageFile(fileReader.result)\r\n        setPrescription({ ...prescription, image: imagefile })\r\n      };\r\n    } else {\r\n      alert(\"File size exceeded the limit of 7KB\");\r\n\r\n    }\r\n  }\r\n\r\n  const [videofile, setVideoFile] = useState();\r\n  const handleVideoUpload = (video) => {\r\n    if (video.size <= 20 * 1024) {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(video)\r\n      fileReader.onload = () => {\r\n        console.log(fileReader.result)\r\n        setVideoFile(fileReader.result)\r\n        setPrescription({ ...prescription, video: videofile })\r\n\r\n      }\r\n    } else {\r\n      alert(\"File size exceeded the limit of 20KB\");\r\n    }\r\n  }\r\n\r\n  const [reportfile, setReportFile] = useState();\r\n  const handleReportUpload = (report) => {\r\n    if (report.size <= 12 * 1024) {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(report)\r\n      fileReader.onload = () => {\r\n        console.log(fileReader.result)\r\n        setReportFile(fileReader.result)\r\n        setPrescription({ ...prescription, report: reportfile })\r\n      }\r\n    } else {\r\n      alert(\"File size exceeded the limit of 12KB\");\r\n    }\r\n  }\r\n\r\n  //patient list\r\n  const [patient, setPatient] = useState();\r\n  const setUser = (selectedOption) => {\r\n    // console.log(selectedOption);\r\n    // const selectedUserPhone = e.target.innerText.split(\"-\")?.[1].trim()\r\n    const user = users?.find((user) => user?.patientRegistrationNo)\r\n    // const user = users?.find((user) => user?.phone.toString() === selectedUserPhone)\r\n    setPatient(selectedOption);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (imagefile != null) document.getElementById(\"markImageAttached\").innerHTML = \"✓\";\r\n    if (videofile != null) document.getElementById(\"markVideoAttached\").innerHTML = \"✓\";\r\n    if (reportfile != null) document.getElementById(\"markReportAttached\").innerHTML = \"✓\";\r\n    // if (dietArray.length != 0) document.getElementById(\"markDietChartAttached\").innerHTML = \"✓\";\r\n  }, [imagefile, videofile, reportfile])\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <Autocomplete\r\n            id=\"highlights-demo\"\r\n            sx={{\r\n              \"& fieldset\": { border: 'none' },\r\n            }}\r\n            freeSolo\r\n            options={users}\r\n            style={{\r\n              width: 150,\r\n              fontWeight: \"bold\"\r\n            }}\r\n            getOptionLabel={(option) => `${option?.name} - ${option?.patientRegistrationNo}`}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Select Patient\"\r\n                // onChange={() => setPatient(null)}\r\n                margin=\"normal\"\r\n              />\r\n            )}\r\n            renderOption={(props, option, { inputValue }) => {\r\n              const matches = match(`${option?.name} - ${option?.patientRegistrationNo}`, inputValue, { insideWords: true });\r\n              const parts = parse(`${option?.name} - ${option?.patientRegistrationNo}`, matches);\r\n\r\n              return (\r\n                <li {...props} onClick={() => setUser(option)}>\r\n                  <div>\r\n                    {parts?.map((part, index) => (\r\n                      part.text\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n              );\r\n            }}\r\n          />\r\n          <div className=\"col\">\r\n            {patient && (\r\n              <h5>{`${patient?.name} - ${patient?.patientRegistrationNo}`}</h5>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* second Card */}\r\n      <div className=\"symptomcard\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row align-items-start\">\r\n            <div className=\"col\">\r\n              <label>\r\n                Select a Language:\r\n                <select value={selectValue} onChange={handleSelectChange} className='p-input'>\r\n                  <option value=\"\">English</option>\r\n                  <option value=\"gu-t-i0-und\">Gujarati</option>\r\n                  <option value=\"mr-t-i0-und\">Marathi</option>\r\n                  <option value=\"sa-t-i0-und\">Sanskrit</option>\r\n                </select>\r\n              </label>\r\n              <input\r\n                id=\"lan\"\r\n                type=\"text\"\r\n                name=\"symptoms\"\r\n                className='sym-input'\r\n                onChange={onSymptomChange}\r\n                value={translateinputValue}\r\n                onKeyDown={onSymptomKeydown}\r\n                placeholder=\"Add symptoms\"\r\n                required\r\n              />\r\n              <Button style={{ margin: \"-4px 0 0 11px\" }} onClick={(e) => addSymptomArray(e)}>Add</Button>\r\n            </div>\r\n            <div className=\"col\">\r\n              {allMedicines && (\r\n                <Autocomplete\r\n                  id=\"highlights-demo\"\r\n                  sx={{\r\n                    \"& fieldset\": { border: 'none' },\r\n                  }}\r\n                  freeSolo\r\n                  options={allMedicines?.medicinesList}\r\n                  style={{\r\n                    width: 200,\r\n                    margin: \"-24px 15px 0px 54px\",\r\n                    fontWeight: \"bold\"\r\n                  }}\r\n                  getOptionLabel={(option) => option.medicineName}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Add Medicines\"\r\n                      margin=\"normal\" />\r\n                  )}\r\n                  renderOption={(props, option, { inputValue }) => {\r\n                    const matches = match(option.medicineName, inputValue, { insideWords: true });\r\n                    const parts = parse(option.medicineName, matches);\r\n\r\n                    return (\r\n                      <li {...props} onClick={addFields} >\r\n                        <div>\r\n                          {parts?.map((part, index) => (\r\n                            // style={{\r\n                            //   fontWeight: part.highlight ? 400 : 200,\r\n                            // }}\r\n                            part.text\r\n                          ))}\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n\r\n            </div>\r\n            <div className=\"col\">\r\n              <input type=\"text\" className='d-input' placeholder=\"00\"\r\n                value={prescription.prescriptiondays}\r\n                onChange={(e) => setPrescription({ ...prescription, prescriptiondays: e.target.value })}\r\n              />\r\n              <h5 align=\"center\" style={{ fontWeight: \"300\", margin: \"-25px 6px 0 0\" }}> Prescription Days</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Form onSubmit={submitHandler} style={{ marginTop: \" 1em\" }}>\r\n        {/* table Starts */}\r\n        <table id=\"pdf-content\" className=\"table table-borderless\" bordercolor=\"#6caaa8\">\r\n          <tbody>\r\n            <tr>\r\n              <td style={{ borderRight: \"1px solid \" }}>\r\n                {symptomList ?\r\n                  symptomList.map(item => (\r\n                    <div key={item}>\r\n                      {item}\r\n                      <button onClick={() => removeSymptomArray(item)}>Remove</button>\r\n                    </div>\r\n                  ))\r\n                  : \"Symptom list is not available\"}\r\n                <input\r\n                  id=\"translatedvalue\"\r\n                  className='p-input'\r\n                  value={translatedValue}\r\n                  type=\"hidden\" />\r\n\r\n                {/* remark tag */}\r\n                <div>\r\n                  <Icon baseClassName=\"fas\" className=\"fa-plus-circle\" fontSize=\"small\" onClick={togglePopup} />\r\n                  {isOpen && <input className='popup-box'\r\n                    content={<>\r\n                      <b>Remark</b>\r\n                    </>}\r\n                    value={prescription.Remark}\r\n                    onChange={(e) => setPrescription({ ...prescription, Remark: e.target.value })}\r\n                  />}\r\n                </div>\r\n\r\n\r\n              </td>\r\n              <td>\r\n                {inputFields.map((input, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <div id=\"divOuter\">\r\n                        <div id=\"divInner\">\r\n\r\n                          <h6 id={'med' + index} >{input.med?.medicineName}</h6>\r\n                          <input type=\"hidden\" className='p-input' value={input.med?.id} name=\"medId[]\" />\r\n                          <input id={'d' + index} className='partitioned' type=\"text\" placeholder='Dose' name='dose' maxLength=\"4\" onChange={updateDose} />\r\n                          <Button variant=\"contained\"\r\n                            onClick={() => removeFields(index)}\r\n                          >  <DeleteIcon fontSize='medium' />\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </td>\r\n              <td>\r\n              </td>\r\n              <td style={{ width: \"40%\" }}>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/* table End */}\r\n        {/* payment table Starts */}\r\n        <table cellSpacing=\"5px\" cellPadding=\"5%\" align=\"center\" style={{ margin: \"0 0 0\" }} >\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan={'2'}>\r\n                <h1 style={{ margin: \"8px 0 8px -71px\" }}>Payment Section</h1>\r\n                <table className=\"table table-bordered border-primary\" border={\"1px\"} style={{ width: \"100%\" }}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Payment\r\n                      </td>\r\n                      <td> Rupee</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td> Consultation</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"Consulting\"\r\n                          className='p-input'\r\n                          value={inputVal.Consulting}\r\n                          onChange={onValueChange}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td> Medicines</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"medicine\"\r\n                          className='p-input'\r\n                          value={inputVal.medicine}\r\n                          onChange={onValueChange}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td> Paid</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"paid\"\r\n                          className='p-input'\r\n                          value={inputVal.paid}\r\n                          style={{ backgroundColor: \"#e8fffa\" }}\r\n                          onChange={onValueChange} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td> Debit</td>\r\n                      <td>\r\n                        <input\r\n                          className='p-input'\r\n                          type=\"text\"\r\n                          name=\"Debit_Credit\"\r\n                          value={inputVal.Debit_Credit}\r\n                          style={{ backgroundColor: \"#e8fffa\" }}\r\n                          onChange={onValueChange} readOnly />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Discount</td>\r\n                      <td>\r\n                        <input\r\n                          className='p-input'\r\n                          type=\"text\"\r\n                          name=\"discount\"\r\n                          value={inputVal.discount}\r\n                          onChange={onValueChange} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Mode of Payment</td>\r\n                      <td>\r\n                        <label>\r\n                          select\r\n                          <select\r\n                            name=\"paymentmode\"\r\n                            value={inputVal.paymentmode}\r\n                            onChange={onValueChange}\r\n                            className='p-input'\r\n                          >\r\n                            <option value=\"Cash\">Cash</option>\r\n                            <option value=\"Online\">Online</option>\r\n                            <option value=\"Card Payment\">Card Payment</option>\r\n                          </select>\r\n                        </label>\r\n                        <br /></td>\r\n                    </tr>\r\n                    {/* Payment Remark */}\r\n                    <tr>\r\n                      <td colSpan={2}>\r\n                        <div>\r\n                          <Icon baseClassName=\"fas\" className=\"fa-plus-circle\" fontSize=\"small\" onClick={togglePopup} />\r\n                          {isOpen &&\r\n                            <input className='popup-box'\r\n                              content={<>  <b> Payment Remark</b> </>}\r\n                              name=\"paymentRemark\"\r\n                              value={inputVal.paymentRemark}\r\n                              onChange={onValueChange}\r\n                            // handleClose={togglePopup}\r\n                            />}\r\n                        </div>\r\n                      </td>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n              <td>\r\n\r\n                <table border=\"1px\" bordercolor=\"black\" cellSpacing=\"5px\" cellPadding=\"5%\" align=\"center\" style={{ margin: \"-228px 0 0 0\" }}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td colSpan={'2'}>\r\n                        <table className=\"table table-bordered border-primary\" border={\"1px\"} style={{ width: \"100%\" }}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td style={{ width: \"30%\" }}>Document</td>\r\n                              <td>\r\n                                Image\r\n                                <div className=\"image-upload\">\r\n                                  <img src='images/upload.png' />\r\n                                  <input id=\"file-input\" type=\"file\" className='p-input'\r\n                                    value={prescription.image}\r\n                                    onChange={(e) => handleImageUpload(e.target.files[0])} />\r\n                                  <label id=\"markImageAttached\" ></label>\r\n                                </div>\r\n                              </td>\r\n\r\n                              <td> Video\r\n                                <div className=\"image-upload\">\r\n                                  <img src='images/video.png' />\r\n                                  <input id=\"video-file-input\"\r\n                                    value={prescription.video}\r\n                                    onChange={(e) => handleVideoUpload(e.target.files[0])}\r\n                                    type=\"file\" />\r\n                                  <label id=\"markVideoAttached\" ></label>\r\n\r\n                                </div>\r\n                              </td>\r\n                              <td> Report\r\n                                <div className=\"image-upload\">\r\n                                  <img src='images/medical-report.png' />\r\n                                  <input id=\"report-file-input\"\r\n                                    value={prescription.report}\r\n                                    onChange={(e) => handleReportUpload(e.target.files[0])}\r\n                                    type=\"file\" />\r\n                                  <label id=\"markReportAttached\" ></label>\r\n\r\n                                </div>\r\n                              </td>\r\n\r\n                              <td>\r\n                                Diet\r\n                                <div className=\"image-upload\">\r\n                                  &nbsp;&nbsp;\r\n                                  <img src='images/cereal.png' onClick={handleShow} />\r\n                                  <Modal\r\n                                    show={show}\r\n                                    size=\"lg\"\r\n                                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                    centered\r\n                                    onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                      <Modal.Title>Diet Chart</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                      <div>\r\n                                        <div className=\"row align-items-center\">\r\n                                          <div className=\"col\">\r\n                                            <input\r\n                                              id=\"dos\"\r\n                                              defaultChecked\r\n                                              type=\"radio\"\r\n                                              value=\"1\"\r\n                                              name=\"allowance\"\r\n\r\n                                              onChange={headerChange}\r\n                                            />\r\n                                            <label htmlFor=\"dos\">Do's</label>\r\n                                          </div>\r\n                                          <div className=\"col\">\r\n                                            <input\r\n                                              id=\"dont\"\r\n                                              type=\"radio\"\r\n                                              value=\"2\"\r\n                                              name=\"allowance\"\r\n                                              onChange={headerChange}\r\n                                            />\r\n                                            <label htmlFor=\"dont\">Dont's</label>\r\n                                          </div>\r\n                                          <div className=\"col\">\r\n                                            <input\r\n                                              id=\"Occasional\"\r\n                                              type=\"radio\"\r\n                                              value=\"3\"\r\n                                              name=\"allowance\"\r\n                                              onChange={headerChange}\r\n                                            />\r\n                                            <label htmlFor=\"Occasional\">Occasional</label>\r\n                                          </div>\r\n                                          <div className=\"col\">\r\n                                            <input\r\n                                              id=\"Omit\"\r\n                                              type=\"radio\"\r\n                                              value=\"4\"\r\n                                              name=\"allowance\"\r\n                                              onChange={headerChange}\r\n                                            />\r\n                                            <label htmlFor=\"Omit\">Omit</label>\r\n                                          </div>\r\n                                          <div className=\"col\">\r\n                                            <input\r\n                                              id=\"all\"\r\n                                              type=\"button\"\r\n                                              value=\"all\"\r\n                                              name=\"allowance\"\r\n                                              onClick={handelAllButtonClick}\r\n                                            />\r\n                                            <label htmlFor=\"all\">All</label>\r\n                                          </div>\r\n                                          <div className=\"col\">\r\n                                            <Button variant=\"success\" onClick={() => handelInstructionShow()} >Import</Button>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n\r\n\r\n\r\n                                      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                                        {\r\n                                          dietCategories.map((category, index) => {\r\n                                            return <div className='categoryClass' style={{ display: 'flex', flexDirection: 'column', margin: '0 10px' }}>\r\n                                              {category}\r\n                                              {\r\n                                                DiechartList?.filter((elem) => { return elem.category == category }).map((diet, index) => (\r\n                                                  <div key={index}>\r\n                                                    {\r\n                                                      <span\r\n                                                        onClick={handelMarkState}\r\n                                                        id={\"lb\" + diet.id}\r\n                                                        style={{ fontSize: \"1.5rem\", cursor: \"pointer\" }}\r\n                                                        dangerouslySetInnerHTML={{ __html: getUniCodeFromId(dietArray.find((elem) => { return diet.id == elem.diet.id })?.allowance) }}\r\n                                                      ></span>\r\n                                                    }\r\n\r\n                                                    <label htmlFor={\"lb\" + diet.id}> {diet.name}</label>\r\n                                                  </div>\r\n                                                ))\r\n                                              }\r\n                                            </div>\r\n                                          })\r\n                                        }\r\n                                      </div>\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                          <InputGroup>\r\n                                            <InputGroup.Text >What to do</InputGroup.Text>\r\n                                            <Form.Control id={'what_todo'} as=\"textarea\" aria-label=\"With textarea\" />\r\n                                          </InputGroup>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                          <InputGroup>\r\n                                            <InputGroup.Text>What to don't</InputGroup.Text>\r\n                                            <Form.Control id={'what_todont'} as=\"textarea\" aria-label=\"With textarea\" />\r\n                                          </InputGroup>\r\n                                        </div>\r\n                                      </div>\r\n\r\n\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                      <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        Close\r\n                                      </Button>\r\n                                      <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={setDietArrayLocally}\r\n                                      >\r\n                                        Save Changes\r\n                                      </Button>\r\n                                    </Modal.Footer>\r\n                                  </Modal>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </td>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n\r\n        </table>\r\n\r\n        {/* table End */}\r\n        <div className='prebutton'>\r\n          <Button type='submit' variant='primary' className='mb-1'>\r\n            Save\r\n          </Button>\r\n        </div>\r\n\r\n      </Form>\r\n      <Modal\r\n        show={showInstruction}\r\n        size='lg'\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onHide={handelInstructionclose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Diet chart instructions</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div id=\"instructions\" style={{ padding: '15px 10px' }}>\r\n            <div>\r\n              {/* <Button>Send Email</Button> */}\r\n            </div>\r\n            <dl>\r\n              <dt>What to take ? </dt>\r\n              <dd>\r\n                <ul>\r\n                  {\r\n                    dietCategories.map((category, id) => {\r\n                      return <li key={id}>\r\n                        {\r\n                          dietArray?.filter((_) => { return _.diet.category == category && _.allowance == '1' })\r\n                            .map((element) => element.diet.name).join(\", \")\r\n                        }\r\n                      </li>\r\n                    })\r\n                  }\r\n                </ul>\r\n              </dd>\r\n              <dt>What to avoid ?</dt>\r\n              <dd>\r\n                <ul>\r\n                  {\r\n                    dietCategories.map((category, index) => {\r\n                      return <li key={index}>\r\n                        {\r\n                          dietArray?.filter((_) => { return _.diet.category == category && _.allowance == '2' })\r\n                            .map((element) => element.diet.name).join(\", \")\r\n\r\n                        }\r\n                      </li>\r\n                    })\r\n                  }\r\n                </ul>\r\n              </dd>\r\n              <dt>Take occasionally.</dt>\r\n              <dd>\r\n                <ul>\r\n                  {\r\n                    dietCategories.map((category, index) => {\r\n                      return <li key={index}>\r\n                        {\r\n                          dietArray?.filter((_) => { return _.diet.category == category && _.allowance == '3' })\r\n                            .map((element) => element.diet.name).join(\", \")\r\n                        }\r\n                      </li>\r\n                    })\r\n                  }\r\n                </ul>\r\n              </dd>\r\n              <dt>What to Do</dt>\r\n              <dd>\r\n                <ul>\r\n                  {preDiet.wtodo}\r\n                </ul>\r\n              </dd>\r\n              <dt>What to Don't</dt>\r\n              <dd>\r\n                <ul>\r\n                  {preDiet.wto_dont}\r\n                </ul>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default PrescriptionWindow2","import React, { useState } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport PrescriptionWindow2 from './PrescriptionWindow2';\r\nimport TabComponent from './TabComponent';\r\n\r\nconst MasterTab = () => {\r\n  const [key, setKey] = useState('basic detail');\r\n\r\n  return (\r\n    <div style={{ marginTop: \"6rem\" }}>\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={key}\r\n        onSelect={(k) => setKey(k)}\r\n        className=\"mb-3\"\r\n      >\r\n        <Tab eventKey=\"basic detail\" title=\"Basic Detail\">\r\n          <TabComponent />\r\n        </Tab>\r\n        <Tab eventKey=\"prescription\" title=\"Prescription\">\r\n          <PrescriptionWindow2 />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MasterTab","import React from 'react'\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\n\r\nconst CarouselBanner = () => {\r\n\r\n    const options = {\r\n        margin: 30,\r\n        items: 1,\r\n        animateOut: 'fadeOut',\r\n        autoplay: true,\r\n        autoplayTimeout: 2000,\r\n        autoplayHoverPause: true,\r\n        dots: true,\r\n        responsiveClass: true,\r\n        nav: true,\r\n        navText: [\"Prev\", \"Next\"],\r\n        smartSpeed: 1000,\r\n        loop: true,\r\n        responsive: {\r\n            0: {\r\n                items: 1,\r\n            },\r\n            400: {\r\n                items: 1,\r\n            },\r\n            600: {\r\n                items: 1,\r\n            },\r\n            700: {\r\n                items: 1,\r\n            },\r\n            1000: {\r\n                items: 1,\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <OwlCarousel className=\"slider-items owl-carousel\" {...options}>\r\n                <div className=\"owlitem\">\r\n                    <img src={\"/images/ayurvedbaneer2.jpg\"} width=\"800px\" height=\"400px\" />\r\n                </div>\r\n                <div className=\"owlitem\">\r\n                    <img src={\"/images/ayurvedbanner1.jpg\"} width=\"800px\" height=\"400px\"/>\r\n                    </div>\r\n            </OwlCarousel>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CarouselBanner","import React from 'react';\r\nimport '../about.css';\r\nimport Breadcrumb from '../components/Breadcrumb';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Abouts = () => {\r\n    return (\r\n        <>\r\n            <Breadcrumb />\r\n            <div className=\"pa-about spacer-top spacer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"pa-about-img\">\r\n                                <img src={\"images/sukhayumarathi.png\"} alt=\"image\" className=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"pa-about-content\">\r\n                                <div className=\"pa-heading\">\r\n                                    {/* <img src={\"/images/herbal.svg\"} alt=\"image\" className=\"img-fluid\" /> */}\r\n                                    {/* <h1>We are here with 25 years of experience</h1> */}\r\n                                    <h5>about us</h5>\r\n                                </div>\r\n                                <p align=\"justify\">Welcome to Sukhayu Ayurvedic Chikitsalaya, Agnikarma Viddhakarma Research Center. We specialize in providing a holistic approach to healthcare using traditional Ayurvedic practices. We at Sukhayu offer a range of services, including agnikarma viddhakarma, Panchkarma, and a complete Ayurvedic practice.\r\n\r\n                                    Agnikarma viddhakarma is a specialized Ayurvedic treatment that involves using heat to promote healing and relieve pain with different shalaka (stick with specific measurements) made up of metals like Suvarna,Tamra, Rajat, Loh, Panchdhatu, etc. In \"Viddha-karma\" we use insulin needle on a specific point for management of different diseases like musculoskeletal conditions such as arthritis and back pain, knee joint pain, cervical spondylitis, lumbar spondylitis, sciatica, AVN, allergic rhinitis, infertility, headache, insomnia any many more.\r\n\r\n                                    Pancha-karma is a detoxification process that aims to eliminate toxins from the body and restore balance. This procedure is also useful for disease management like asthama, eczema, psoriasis, alopecia, etc. Panchkarma includes Vaman, Virechan, Basti, Nasya, Raktamokshan. Upkarma includes agnikarma, viddhakarma, pracchan karma, etc. Treatment  involves a combination of therapies, including massage, herbal steam therapy, and nasal cleansing, to cleanse the body of impurities.\r\n\r\n                                    At our Sukhayu Ayurved clinic, we offer a complete Ayurvedic practice that includes consultation, diagnosis, and treatment. Our experienced Vaidya Dr Megha Akshay Pendkar takes a personalized approach to healthcare, considering each individual's unique constitution, lifestyle, and health goals to develop a customized treatment plan.\r\n\r\n                                    Whether you are seeking relief from a specific health condition or looking to maintain overall wellness, our Sukhayu Ayurved clinic is here to support you. Contact us to schedule an appointment or learn more about our services.</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"pa-team\">\r\n                <div className=\"container\">\r\n                    <div className=\"pa-heading\">\r\n                    </div>\r\n                    <div>\r\n                        <img src={\"images/margadarshan.jpg\"} style={{\r\n                            width: \"100%\",\r\n                            margin: \" 0 0 0 15px\"\r\n                        }} className=\"img-fluid\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"pa-counter spacer-top spacer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"pa-heading\">\r\n                        <img src={\"images/herbal.svg\"} alt=\"image\" className=\"img-fluid\" />\r\n                        <h1>Benefit from choosing the best</h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Row className='sukhayu-about'>\r\n                            <Col>\r\n                                <Row className='sukhayu-about'>\r\n                                    <img className='imgSmall img-fluid' src=\"images/ayurveda.jpg\" />\r\n                                </Row>\r\n                                <Row className='sukhayu-about'>\r\n                                    <img className='imgSmall img-fluid' src=\"images/aboutcard.jpg\" />\r\n                                </Row>\r\n                            </Col>\r\n                            <Col>\r\n                                <img className='imgSmall img-fluid' style={{ height: '810px' }} src=\"images/panchkarmafront.png\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='sukhayu-about'> \r\n                            <Col>\r\n                            <img className='imgSmall img-fluid' style={{ height: '400px' }} src=\"images/10.jpg\" />\r\n                            </Col>\r\n                            <Col>\r\n                            <img className='imgSmall img-fluid' style={{ height: '400px' }} src=\"images/8.jpg\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='sukhayu-about'>\r\n                            <Col>\r\n                            <img className='imgSmall img-fluid' style={{ height: '400px' }} src=\"images/7.jpg\" />\r\n                            </Col>\r\n                            <Col>\r\n                            <img className='imgSmall img-fluid' style={{ height: '400px' }} src=\"images/9.jpg\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='sukhayu-about'>\r\n                            <img className='imgPanchkarmaback img-fluid' src=\"images/panchkarmaback.jpg\" />\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Abouts","import React from 'react';\r\nlet googleTransliterate = require(\"google-input-tool\");\r\n\r\nconst SearchSymptom = () => {\r\n  // let inputLanguage = \"sa-t-i0-und\";\r\n  let maxResult = 8;\r\n  let request = new XMLHttpRequest();\r\n\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [translatedValue, setTranslatedValue] = React.useState(\"\");\r\n\r\n  const [selectValue, setSelectValue] = React.useState(\"\");\r\n  // const [inValue, setInValue] = React.useState(\"\");\r\n\r\n  const handleSelectChange = (event) => {\r\n    setSelectValue(event.target.value);\r\n  };\r\n  // const handleInputChange = event => {\r\n  //   setInputValue(event.target.value);\r\n  // };\r\n  const onChangeHandler = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    googleTransliterate(request, inputValue, selectValue, maxResult).then(\r\n      function (response) {\r\n        console.log(response, \"response\");\r\n        setTranslatedValue(response[0][0]);\r\n      }\r\n    );\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"50px\" }}>\r\n      <label>\r\n        Select a value:\r\n        <select value={selectValue} onChange={handleSelectChange}>\r\n          <option value=\"gu-t-i0-und\">Gujarati</option>\r\n          <option value=\"mr-t-i0-und\">Marathi</option>\r\n          <option value=\"sa-t-i0-und\">Sanskrit</option>\r\n        </select>\r\n      </label>\r\n      <br />\r\n\r\n      <input\r\n        id=\"lan\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        onChange={onChangeHandler}\r\n        value={inputValue}\r\n      />\r\n\r\n      <h1> {translatedValue} </h1>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchSymptom;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPrescriptionDetail, getPatientDetail } from '../actions/prescriptionActions'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport PrescriptionWindow2 from './PrescriptionWindow2';\r\nimport dayjs from 'dayjs'\r\nimport * as _ from 'lodash'\r\n\r\nconst OldPatientTab = ({ choosePatient }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const prescription = useSelector((state) => state.getPrescripionList)\r\n  const { loading, error, prescriptionData } = prescription;\r\n  // console.log(\"Prescription is\", prescriptionData);\r\n\r\n  const prescriptionDetail = useSelector((state) => state.getPatientPrescriptionList)\r\n  const { loadingp, errorp, patientPrescriptionData } = prescriptionDetail;\r\n\r\n\r\n  const uniqueData = Array.from(new Set(patientPrescriptionData?.map(item => item.Patient[0]?._id))).map(id => {\r\n    return patientPrescriptionData?.filter(dataItem => dataItem.Patient[0]?._id === id)[0];\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getPrescriptionDetail());\r\n    dispatch(getPatientDetail());\r\n  }, [dispatch])\r\n\r\n  const setPatientDetail = (e) => {\r\n    choosePatient(e.target.id);\r\n    // console.log(\"setpatient id\",e.target.id);\r\n    // console.log(\"holg\")\r\n  };\r\n\r\n\r\n  const searchPatient = (e) => {\r\n    var input, filter, table, tr, td, i, txtValue;\r\n    input = e.target.value;\r\n    // console.log(\"input\",input)\r\n    filter = input.toUpperCase();\r\n    table = document.getElementById(\"myTable\");\r\n    tr = table.getElementsByTagName(\"tr\");\r\n    for (i = 1; i < tr.length; i++) {\r\n      td = tr[i].getElementsByTagName(\"td\")[0];\r\n      if (td) {\r\n        txtValue = td.textContent || td.innerText;\r\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n          tr[i].style.display = \"\";\r\n        } else {\r\n          tr[i].style.display = \"none\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [previousPrescription, setPreviousPrescription] = useState([]);\r\n  console.log(previousPrescription);\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(true);\r\n    // console.log(\"patientPrescriptionData\",patientPrescriptionData);\r\n    const oldPrescription = patientPrescriptionData?.filter(p => p.Patient[0]?._id === id)\r\n    // console.log(\"oldPrescription\",oldPrescription)\r\n    const sortedPrescriptions = _.orderBy(oldPrescription, [item => item.createdAt], ['desc']);\r\n    // const sortedPrescriptions = oldPrescription.sort((a, b) => a.createdAt - b.createdAt);\r\n    // console.log(\"sortedPrescriptions\",sortedPrescriptions)\r\n    setPreviousPrescription(sortedPrescriptions.slice(0, 2))\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setPreviousPrescription([])\r\n  };\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* table Starts */}\r\n      <table className=\"table table-borderless\" bordercolor=\"#6caaa8\" id=\"myTable\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <Form.Control\r\n                type=\"search\"\r\n                placeholder=\"Search  Patient here\"\r\n                className=\"me-2\"\r\n                aria-label=\"Search\"\r\n                onChange={searchPatient}\r\n              />\r\n            </td>\r\n            <td >\r\n              Contact\r\n            </td>\r\n            <td>\r\n              Add Prescription\r\n            </td>\r\n            <td >\r\n              Full Detail\r\n            </td>\r\n          </tr>\r\n          {uniqueData?.map((data, index) => (\r\n            <tr key={index}>\r\n              <>\r\n                <td> {data.Patient[0]?.name}</td>\r\n                <td>{data.Patient[0]?.phone}</td>\r\n                <td>\r\n                  <div>\r\n                    <Button variant=\"outlined\" onClick={() => handleClickOpen(data.Patient[0]?._id)}>\r\n                      Add\r\n                    </Button>\r\n                    <Dialog\r\n                      fullScreen={fullScreen}\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      aria-labelledby=\"responsive-dialog-title\"\r\n                      sx={{\r\n                        \"& .MuiDialog-container\": {\r\n                          \"& .MuiPaper-root\": {\r\n                            width: \"100%\",\r\n                            maxWidth: \"950px\",  // Set your width here\r\n                          },\r\n                        },\r\n                      }}\r\n                    >\r\n                      <DialogTitle id=\"responsive-dialog-title\">Prescription</DialogTitle>\r\n                      <DialogContent>\r\n                        <DialogContentText>\r\n                          <br />\r\n                        </DialogContentText>\r\n                        <table className=\"striped bordered visiting\" bordercolor=\"#6caaa8\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>\r\n                                No\r\n                              </th>\r\n                              <th>\r\n                                Visit Date\r\n                              </th>\r\n                              <th> Symptoms </th>\r\n                              <th>Medicines</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {previousPrescription?.map((v, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>{index + 1}</td>\r\n                                  <td>{dayjs(v.createdAt).format('DD/MM/YYYY')}</td>\r\n                                  <td>{v.Symptoms?.join(', ')}</td>\r\n                                  <td>\r\n                                    <ul>\r\n                                      {v.medicineData?.map((medicine) => (\r\n                                        <li key={medicine._id}>\r\n                                          <p>Name: {v.PatientMedicines?.find((el) => el._id === medicine.medicineDetails)?.medicineName}</p>\r\n                                          <p>Dose: {medicine.dose}</p>\r\n                                        </li>\r\n                                      ))}\r\n                                    </ul>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                        <div>\r\n                          <PrescriptionWindow2 previousPrescription={previousPrescription} />\r\n                        </div>\r\n                      </DialogContent>\r\n                      <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button onClick={handleClose}>Submit</Button>\r\n                      </DialogActions>\r\n                    </Dialog>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Button onClick={setPatientDetail} id={data.Patient[0]?._id} >View</Button>\r\n                  </div>\r\n                  <div style={{ display: \"none\" }}>\r\n                  </div>\r\n                </td>\r\n              </>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* table End */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldPatientTab","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport * as _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst BillHistoryTab = ({ PatientId }) => {\r\n    const OldPrescriptions = useSelector((state) => state.getPatientPrescriptionList)\r\n    const { loadingp, errorp, patientPrescriptionData } = OldPrescriptions;\r\n    const PrescriptionVisitData = _.orderBy(patientPrescriptionData, [item => item.createdAt], ['desc']);\r\n    const filterbill = PrescriptionVisitData?.filter(visit => visit.prescriptionUser === PatientId);\r\n    \r\n    let Total = 0;\r\n    let Paid =0;\r\n    filterbill.map((bill) =>  {\r\n        bill.payment?.Debit_Credit? Total += bill.payment?.Debit_Credit: Total += 0\r\n        bill.payment?.paid? Paid += bill.payment?.paid: Paid += 0\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                  <h6>Patient Name:{filterbill[0]?.Patient[0].name}</h6>  \r\n                    </Card.Body>\r\n            </Card>\r\n            <table className=\"striped bordered visiting mb-1\" bordercolor=\"#1d4e4a\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Visit Date</th>\r\n                        <th>Consulting</th>\r\n                        <th>Medicine</th>\r\n                        <th>Total</th>\r\n                        <th>Paid</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {filterbill?.map((v, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{dayjs(v.createdAt).format('DD/MM/YYYY')}</td>\r\n                                <td>{v.payment?.Consulting || '-'}</td>\r\n                                <td>{v.payment?.medicine || '-'}</td>\r\n                                <td>{v.payment?.Debit_Credit || '-'}</td>\r\n                                <td>{v.payment?.paid || '-'}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>{Total}</td>\r\n                        <td>{Paid}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillHistoryTab","import React, { useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../visitingcalender.css';\r\nimport * as _ from 'lodash';\r\nimport { getPatientDetail } from '../actions/prescriptionActions';\r\nimport BillHistoryTab from './BillHistoryTab';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\nconst VisitingCalender = ({ patientId }) => {\r\n  const dispatch = useDispatch();\r\n  const OldPrescriptions = useSelector((state) => state.getPatientPrescriptionList)\r\n  const { loadingp, errorp, patientPrescriptionData } = OldPrescriptions;\r\n  const PrescriptionVisitData1 = _.orderBy(patientPrescriptionData, [item => item.createdAt], ['desc']);\r\n  // filter visits based on patientId\r\n  const filteredVisits = PrescriptionVisitData1?.filter(visit => visit.prescriptionUser === patientId);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPatientDetail());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Card.Body>\r\n          <h6> Patient Name:{filteredVisits[0]?.Patient[0].name}</h6>\r\n          <h6>Weight:{filteredVisits[0]?.Patient[0].weight} </h6>\r\n        </Card.Body>\r\n      </Card>\r\n      <table className=\"striped bordered visiting mb-1\" bordercolor=\"#6caaa8\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              No\r\n            </th>\r\n            <th>\r\n              Visit Date\r\n            </th>\r\n            <th> Prescription Days</th>\r\n            <th>Remark</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {filteredVisits?.map((v, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{dayjs(v.createdAt).format('DD/MM/YYYY')}</td>\r\n                <td>{v.prescriptiondays|| '-'}</td>\r\n                <td>{v.Remark || '-'}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div style={{ display: \"none\" }}>\r\n        <BillHistoryTab PatientId={patientId} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VisitingCalender","\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { getPatientDetail } from '../actions/prescriptionActions';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport * as _ from 'lodash'\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport { Card, ListGroup } from 'react-bootstrap'\r\nimport '../oldPrescription.css'\r\nimport VisitingCalender from './VisitingCalender';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nconst OldPrescriptions = ({ patientIds }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedVisit, setSelectedVisit] = useState(null);\r\n  const [selectedVisitDate, setSelectedVisitDate] = useState(null);\r\n  const [createdAtDates, setCreatedAtDates] = useState([]);\r\n  const [patientDataPrescription, setPatientDataPrescription] = useState({\r\n    createdAtDates: [],\r\n    patientInfo: {}\r\n  });\r\n\r\n  const patientData = patientIds;\r\n  const OldPrescriptions = useSelector((state) => state.getPatientPrescriptionList)\r\n  const { loadingp, errorp, patientPrescriptionData } = OldPrescriptions;\r\n  const PrescriptionDates = _.orderBy(patientPrescriptionData, [item => item.createdAt], ['desc']);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPatientDetail());\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const patientId = patientData;\r\n    const patientPrescriptions = PrescriptionDates?.filter(prescription => prescription.Patient[0]?._id === patientId);\r\n    setPatientDataPrescription({\r\n      createdAtDates: patientPrescriptions?.map(prescription => prescription.createdAt),\r\n      patientInfo: {\r\n        name: patientPrescriptions[0]?.Patient[0]?.name,\r\n        weight: patientPrescriptions[0]?.Patient[0]?.weight,\r\n        age: patientPrescriptions[0]?.Patient[0]?.age,\r\n        gender: patientPrescriptions[0]?.Patient[0]?.gender,\r\n      }\r\n    });\r\n\r\n  }, [patientData]);\r\n\r\n  const patientId = patientData;\r\n  const patientPrescriptions = PrescriptionDates?.filter(prescription => prescription.Patient[0]?._id === patientId);\r\n  const visits = patientDataPrescription.createdAtDates?.map((date) => {\r\n    const prescriptionD = patientPrescriptions?.filter(p => p.createdAt === date);\r\n    const newMedicineData = prescriptionD[0]?.medicineData?.map((v) => {\r\n      const p = prescriptionD[0]?.PatientMedicines.find(e => e?._id === v.medicineDetails)\r\n      return { ...v, medicineData: p }\r\n    })\r\n    return {\r\n      visitDate: dayjs(date).format('DD/MM/YYYY'),\r\n      medicinePrescribed: newMedicineData,\r\n      symptomObserved: prescriptionD[0]?.Symptoms\r\n    };\r\n  });\r\n\r\n\r\n  const handleDateClick = (visit, visitDate) => {\r\n    setSelectedVisit(visit);\r\n    setSelectedVisitDate(visitDate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"col\">\r\n            <h5>Patient Details</h5>\r\n            <h6> Patient Name: {patientDataPrescription.patientInfo?.name}</h6>\r\n            <h6>Weight: {patientDataPrescription.patientInfo?.weight}</h6>\r\n            <Alert variant='success' style={{ width: \"359px\", margin: \"-4px\" }}>\r\n              Note: Click on the dates to see symptoms & medicines\r\n            </Alert>\r\n            {/* <h5 style={{backgroundColor:\"#badbcc\",color:\"#0f5132\"}}>Note: Click on the dates to see symptoms & medicines</h5> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CardGroup>\r\n        <div className=\"date-card-container\">\r\n          <Card>\r\n            <Card.Header>Visit Dates</Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              {visits.map((visit, index) => (\r\n                <ListGroup.Item key={index}\r\n                  onClick={() => handleDateClick(visit, visit.visitDate)}\r\n                  className={visit.visitDate === selectedVisitDate ? 'selected-date' : ''}\r\n                >\r\n                  {visit.visitDate}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Card>\r\n          <Card>\r\n            {selectedVisit && (\r\n              <div className=\"symptoms-medicines-container\">\r\n                <Card className=\"symptoms-medicines-card\">\r\n                  <Card.Header>Symptoms</Card.Header>\r\n                  <ListGroup variant=\"flush\">\r\n                    {selectedVisit.symptomObserved?.map((symptom, index) => (\r\n                      <ListGroup.Item key={index}>{symptom}</ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                </Card>\r\n                <Card className=\"symptoms-medicines-card\">\r\n                  <Card.Header>Medicines</Card.Header>\r\n                  <ListGroup variant=\"flush\">\r\n                    {selectedVisit.medicinePrescribed?.map((medicine, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        {medicine.medicineData?.medicineName} ({medicine?.dose})\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                </Card>\r\n              </div>\r\n            )}\r\n          </Card>\r\n\r\n        </div>\r\n      </CardGroup>\r\n      <div style={{ display: \"none\" }}>\r\n        <VisitingCalender patientId={patientIds} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldPrescriptions","import React, { useState, useEffect } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport OldPatientTab from './OldPatientTab';\r\nimport ViewDetailTab from './ViewDetailTab';\r\nimport VisitingCalender from './VisitingCalender';\r\nimport BillHistoryTab from './BillHistoryTab';\r\nimport OldPrescriptions from './OldPrescriptions';\r\n\r\nconst OldMasterTab = () => {\r\n  const [key, setKey] = useState('oldPatient')\r\n  const [selectedPatientId, setSelectedPatientId] = useState(null);\r\n  const [isSelectedTab, setIsSelectedTab] = useState(false);\r\n\r\n  const SetTab = (tabkey) => {\r\n    if ((tabkey === \"oldprescription\" || tabkey === \"oldTherapy\" || tabkey === \"oldinquiry\"\r\n      || tabkey === \"patientvisit\" || tabkey === \"Bill\" || tabkey === \"view\" || tabkey === \"oldPatient\")\r\n      && selectedPatientId !== null) {\r\n      setKey(tabkey);\r\n      setIsSelectedTab(false);\r\n    }\r\n    else {\r\n      alert(\"Please select a Patient\");\r\n    }\r\n  }\r\n\r\n  const choosePatient = (oldPatient) => {\r\n    setSelectedPatientId(oldPatient);\r\n    setIsSelectedTab(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSelectedTab) {\r\n      SetTab(\"oldprescription\")\r\n    }\r\n  }, [isSelectedTab])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ marginTop: \"6rem\" }}>\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={key}\r\n        onSelect={(k) => SetTab(k)}\r\n        className=\"mb-3\"\r\n      >\r\n        <Tab eventKey=\"oldPatient\" title=\"Patient\">\r\n          <OldPatientTab choosePatient={choosePatient} />\r\n        </Tab>\r\n        <Tab eventKey=\"oldprescription\" title=\"Prescription\">\r\n          <OldPrescriptions patientIds={selectedPatientId} />\r\n        </Tab>\r\n        {/* <Tab eventKey=\"oldTherapy\" title=\"Therapy\">\r\n\r\n        </Tab>\r\n        <Tab eventKey=\"oldinquiry\" title=\"Inquiry\">\r\n\r\n        </Tab> */}\r\n        <Tab eventKey=\"patientvisit\" title=\"Visiting Calender\">\r\n          <VisitingCalender patientId={selectedPatientId} />\r\n        </Tab>\r\n        <Tab eventKey=\"Bill\" title=\"Bill history\">\r\n          <BillHistoryTab PatientId={selectedPatientId} />\r\n        </Tab>\r\n        {/* <Tab eventKey=\"view\" title=\"View\">\r\n          <ViewDetailTab PatientIds={selectedPatientId} />\r\n        </Tab> */}\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldMasterTab","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMedicines } from '../actions/prescriptionActions'\r\nimport '../clinical.css'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst ClinicalStock = () => {\r\n    const dispatch = useDispatch();\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n    const allMedicines = useSelector((state) => state.getallMedicineList)\r\n    const { loadingMedicine, errorMedicine, medicinesList } = allMedicines;\r\n    // console.log(\"Medicine List\", medicinesList)\r\n\r\n    const handleAdd = (index) => {\r\n        setSelectedRow(index);\r\n    }\r\n\r\n    const handleRemove = (index) => {\r\n        setSelectedRow(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getMedicines());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"clinical\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <h4>Medicine Name</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Company Name</h4>\r\n                        </th>\r\n                        <th colspan={2}> <h4>Current Stock</h4></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {medicinesList?.map((m,index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{m.medicineName}</td>\r\n                                <td>{m.supplierName}</td>\r\n                                <td colspan={2}>{m.Qty}</td>\r\n                                <td>\r\n                                    {index === selectedRow &&\r\n                                        <div>\r\n                                            <input className='clinic-input' placeholder='Unit'/>\r\n                                            <input className='clinic-input' placeholder='Gram' />\r\n                                            <Button>Done</Button>\r\n                                            <Button onClick={() => handleRemove(index)}>Remove</Button>\r\n                                        </div>\r\n                                    }\r\n                                    <Button onClick={() => handleAdd(index)}>Add Stock</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClinicalStock","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMedicines } from '../actions/prescriptionActions'\r\nimport '../clinical.css'\r\n\r\nconst CompanyStock = () => {\r\n  const dispatch = useDispatch();\r\n  const allMedicines = useSelector((state) => state.getallMedicineList)\r\n  const { loadingMedicine, errorMedicine, medicinesList } = allMedicines;\r\n  // console.log(\"Medicine List\", medicinesList)\r\n\r\n  useEffect(() => {\r\n    dispatch(getMedicines());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"clinical\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <h4>Medicine Name</h4>\r\n            </th>\r\n            <th>\r\n              <h4>Company Name</h4>\r\n            </th>\r\n            <th colspan={2}> <h4>Current Stock</h4></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {medicinesList?.map((m) => {\r\n            return (\r\n              <tr>\r\n                <td>{m.medicineName}</td>\r\n                <td>{m.supplierName}</td>\r\n                <td colspan={2}>{m.Qty}</td>\r\n                <td>Add Stock</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyStock","import React from 'react'\r\n\r\nconst InventoryBill = () => {\r\n    return (\r\n        <div>InventoryBill\r\n            <table className=\"clinical\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <h4>Date</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Company</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Medicine Name</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Stock</h4>\r\n                        </th>\r\n                        <th> <h4>Invoice</h4></th>\r\n                        <th>\r\n                            <h4>Payment</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Total</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Mode</h4>\r\n                        </th>\r\n                        <th>\r\n                            <h4>Unpaid</h4>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryBill","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport '../newMedicines.css'\r\n\r\nconst NewMedicine = () => {\r\n  return (\r\n    <div>\r\n      <table>\r\n        <Row>\r\n          <span>Medicine:</span>\r\n          <Col>\r\n\r\n            <select className='p-input'>\r\n              <option selected value=\"\">Select</option>\r\n              <option value=\"Capsule\">Capsule</option>\r\n              <option value=\"Drops\">Drops</option>\r\n              <option value=\"Tablet\">Tablet</option>\r\n              <option value=\"Liquid\">Liquid</option>\r\n            </select>\r\n          </Col>\r\n          <Col >\r\n            <input className='p-input' type=\"text\" placeholder=\"name\" />\r\n          </Col>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <input className='p-input' type=\"text\" placeholder=\"Stock in Gm\" style={{ margin: \"0 14px 9px 0\" }} />\r\n            <input className='p-input' type=\"text\" placeholder=\"Stock in Unit\" />\r\n\r\n          </div>\r\n        </Row>\r\n        <Row>\r\n        Company Name:\r\n          <Col>\r\n            \r\n            <select className='p-input'>\r\n              <option selected value=\"\">Select</option>\r\n              <option value=\"Self\">Self</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <input className='p-input' type=\"text\" placeholder=\"Supplier Name\" />\r\n          </Col>\r\n          <Col>\r\n            <input className='p-input' type=\"text\" placeholder=\"Number\" />\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n        Amount:\r\n          <Col>\r\n          \r\n            <input className='p-input' type=\"text\" placeholder=\"Amount\" />\r\n          </Col>\r\n          <Col>\r\n            <input className='p-input' type=\"text\" placeholder=\"Invoice No\" />\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n        Med Receiver Name:\r\n          <Col>\r\n            <input className='p-input' type=\"text\" placeholder=\"Med Receiver Name\" />\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n          Add to at:\r\n          <Col>\r\n          <div style={{ display: \"flex\"  }}>\r\n          <input className=\"med-input\" type=\"radio\" name=\"company\" style={{margin:\" 0px 3px -2px 40px\"}} />\r\n          <label> <h6>Company</h6></label>\r\n          <input className=\"med-input\" type=\"radio\" name=\"clinic\" style={{margin:\" 0px 3px -2px 40px\"}} />\r\n          <label> <h6>Clinic</h6></label>\r\n          </div>\r\n          </Col>\r\n          \r\n         \r\n        </Row>\r\n        <Row>\r\n          Want to Pay:\r\n          <Col>\r\n          <div style={{ display: \"flex\"}}>\r\n            <input className=\"med-input\"  type=\"radio\" name=\"yes\" style={{margin:\" 0px 3px -2px 40px\"}} />\r\n            <label> <h6>Yes</h6></label>\r\n            <input  className=\"med-input\"type=\"radio\" name=\"no\"  style={{margin:\" 0px 3px -2px 40px\"}}/>\r\n            <label>\r\n              <h6>No</h6></label>\r\n              </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          Paid Amount:\r\n          <input className='p-input' type=\"text\" placeholder=\"Rs.\" />\r\n        </Row>\r\n        <Row>\r\n        Pay Receiver Name:\r\n          <input className='p-input' type=\"text\" placeholder=\"Pay Receiver Name\" />\r\n        </Row>\r\n    <br/>\r\n   \r\n    <div style={{ display: \"flex\"}} >\r\n    <Button style={{margin: \"0 19px -1px -3px\"}}>Save</Button>\r\n        <Button>Reset</Button>\r\n    </div>\r\n \r\n      </table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewMedicine","import React, { useState} from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport ClinicalStock from './ClinicalStock';\r\nimport CompanyStock from './CompanyStock';\r\nimport InventoryBill from './InventoryBill';\r\nimport NewMedicine from './NewMedicine';\r\n\r\nconst Inventory = () => {\r\n  const [key, setKey] = useState('clinicalStock')\r\n  return (\r\n    <div style={{ marginTop: \"4rem\" }}>\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={key}\r\n        onSelect={(k) => setKey(k)}\r\n        className=\"mb-3\"\r\n      >\r\n        <Tab eventKey=\"clinicalStock\" title=\"Clinical Stock\">\r\n          <ClinicalStock />\r\n        </Tab>\r\n        <Tab eventKey=\"companyStock\" title=\"Company Stock\">\r\n          <CompanyStock />\r\n        </Tab>\r\n        <Tab eventKey=\"newMedicine\" title=\"New Medicine\">\r\n          <NewMedicine />\r\n        </Tab>\r\n        <Tab eventKey=\"inventorybill\" title=\"Bill History\">\r\n          <InventoryBill />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inventory","import React from 'react';\r\nimport '../dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n\r\n","import React from 'react';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst Analytics = () => {\r\n  const top100Films = [\r\n    { title: 'The Shawshank Redemption', year: 1994 },\r\n    { title: 'The Godfather', year: 1972 },\r\n    { title: 'The Godfather: Part II', year: 1974 },\r\n    { title: 'The Dark Knight', year: 2008 },\r\n    { title: '12 Angry Men', year: 1957 },\r\n    { title: \"Schindler's List\", year: 1993 },\r\n    { title: 'City of God', year: 2002 },\r\n    { title: 'Se7en', year: 1995 },\r\n    { title: 'The Silence of the Lambs', year: 1991 },\r\n\r\n ];\r\n\r\n\r\n  return (\r\n    <div style={{ marginTop: \"6rem\" }}>\r\n      <Autocomplete\r\n        freeSolo\r\n        id=\"free-solo-2-demo\"\r\n        disableClearable\r\n        options={top100Films.map((option) => option.title)}\r\n        sx={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search input\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              type: 'search',\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Analytics","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport '../demoreg.css'\r\nimport '../register.css'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { createDoctorData } from '../actions/doctorActions'\r\n\r\nconst Doctors = () => {\r\n    const [imageFile, setImageFile] = useState();\r\n    const DoctorData = {\r\n        name: \"\",\r\n        speciality: \"\",\r\n        licenseNumber: \"\",\r\n        experience: \"\",\r\n        email_id: \"\",\r\n        phone_no: \"\",\r\n        consultation_fee: \"\",\r\n        profilePictureURL: \"\"\r\n    }\r\n    const [doctorForm, setDoctorForm] = useState(DoctorData);\r\n    const dispatch = useDispatch();\r\n\r\n    const addDoctors = useSelector((state) => state.createDoctorData)\r\n    const { loadingdoctordata, doctordata, success, errordoctordata } = addDoctors\r\n\r\n    const resetHandler = (e) => {\r\n        setDoctorForm(DoctorData)\r\n    }\r\n\r\n    const handleImageUpload = (file) => {\r\n        if (file.size <= 15 * 1024) {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file)\r\n            fileReader.onload = () => {\r\n                console.log(file)\r\n                setImageFile(file.name)\r\n                setDoctorForm({ ...doctorForm, profilePictureURL: fileReader.result })\r\n            };\r\n            alert(\"Image is selected\");\r\n        } else {\r\n            alert(\"File size exceeded the limit of 15KB\");\r\n\r\n        }\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"doctors\", doctorForm);\r\n        dispatch(createDoctorData(doctorForm))\r\n        setDoctorForm(DoctorData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='col-md-8'>\r\n                <h1 style={{ marginLeft: \"44px\" }}>Doctor Form</h1>\r\n                <Form onSubmit={submitHandler} className='registerform'>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Doctor Name</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Group controlId='doctorname'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='Doctor Name'\r\n                                            value={doctorForm.name}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, name: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>\r\n                                        Speciality\r\n                                    </label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='speciality'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder=''\r\n                                            value={doctorForm.speciality}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, speciality: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>LicenseNumber</label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='licenseNumber'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='DR0001'\r\n                                            value={doctorForm.licenseNumber}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, licenseNumber: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Experience</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Group controlId='experience'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            placeholder='years'\r\n                                            value={doctorForm.experience}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, experience: e.target.value })}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Email Id</label>\r\n                                </td>\r\n                                <td >\r\n                                    <Form.Group controlId='emailid'>\r\n                                        <Form.Control\r\n                                            type='email'\r\n                                            placeholder='xyz@gmail.com'\r\n                                            value={doctorForm.email_id}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, email_id: e.target.value })}\r\n                                        ></Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Phone No</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Group controlId='phone_no'>\r\n                                        <Form.Control\r\n                                            type='text'\r\n                                            maxLength={10}\r\n                                            placeholder='Number'\r\n                                            value={doctorForm.phone_no}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, phone_no: e.target.value })}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>\r\n                                        Consultation Fee\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Group controlId='consultation_fee'>\r\n                                        <Form.Control\r\n                                            type='number'\r\n                                            placeholder='00'\r\n                                            value={doctorForm.consultation_fee}\r\n                                            onChange={(e) => setDoctorForm({ ...doctorForm, consultation_fee: e.target.value })}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>\r\n                                        Profile Picture\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"image-upload\">\r\n                                        <img src='images/upload.png' />\r\n                                        <input id=\"file-input\" type=\"file\" className='p-input'\r\n                                            onChange={(e) => handleImageUpload(e.target.files[0])} />\r\n                                            <h3>{imageFile}</h3>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Save\r\n                                    </Button>\r\n                                    <Button style={{ marginLeft: \"5px\" }} onClick={resetHandler} variant='primary'>\r\n                                        Reset\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Form >\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Doctors;","import React, { useState } from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport '../demoreg.css'\r\nimport '../register.css'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { addMedicineDetails } from '../actions/prescriptionActions'\r\n\r\n\r\nconst Medicine = () => {\r\n    const defaultData = {\r\n        medicineName: \"\",\r\n        Qty: \"\",\r\n        Unit: \"\",\r\n        Gram: \"\",\r\n        supplierName: \"\",\r\n        contactNo: \"\",\r\n        amount: \"\",\r\n        medicine_reciver_name: \"\"\r\n    }\r\n\r\n    const [medicineform, setMedicineform] = useState(defaultData);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    //redux state for the medicines\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // const addNewMedicine = () => {\r\n        // const newMedicine = {\r\n        //     medicineName: medicineform.medicineName,\r\n        //     Qty: medicineform.Qty,\r\n        //     Unit: medicineform.Unit,\r\n        //     Gram: medicineform.Gram,\r\n        //     supplierName: medicineform.supplierName,\r\n        //     contactNo: medicineform.contactNo,\r\n        //     amount: medicineform.amount,\r\n        //     medicine_reciver_name: medicineform.medicine_reciver_name,\r\n        // };\r\n        console.log(medicineform)\r\n        dispatch(addMedicineDetails(medicineform))\r\n            .then(() => {\r\n                setMedicineform(defaultData);\r\n                setErrorMessage(null); // clear error message if the submission was successful\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setErrorMessage('Medicine name already exists'); // set error message if there was an error\r\n\r\n            });\r\n        // };\r\n        // addNewMedicine();\r\n    };\r\n\r\n    const resetHandler = (e) => {\r\n        setMedicineform(defaultData);\r\n        setErrorMessage(null); // clear error message if the form was reset\r\n    };\r\n\r\n    return (\r\n\r\n        <div className='col-md-8'>\r\n            <h1 style={{ marginLeft: \"44px\" }}>Medicine Form</h1>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <Form onSubmit={submitHandler} className='registerform'>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <label> Medicine Name</label>\r\n                            </td>\r\n                            <td>\r\n                                <Form.Group controlId='medicinename' >\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Medicine Name'\r\n                                        value={medicineform.medicineName}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, medicineName: e.target.value })}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>\r\n                                    Qty\r\n                                </label>\r\n                            </td>\r\n                            <td >\r\n                                <Form.Group controlId='Qty'>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Qty'\r\n                                        value={medicineform.Qty}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, Qty: e.target.value })}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>Unit</label>\r\n                            </td>\r\n                            <td >\r\n                                <Form.Group controlId='unit'>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Unit'\r\n                                        value={medicineform.Unit}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, Unit: e.target.value })}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>Gram</label>\r\n                            </td>\r\n                            <td >\r\n                                <Form.Group controlId='gram' >\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Gram'\r\n                                        value={medicineform.Gram}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, Gram: e.target.value })}\r\n\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>Supplier Name</label>\r\n                            </td>\r\n                            <td >\r\n                                <Form.Group controlId='supplierName'>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Supplier Name'\r\n                                        value={medicineform.supplierName}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, supplierName: e.target.value })}\r\n\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>Contact No\r\n                                </label>\r\n                            </td>\r\n                            <td >\r\n                                <Form.Group controlId=\"contactNo\">\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Contact No'\r\n                                        maxLength={10}\r\n                                        value={medicineform.contactNo}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, contactNo: e.target.value })}\r\n\r\n                                    ></Form.Control>\r\n\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>Amount</label>\r\n                            </td>\r\n                            <td >\r\n                                <Form.Group controlId='amount'>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='0.00'\r\n                                        value={medicineform.amount}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, amount: e.target.value })}\r\n\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <label>\r\n                                    Medicine Receiver Name\r\n                                </label>\r\n                            </td>\r\n                            <td>\r\n                                <Form.Group controlId='reciever name' >\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Receiver name'\r\n                                        value={medicineform.medicine_reciver_name}\r\n                                        onChange={(e) => setMedicineform({ ...medicineform, medicine_reciver_name: e.target.value })}\r\n\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <Button type='submit' variant='primary'>\r\n                                    Save\r\n                                </Button>\r\n\r\n                                <Button style={{ marginLeft: \"5px\" }} onClick={resetHandler} variant='primary'>\r\n                                    Reset\r\n                                </Button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Form >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Medicine","import React from 'react'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Doctors from './Doctors';\r\nimport Medicine from './Medicine';\r\n\r\n\r\n\r\nconst Setting = () => {\r\n\r\n  return (\r\n    <div style={{ marginTop: \"6rem\" }}>\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"fifth\">Doctors</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"sixth\"> Medicines</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"fifth\">\r\n                <Doctors/>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"sixth\">\r\n             <Medicine/>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Setting","import React from 'react'\r\n\r\nfunction VisitingCards() {\r\n  return (\r\n    <div>VisitingCards</div>\r\n  )\r\n}\r\n\r\nexport default VisitingCards","import React, { useState } from 'react'\r\nimport '../mainpage.css'\r\nimport { Form} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// Redux Actions\r\nimport { login } from '../actions/userActions'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MainPage = ({ location, history }) => {\r\n  const dispatch = useDispatch()\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  \r\n  // Get user login info from Redux state\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n    toast.success('Login Successfully!', {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    localStorage.setItem('isLogin', true)\r\n\r\n    history.push('/');\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      \r\n        <div className=\"Auth-form-container\">\r\n        <div className=\"Auth-form-wrapper\">\r\n          <Form className=\"Auth-form\" onSubmit={submitHandler}>\r\n            <div className=\"Auth-form-content\">\r\n              {/* <h3 className=\"Auth-form-title\">Sign In</h3> */}\r\n              <div className=\"text-center\">\r\n                <span className=\"link-primary\" >\r\n                  <h4>Sign in</h4>\r\n                </span>\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <label className='authlabel'>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control mt-1\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group mt-3\">\r\n                <label className='authlabel'>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control mt-1\"\r\n                  placeholder=\"Enter password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"d-grid gap-2 mt-3\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n\r\n              </div>\r\n              <ToastContainer />\r\n              {/* <p className=\"text-center mt-2\">\r\n              Forgot <a href=\"#\">password?</a>\r\n            </p> */}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport { getPatientDetail } from '../actions/prescriptionActions';\r\nimport { Form, Button, Card } from 'react-bootstrap'\r\n\r\nconst PrescriptionData = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //Prescription API to fetch Prescription List\r\n  const OldPrescriptions = useSelector((state) => state.getPatientPrescriptionList)\r\n  const { loadingp, errorp, patientPrescriptionData } = OldPrescriptions;\r\n\r\n  const today = dayjs().format('YYYY-MM-DD');\r\n  const filteredTodayData = patientPrescriptionData?.filter(item => dayjs(item.createdAt).isSame(today, 'day'));\r\n\r\n  const uniquePatientData = Array.from(new Set(filteredTodayData?.map(items => items.Patient[0]._id))).map(id => {\r\n    return filteredTodayData?.filter(dataItem => dataItem.Patient[0]._id === id)[0];\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getPatientDetail());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div style={{ marginTop: \"4rem\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h6> Today's Prescribed Data</h6>\r\n          <h6> </h6>\r\n        </Card.Body>\r\n      </Card>\r\n      <div style={{overflowX:\"auto\"}}>\r\n      <table className=\"striped bordered visiting\" bordercolor=\"#6caaa8\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              No\r\n            </th>\r\n            <th>\r\n              Patient Name\r\n            </th>\r\n            <th>\r\n              Date\r\n            </th>\r\n         \r\n            <th>\r\n              Medicines\r\n            </th>\r\n            {/* <th>\r\n              Panchakrma\r\n            </th> */}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {filteredTodayData?.map((v, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{\r\n                  v.Patient?.map((patient, p) => {\r\n                    return (\r\n                      <li key={p}>\r\n                        <p>\r\n                          {patient.name}\r\n                        </p>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }</td>\r\n                <td>{dayjs(v.createdAt).format('DD/MM/YYYY')}</td>\r\n         \r\n                <td> {v.medicineData.map((medicine, i) => {\r\n                  return (\r\n                    <li key={i}>\r\n                      <p>Name: {v.PatientMedicines.find((el) => el._id === medicine.medicineDetails)?.medicineName}</p>\r\n                      <p>Dose: {medicine.dose}</p>\r\n                    </li>\r\n                  );\r\n                })}</td>\r\n                {/* <td>\r\n                  {v.panchkarma?.map(item => (\r\n                    <li key={item.id}>name:{item.panchkarma_name},days:{item.panchkarma_days}</li>\r\n                  ))}\r\n                </td> */}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrescriptionData","import React from 'react'\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Signup() {\r\n    return (\r\n        <div style={{ marginTop: \"3rem\" }}>\r\n        <div>\r\n            Signup\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-4\">\r\n                <Form.Group controlId='name'>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Full Name'\r\n                                       \r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                <Form.Group controlId='Date' >\r\n                                    <div >\r\n                                        <DatePicker\r\n                                      \r\n                                        \r\n                                            peekNextMonth\r\n                                            showMonthDropdown\r\n                                            dropdownMode=\"select\"\r\n                                            placeholderText=\"Date\"\r\n                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\nimport { getPatientDetail } from '../actions/prescriptionActions';\r\nimport { getUserInfoDetails } from '../actions/userActions'\r\nimport * as _ from 'lodash'\r\nimport dayjs from 'dayjs'\r\nimport jsPDF from 'jspdf'\r\n\r\n\r\nconst PrescriptionLists = () => {\r\n  const dispatch = useDispatch();\r\n  const isLogin = localStorage.getItem('isLogin');\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  // User(Patient)List\r\n  const Patient = useSelector((state) => state.userInfoDetails)\r\n  const { loadingUsers, errorUsers, users } = Patient;\r\n\r\n  //Prescription API to fetch Prescription List\r\n  const PatientPrescriptions = useSelector((state) => state.getPatientPrescriptionList)\r\n  const { loadingp, errorp, patientPrescriptionData } = PatientPrescriptions;\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserInfoDetails());\r\n    dispatch(getPatientDetail());\r\n  }, [dispatch])\r\n\r\n\r\n  const userPrescriptions = patientPrescriptionData?.filter(prescription => prescription?.prescriptionUser === userInfo?._id);\r\n  // console.log(\"Prescriptions for the logged-in user\", userPrescriptions);\r\n  const generatePDF = (prescription) => {\r\n    generatePrecription(prescription)\r\n  }\r\n\r\n  const generatePrecription = (prescription) => {\r\n    // Create a new PDF document\r\n    const doc = new jsPDF('p', 'pt', 'a4');\r\n    // Set background color for header section\r\n    doc.setFillColor('#ccf9f5');\r\n  \r\n    doc.rect(0, 0, doc.internal.pageSize.width, 120, 'F');\r\n    // Add logo\r\n    const image = new Image();\r\n    image.src = 'images/sukhayuenglish.png';\r\n    doc.addImage(image, 'PNG', doc.internal.pageSize.width - 620, 4, 220, 170);\r\n\r\n    doc.setFontSize(10);\r\n    doc.setTextColor('#444');\r\n    doc.setFontSize(15);\r\n    doc.setFont('Noto Sans Devanagari');\r\n    doc.text('Sukhayu Ayurved Clinic', 20, 25);\r\n    // doc.text('सुखायु आयुर्वेद क्लिनिकविद्धकर्म, अग्निकर्म और पंचकर्म केंद्र', 400, 27);\r\n   \r\n    // Add doctor name, phone number, and clinic address\r\n\r\n    doc.setFontSize(10);\r\n    doc.setTextColor('#444');\r\n    doc.text('Doctor Name:', 400, 25);\r\n    doc.setFont('bold');\r\n    doc.text('DR Meghhaa Akshay Pendkar', 470, 25);\r\n    doc.setFont('normal');\r\n    doc.text('Email:', 400, 40)\r\n    doc.setFont('bold');\r\n    doc.text('sukhayu7@gmail.com', 470, 40)\r\n    doc.setFont('normal');\r\n    doc.text('Phone Number:', 400, 50);\r\n    doc.setFont('bold');\r\n    doc.text('9175569131', 470, 50);\r\n    doc.setFont('normal');\r\n    doc.text('Clinic Address:', 400, 60);\r\n    doc.setFont('bold');\r\n    doc.text('Awadh Pride, 2nd Floor,', 470, 60);\r\n    doc.text(' Metro Pillar no. Opposite 139,', 400, 70)\r\n    doc.text('Nirant Chowk, Vastral, Ahmedabad-18', 400, 80);\r\n\r\n    // Add patient details and prescription information\r\n    doc.setFontSize(18);\r\n    doc.setFont('bold');\r\n    doc.text('Prescription', 220, 20);\r\n    doc.setFontSize(12);\r\n    doc.text(`Patient Name: ${userInfo?.name}`, 50, 180);\r\n\r\n    // Add prescription details\r\n    doc.text(`Prescription Days: ${prescription.prescriptiondays}`, 50, 200);\r\n    doc.text(`Remark: ${prescription.Remark}`, 50, 220);\r\n\r\n    // Add medicine data\r\n    const rows = [];\r\n    const data = prescription?.medicineData?.map((med, i) => {\r\n      const medicine = prescription?.PatientMedicines?.find((pMed) => pMed?._id === med?.medicineDetails);\r\n      const dose = medicine && medicine.dose ? medicine.dose : '';\r\n      rows.push([i + 1, medicine?.medicineName || '', med?.dose]);\r\n    });\r\n    doc.autoTable({\r\n      startY: 270,\r\n      head: [['No', 'Medicine Name', 'Dose']],\r\n      body: rows,\r\n      theme: 'striped',\r\n      headStyles: { fillColor: '#ccf9f5', textColor: '#444' },\r\n      styles: { textColor: '#444' },\r\n      columnStyles: {\r\n        0: { fontStyle: 'bold' },\r\n        1: { cellWidth: 'wrap' },\r\n        2: { cellWidth: 'wrap' },\r\n      }\r\n    });\r\n\r\n    // Save PDF\r\n    doc.save(`prescription.pdf`);\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ marginTop: \"55px\" }}>\r\n      <h1>PrescriptionLists</h1>\r\n      <table className=\"striped bordered visiting\" bordercolor=\"#6caaa8\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              No\r\n            </th>\r\n            <th>\r\n              Visit Date\r\n            </th>\r\n            <th> Prescription Days</th>\r\n            <th>Remark</th>\r\n            <th>Print</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {userPrescriptions?.map((v, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{dayjs(v.createdAt).format('DD/MM/YYYY')}</td>\r\n                <td>{v.prescriptiondays || '-'}</td>\r\n                <td>{v.Remark || '-'}</td>\r\n                <td>\r\n                  <Button onClick={() => generatePDF(v)}>\r\n                    Print\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrescriptionLists","import React from 'react';\r\nimport { Container } from 'react-bootstrap'\r\n// Routing\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n// Components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\n// Screens\r\nimport HomeScreen from './screens/Home'\r\nimport LoginScreen from './screens/Login'\r\nimport RegisterScreen from './screens/Register'\r\nimport ProfileScreen from './screens/Profile'\r\nimport Reset from './screens/Reset'\r\nimport NewPassword from './screens/NewPassword'\r\nimport PrescriptionTemplate from './screens/PrescriptionTemplate'\r\n\r\n// History\r\nimport history from './utils/history'\r\nimport RefundPolicy from './screens/RefundPolicy'\r\nimport PrivacyPolicy from './screens/PrivacyPolicy'\r\nimport TermsAndConditions from './screens/TermsAndConditions'\r\nimport ContactUs from './screens/ContactUs'\r\nimport Role from './screens/Role'\r\nimport DemoRegistration from './screens/DemoRegistration'\r\nimport Therapy from './screens/Therapy'\r\nimport Inquiry from './screens/Inquiry'\r\nimport TabComponent from './components/TabComponent'\r\nimport MasterTab from './components/MasterTab'\r\nimport Banner from './components/Banner'\r\nimport CarouselBanner from './components/CarouselBanner'\r\nimport Breadcrumb from './components/Breadcrumb'\r\nimport About from './screens/Abouts'\r\nimport MedicineCards from './components/MedicineCards'\r\nimport SearchSymptom from './screens/SearchSymptom'\r\nimport OldMasterTab from './components/OldMasterTab'\r\nimport Inventory from './components/Inventory'\r\nimport OldPrescriptions from './components/OldPrescriptions'\r\nimport Dashboard from './screens/Dashboard'\r\nimport Analytics from './screens/Analytics'\r\nimport Setting from './screens/Setting'\r\nimport VisitingCards from './screens/VisitingCards'\r\nimport MainPage from './screens/MainPage'\r\nimport PrescriptionData from './screens/PrescriptionData'\r\nimport Signup from './screens/Signup'\r\nimport PrescriptionLists from './components/PrescriptionLists'\r\nimport Doctors from './screens/Doctors';\r\nimport SuccessStories from './components/SuccessStories';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <Header />\r\n            <main className='py-0'>\r\n            <Route path='/'component={HomeScreen} exact />\r\n                <Route path='/demoReg' component={DemoRegistration} />\r\n                <Route path='/register' component={RegisterScreen} />\r\n                <Route path='/therapy' component={Therapy} />\r\n                <Route path='/doctor' component={Doctors}/>\r\n                <Route path='/inquiry' component={Inquiry} />\r\n                <Route path='/breadcrumb' component={Breadcrumb} />\r\n                <Route path='/about' component={About} />\r\n                <Route path='/contact-us' component={ContactUs} />\r\n                <Route path='/dashboard' component={Dashboard} />\r\n                <Route path='/mainpage'  component={MainPage} />\r\n                <Route path='/signup'  component={Signup} />\r\n                <Container>\r\n                <Route path='/patientPrescription'component={PrescriptionLists}/>\r\n                    <Route path='/tab' component={TabComponent} />\r\n                    <Route path='/mastertab' component={MasterTab} />\r\n                    <Route path='/old-mastertab' component={OldMasterTab} />\r\n                    <Route path='/inventory' component={Inventory} />\r\n                    <Route path='/analytics' component={Analytics} />\r\n                    <Route path='/oldprescription' component={OldPrescriptions} />\r\n                    <Route path='/terms-condition' component={TermsAndConditions} />\r\n                    <Route path='/privacy-policy' component={PrivacyPolicy} />\r\n                    <Route path='/refund-policy' component={RefundPolicy} />\r\n                    <Route path='/profile' component={ProfileScreen} />\r\n                    <Route path='/login' component={LoginScreen} />\r\n                    <Route exact path='/reset' component={Reset} />\r\n                    <Route path='/reset/:token' component={NewPassword} />\r\n                    <Route path='/prescribetemplate' component={PrescriptionTemplate} />\r\n                    <Route path='/Role' component={Role} />\r\n                    <Route path='/banner' component={Banner} />\r\n                    <Route path='/carosel' component={CarouselBanner} />\r\n                    <Route path='/medicinecards' component={MedicineCards} />\r\n                    <Route path='/seach' component={SearchSymptom} />\r\n                    <Route path='/settings' component={Setting} />\r\n                    <Route path='/visitingcard' component={VisitingCards} />\r\n                    <Route path='/receptionist' component={PrescriptionData} />\r\n                </Container>\r\n            </main>\r\n            <Footer />\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}