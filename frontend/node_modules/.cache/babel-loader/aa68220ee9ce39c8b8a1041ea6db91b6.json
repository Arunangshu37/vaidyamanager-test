{"ast":null,"code":"var _jsxFileName = \"/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/DemoRegistration.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../demoreg.css';\nimport '../register.css';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { register } from '../actions/userActions';\nimport dayjs from 'dayjs';\nimport FormContainer from '../components/FormContainer';\nimport { Container, Row, Card, Col, ListGroup, Button, Image, Form } from 'react-bootstrap';\n\n// const useStyles = makeStyles(theme => ({\n//     formControl: {\n//         //   margin: theme.spacing(1),\n//         width: \"13vw\"\n//     },\n//     // selectEmpty: {\n//     //     marginTop: theme.spacing(1)\n//     // },\n//     select: {\n//         height: \"6vh\"\n//     },\n//     inputLabel: {\n//         fontSize: \"16px\",\n//         alignSelf: \"center\"\n//     }\n// }));\n\nconst DemoRegistration = _ref => {\n  let {\n    location,\n    history\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [age, setAge] = useState();\n  const [gender, setGender] = useState();\n  const [dob, setDob] = useState();\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n  // const classes = useStyles();\n\n  // Get user login info from Redux state\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  //calculate the age\n  const getAge = dob => {\n    console.log(\"do\", dob);\n    var today = dayjs();\n    var birthdate = dayjs(dob);\n    var patitentAge = today.diff(birthdate, 'year');\n    console.log(\"patient age is\", patitentAge);\n    setAge(patitentAge);\n  };\n  useEffect(() => {\n    getAge(dob);\n  }, [dob]);\n  useEffect(() => {\n    // If there is user info then redirect\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  const togglePassword = () => {\n    // When the handler is invoked\n    // inverse the boolean state of passwordShown\n    setPasswordShown(!passwordShown);\n  };\n  // Handler that logs in the user\n  const submitHandler = e => {\n    e.preventDefault();\n    // Check if passwords are the same\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n\n      // Dispatch Register\n      // dispatch(register(name, email, phone, password, dob, age, gender, false))\n    }\n  };\n  const myFunction = () => {\n    var x = document.getElementById(\"password-field\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      marginLeft: \"-71px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, \"Sign Up\"), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 35\n    }\n  }, error), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 37\n    }\n  }, message), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    className: \"registerform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"DOB\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: dob,\n    onChange: date => setDob(date),\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    placeholderText: \"DOB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Age\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Age\",\n    value: age,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Gender\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: gender,\n    type: \"text\",\n    placeholder: \"Gender\",\n    onChange: e => setGender(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 39\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"FEMALE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 37\n    }\n  }, \"FEMALE\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"MALE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 37\n    }\n  }, \"MALE\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"email@example.com\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"phone\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"phone\",\n    placeholder: \"10 digit mobile number\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    className: \"registerform-group-pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: passwordShown ? \"text\" : \"password\"\n    // type='password'\n    ,\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: togglePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    className: \"registerform-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 29\n    }\n  }, \"Have an Account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    to: redirect ? `/login?redirect=${redirect}` : '/login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 33\n    }\n  }, \"Login\")))))));\n};\nexport default DemoRegistration;","map":{"version":3,"names":["React","useState","useEffect","Link","DatePicker","useDispatch","useSelector","Message","Loader","register","dayjs","FormContainer","Container","Row","Card","Col","ListGroup","Button","Image","Form","DemoRegistration","location","history","name","setName","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","age","setAge","gender","setGender","dob","setDob","passwordShown","setPasswordShown","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","getAge","console","log","today","birthdate","patitentAge","diff","push","togglePassword","submitHandler","e","preventDefault","myFunction","x","document","getElementById","type","marginLeft","target","value","date","color","backgroundColor"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/DemoRegistration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport '../demoreg.css'\nimport '../register.css'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../actions/userActions'\nimport dayjs from 'dayjs'\n\nimport FormContainer from '../components/FormContainer'\nimport { Container, Row, Card, Col, ListGroup, Button, Image, Form } from 'react-bootstrap';\n\n// const useStyles = makeStyles(theme => ({\n//     formControl: {\n//         //   margin: theme.spacing(1),\n//         width: \"13vw\"\n//     },\n//     // selectEmpty: {\n//     //     marginTop: theme.spacing(1)\n//     // },\n//     select: {\n//         height: \"6vh\"\n//     },\n//     inputLabel: {\n//         fontSize: \"16px\",\n//         alignSelf: \"center\"\n//     }\n// }));\n\nconst DemoRegistration = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n    const [age, setAge] = useState();\n    const [gender, setGender] = useState();\n    const [dob, setDob] = useState();\n    const [passwordShown, setPasswordShown] = useState(false);\n    const dispatch = useDispatch();\n    // const classes = useStyles();\n\n\n    // Get user login info from Redux state\n    const userRegister = useSelector((state) => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    //calculate the age\n    const getAge = (dob) => {\n        console.log(\"do\", dob)\n        var today = dayjs();\n        var birthdate = dayjs(dob)\n        var patitentAge = today.diff(birthdate, 'year')\n        console.log(\"patient age is\", patitentAge)\n        setAge(patitentAge)\n    }\n    useEffect(() => {\n        getAge(dob)\n    }, [dob])\n\n    useEffect(() => {\n        // If there is user info then redirect\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const togglePassword = () => {\n        // When the handler is invoked\n        // inverse the boolean state of passwordShown\n        setPasswordShown(!passwordShown);\n    };\n    // Handler that logs in the user\n    const submitHandler = (e) => {\n\n        e.preventDefault()\n        // Check if passwords are the same\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n\n            // Dispatch Register\n            // dispatch(register(name, email, phone, password, dob, age, gender, false))\n        }\n    }\n\n    const myFunction = () => {\n        var x = document.getElementById(\"password-field\");\n        if (x.type === \"password\") {\n            x.type = \"text\";\n        } else {\n            x.type = \"password\";\n        }\n    }\n\n\n    return (\n        <>\n            <div className='fr'>\n                {/* <h1>Registration</h1> */}\n                {/* <div class=\"row\">\n                    <div class=\"offset-md-2 col-md-8\">\n                        <div class=\"mat-card\">\n                            <form class=\"mat-form\" onSubmit={submitHandler}>\n                                <h3 class=\"text-center\">Sign Up</h3>\n                                {error && <Message variant='danger'>{error}</Message>}\n                                {message && <Message variant='danger'>{message}</Message>}\n                                {loading && <Loader />}\n                                <div class=\"form-group\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\">\n                                            <TextField\n                                                label=\"Name\"\n                                                size='small'\n                                                id=\"outlined-basic\"\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '25ch' }}\n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                InputLabelProps={{ shrink: true }}\n\n                                            />\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <Box\n                                                component=\"form\"\n                                                sx={{\n                                                    '& .MuiTextField-root': { m: '5px', width: '25ch' },\n                                                }}\n                                                noValidate\n                                                autoComplete=\"off\">\n                                                <div>\n                                                    <TextField\n                                                        id=\"outlined-basic\"\n                                                        variant=\"outlined\"\n                                                        select\n                                                        label=\"Gender\"\n                                                        size='small'\n                                                    >\n                                                        <MenuItem value={'FEMALE'}>FEMALE</MenuItem>\n                                                        <MenuItem value={'MALE'}>MALE</MenuItem>\n                                                    </TextField>\n                                                </div>\n                                            </Box>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\" >\n                                            <div>\n                                                <DatePicker\n                                                    value={dob}\n                                                    onChange={(date) => setDob(date)}\n                                                    peekNextMonth\n                                                    showMonthDropdown\n                                                    showYearDropdown\n                                                    dropdownMode=\"select\"\n                                                    placeholderText=\"DOB\"\n                                                />\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <TextField\n                                               size='small'\n                                                label=\"Age\"\n                                                sx={{ m: 1, width: '25ch' }}\n                                                value={age}\n                                                onChange={(e) => setAge(e.target.value)}\n                                                id=\"outlined-basic\"\n                                                variant=\"outlined\"\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\">\n                                            <TextField\n                                               size='small'\n                                                label=\"Email\"\n                                                sx={{ m: 1, width: '25ch' }}\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                                id=\"outlined-basic\"\n                                                variant=\"outlined\"\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <TextField\n                                               size='small'\n                                                label=\"Mobile No\"\n                                                sx={{ m: 1, width: '25ch' }}\n                                                value={phone}\n                                                onChange={(e) => setPhone(e.target.value)}\n                                                id=\"outlined-basic\"\n                                                variant=\"outlined\"\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\">\n                                            <TextField\n                                               size='small'\n                                                label=\"Password\"\n                                                id=\"outlined-basic\"\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '25ch' }}\n                                                value={password}\n                                                type=\"password\"\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <TextField\n                                               size='small'\n                                                id=\"outlined-basic\"\n                                                variant=\"outlined\"\n                                                label=\"Confirm Password\"\n                                                sx={{ m: 1, width: '25ch' }}\n                                                type=\"password\"\n                                                value={confirmPassword}\n                                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"col-sm-10 text-center\">\n                                        <button type=\"submit\" class=\"btn mat-btn\">Submit</button>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n\n                                    <div>\n                                        <h1 style={{ color: 'black' }}> Have an Account?</h1> {' '}\n\n                                        <Link style={{ backgroundColor: \"white\", fontSize: \"20px\" }}\n                                            to={redirect ? `/login?redirect=${redirect}` : '/login'}\n                                        >\n                                            Login\n                                        </Link>\n\n                                    </div>\n\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div> */}\n\n                {/* <form className=\"signup\" onSubmit={submitHandler} >\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {loading && <Loader />}\n                    <h1>Create account</h1>\n                    <h2>Already have an account? <span>Sign in</span></h2>\n\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\" \n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        type=\"text\" \n                         name=\"name\"\n                         id=\"name\"\n                          required />\n                        <label class=\"signup__label\" for=\"name\">Name</label>\n                    </div>\n\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\" \n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\" name=\"email\" \n\n                        id=\"email\" required />\n                        <label class=\"signup__label\" for=\"email\">Email</label>\n                    </div>\n                    <div class=\"signup__field\">\n                        <select name=\"gender\" id=\"gender\" class=\"signup__input\">\n                            <option value={''}>Select</option>\n                            <option value={'FEMALE'}>FEMALE</option>\n                            <option value={'MALE'}>MALE</option>\n                        </select>\n                        {/* <input class=\"signup__input\" type=\"text\" name=\"email\" id=\"email\" required /> \n                        <label class=\"signup__label\" for=\"gender\">Gender</label>\n                    </div>\n\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\" \n                         value={dob}\n                        onChange={(date) => setDob(date)}\n                            type=\"date\" name=\"dob\"     id=\"dob\"required />\n                        {/* <label class=\"signup__label\" for=\"dob\">DOB</label> \n                    </div>\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\" value={age}\n                            onChange={(e) => setAge(e.target.value)}\n                            type=\"number\" name=\"age\" id=\"age\" required />\n                        <label class=\"signup__label\" for=\"age\">Age</label>\n                    </div>\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\" value={password}\n                            onChange={(e) => setPassword(e.target.value)} \n                            type=\"password\" \n                            id=\"password\"\n                            name=\"password\" required />\n                        <label class=\"signup__label\" for=\"password\">Password</label>\n\n                    </div>\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\"\n                         value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                             type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" required />\n                        <label class=\"signup__label\" for=\"confirmpassword\"> Confirm Password</label>\n                    </div>\n                    <div class=\"signup__field\">\n                        <input class=\"signup__input\" value={phone}\n                            onChange={(e) => setPhone(e.target.value)} \n                            type=\"text\" name=\"phone\"  id =\"phone\"required />\n                        <label class=\"signup__label\" for=\"phone\">Mobile No</label>\n                    </div>\n                    <button type=\"submit\" className=\"regbutton\">Sign up</button>\n                </form> */}\n            </div>\n\n\n            <div className=\"wrapper\">\n                <div className='formContent'>\n                    <FormContainer>\n                        <h1 style={{marginLeft: \"-71px\"}}>Sign Up</h1>\n                        {error && <Message variant='danger'>{error}</Message>}\n                        {message && <Message variant='danger'>{message}</Message>}\n                        {loading && <Loader />}\n                        <Form onSubmit={submitHandler} className='registerform'>\n                            <Form.Group controlId='name' className='registerform-group'>\n                               \n                                <Form.Control\n                                    type='text'\n                                    placeholder='Name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='DOB' className='registerform-group'>\n                                <div >\n                                    <DatePicker\n                                        selected={dob}\n                                        onChange={(date) => setDob(date)}\n                                        peekNextMonth\n                                        showMonthDropdown\n                                        showYearDropdown\n                                        dropdownMode=\"select\"\n                                        placeholderText=\"DOB\"\n                                    />\n                                </div>\n                            </Form.Group>\n                            <Form.Group controlId='Age' className='registerform-group'>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Age'\n                                    value={age}\n                                    onChange={(e) => setEmail(e.target.value)}\n\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='Gender' className='registerform-group'>\n                                <Form.Control as=\"select\"\n                                    value={gender}\n                                    type='text'\n                                    placeholder='Gender'\n                                    onChange={(e) => setGender(e.target.value)}\n                                >\n                                      <option value=\"\">Select</option>\n                                    <option value=\"FEMALE\">FEMALE</option>\n                                    <option value=\"MALE\">MALE</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='email' className='registerform-group'>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='email@example.com'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='phone' className='registerform-group'>\n                                <Form.Control\n                                    type='phone'\n                                    placeholder='10 digit mobile number'\n                                    value={phone}\n                                    onChange={(e) => setPhone(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='password' className='registerform-group-pass'>\n                                <Form.Control\n                                   type={passwordShown ? \"text\" : \"password\"}\n                                    // type='password'\n                                    placeholder='Enter password'\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                >\n                                    \n                                </Form.Control>\n                                \n                            </Form.Group>\n                    \n                            <input type=\"checkbox\" onClick={togglePassword}/>\n                            <Form.Group controlId='confirmPassword' className='registerform-group'>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Confirm password'\n                                    value={confirmPassword}\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Button type='submit' variant='primary'>\n                                Register\n                            </Button>\n                        </Form >\n                        <Row className='py-3'>\n                            <Col style={{ color: \"black\" }}>\n                                Have an Account?{' '}\n\n                                <Link style={{ backgroundColor: \"white\" }}\n                                    to={redirect ? `/login?redirect=${redirect}` : '/login'}\n                                >\n                                    Login\n                                </Link>\n\n                            </Col>\n                        </Row>\n                    </FormContainer >\n\n                </div>\n            </div>\n\n\n\n        </>\n    )\n}\n\nexport default DemoRegistration"],"mappings":"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"},"metadata":{},"sourceType":"module"}