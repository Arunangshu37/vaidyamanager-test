{"ast":null,"code":"var _jsxFileName = \"/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Order.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n// Get order details actions\nimport { getOrderDetails, payOrder } from '../actions/orderActions';\nconst Order = _ref => {\n  let {\n    match,\n    history\n  } = _ref;\n  // Get order id parameter from URL\n  const orderId = match.params.id;\n\n  // Boolean used to determine if the PayPal SDK has loaded\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n\n  // Get order details from state\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n\n  // Get order payment status\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n\n  // Get user details from Redux store\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading: userLoading,\n    error: userError,\n    user\n  } = userDetails;\n  if (!loading) {\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n    order.shippingPrice = addDecimals(order.shippingPrice);\n    order.taxPrice = addDecimals(order.taxPrice);\n  }\n  useEffect(() => {\n    // If there is NO user info then redirect to login page\n    dispatch(getUserDetails('profile'));\n  }, [user]);\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=test&currency=USD`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay || order._id !== orderId) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, order, successPay]);\n  const successPaymentHandler = paymentResult => {\n    // Update status of order to paid\n    dispatch(payOrder(orderId, paymentResult));\n    if (order.orderItem.isType == \"Plan\" && order.paymentResult.status == \"COMPLETED\") {\n      dispatch(updateUserProfile({\n        id: user._id,\n        isSubscriber: true\n      }));\n    } else {\n      console.log(\"payment Details Not Updated\");\n    }\n  };\n  return loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Order \", orderId), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Name: \"), order.user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, \"Email: \"), order.user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, \"Address: \"), order.shippingAddress.address, \",\", ' ', order.shippingAddress.city, ' ', order.shippingAddress.postalCode, \",\", ' ', order.shippingAddress.country, order.isDelivered ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, \"Delivered on \", order.deliveredAt) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, \"Not Delivered\"))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, \"Method: \"), order.paymentMethod, order.isPaid ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, \"Paid on \", order.paidAt) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }, \"Not Paid\"))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"Order Items\"), order.orderItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"Order is empty\") : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, order.orderItems.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 53\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 49\n    }\n  }, item.qty, \" x  \", item.price, ' ', \"= \\u20B9 \", item.qty * item.price)))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, \"Order Summary\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  }, \"\\u20B9\", order.itemsPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, \"\\u20B9\", order.shippingPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }, \"\\u20B9\", order.taxPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 37\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }, \"\\u20B9\", order.totalPrice))), !order.isPaid && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, loadingPay && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 52\n    }\n  }), !sdkReady ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(PayPalButton, {\n    amount: order.totalPrice,\n    onSuccess: successPaymentHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, error)))))));\n};\nexport default Order;","map":{"version":3,"names":["React","useEffect","useState","Button","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","Message","Loader","Link","axios","PayPalButton","ORDER_PAY_RESET","getUserDetails","updateUserProfile","getOrderDetails","payOrder","Order","match","history","orderId","params","id","sdkReady","setSdkReady","dispatch","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","userDetails","userLoading","userError","user","addDecimals","num","Math","round","toFixed","itemsPrice","orderItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","addPayPalScript","data","clientId","get","script","document","createElement","type","src","async","onload","body","appendChild","_id","isPaid","window","paypal","successPaymentHandler","paymentResult","orderItem","isType","status","isSubscriber","console","log","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","length","map","index","image","product","totalPrice"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Order.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\n// Get order details actions\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\n\nconst Order = ({ match, history }) => {\n    // Get order id parameter from URL\n    const orderId = match.params.id\n\n    // Boolean used to determine if the PayPal SDK has loaded\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n\n    // Get order details from state\n    const orderDetails = useSelector((state) => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    // Get order payment status\n    const orderPay = useSelector((state) => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    // Get user details from Redux store\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading: userLoading, error: userError, user } = userDetails\n\n    if (!loading) {\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(\n            order.orderItems.reduce(\n                (acc, item) => acc + item.price * item.qty,\n                0\n            )\n        )\n\n        order.shippingPrice = addDecimals(order.shippingPrice)\n\n        order.taxPrice = addDecimals(order.taxPrice)\n    }\n\n    useEffect(() => {\n        // If there is NO user info then redirect to login page\n        dispatch(getUserDetails('profile'))\n    }, [user])\n\n\n    useEffect(() => {\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal');\n\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=test&currency=USD`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if (!order || successPay || order._id !== orderId) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, orderId, order, successPay])\n\n    const successPaymentHandler = (paymentResult) => {\n\n        // Update status of order to paid\n        dispatch(payOrder(orderId, paymentResult));\n\n        if (order.orderItem.isType == \"Plan\" && order.paymentResult.status == \"COMPLETED\") {\n            dispatch(updateUserProfile({ id: user._id, isSubscriber: true }))\n        }\n        else {\n            console.log(\"payment Details Not Updated\")\n        }\n\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <>\n            <h1>Order {orderId}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name: </strong>\n                                {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>\n                                {order.user.email}\n                            </p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address},{' '}\n                                {order.shippingAddress.city}{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                                {order.isDelivered ? (\n                                    <Message variant='success'>\n                                        Delivered on {order.deliveredAt}\n                                    </Message>\n                                ) : (\n                                    <Message variant='danger'>\n                                        Not Delivered\n                                    </Message>\n                                )}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                                {order.isPaid ? (\n                                    <Message variant='success'>\n                                        Paid on {order.paidAt}\n                                    </Message>\n                                ) : (\n                                    <Message variant='danger'>Not Paid</Message>\n                                )}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link\n                                                        to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x  {item.price}{' '}\n                                                    = ₹ {item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>₹{order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>₹{order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>₹{order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>₹{order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            <ListGroup.Item>\n                                {error && (\n                                    <Message variant='danger'>{error}</Message>\n                                )}\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Order\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}