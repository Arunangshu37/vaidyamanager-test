{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_INFO_DETAILS_REQUEST, USER_INFO_DETAILS_SUCCESS, USER_INFO_DETAILS_FAIL, USER_INFO_DETAILS_RESET, USER_UPDATE_PASSWORD_REQUEST, USER_UPDATE_PASSWORD_SUCCESS, USER_UPDATE_PASSWORD_FAIL, USER_UPDATE_PASSWORD_RESET } from '../constants/userConstants';\nimport { ORDER_LIST_USER_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n\n    // Header to send with the request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Make request to server and get the response data\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n\n    // Dispatch user login success after making the request\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    // Set user data to local storage\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_USER_RESET\n  });\n};\nexport const register = (name, email, phone, password, age, gender, isAdmin) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    console.log(isAdmin);\n    // Header to send with the request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Make request to server and get the response data\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      phone,\n      password,\n      DOB,\n      age,\n      gender,\n      isAdmin\n    }, config);\n\n    // Dispatch user register success after making the request\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    alert('Register Successfully!');\n    // Login in the user as well after registering\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    // Set user data to local storage\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n\n    // Get user login and user info\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    // Header to send with the request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    // Make request to server and get the response data\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n\n    // Dispatch user register success after making the request\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n\n    // Get user login and user info\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n\n    // Header to send with the request\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    // Make request to server and get the response data\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n\n    // Dispatch user register success after making the request\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//userinfo action api\nexport const getUserInfoDetails = () => async dispatch => {\n  try {\n    dispatch({\n      type: USER_INFO_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/users/userInfo');\n    dispatch({\n      type: USER_INFO_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_INFO_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","USER_INFO_DETAILS_REQUEST","USER_INFO_DETAILS_SUCCESS","USER_INFO_DETAILS_FAIL","USER_INFO_DETAILS_RESET","USER_UPDATE_PASSWORD_REQUEST","USER_UPDATE_PASSWORD_SUCCESS","USER_UPDATE_PASSWORD_FAIL","USER_UPDATE_PASSWORD_RESET","ORDER_LIST_USER_RESET","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","phone","age","gender","isAdmin","console","log","DOB","alert","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","getUserInfoDetails"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/actions/userActions.js"],"sourcesContent":["import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    USER_INFO_DETAILS_REQUEST,\n    USER_INFO_DETAILS_SUCCESS,\n    USER_INFO_DETAILS_FAIL,\n    USER_INFO_DETAILS_RESET,\n    USER_UPDATE_PASSWORD_REQUEST,\n    USER_UPDATE_PASSWORD_SUCCESS,\n    USER_UPDATE_PASSWORD_FAIL,\n    USER_UPDATE_PASSWORD_RESET\n\n} from '../constants/userConstants'\nimport { ORDER_LIST_USER_RESET } from '../constants/orderConstants'\nimport axios from 'axios'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n\n        // Header to send with the request\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        // Make request to server and get the response data\n        const { data } = await axios.post(\n            '/api/users/login',\n            { email, password },\n            config\n        )\n\n        // Dispatch user login success after making the request\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        // Set user data to local storage\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    dispatch({\n        type: USER_LOGOUT,\n    })\n\n    dispatch({\n        type: USER_DETAILS_RESET,\n    })\n\n    dispatch({\n        type: ORDER_LIST_USER_RESET,\n    })\n}\n\nexport const register = (name, email, phone, password, age, gender, isAdmin) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        })\n        console.log(isAdmin)\n        // Header to send with the request\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        // Make request to server and get the response data\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, phone, password, DOB, age, gender, isAdmin },\n            config\n        )\n\n        // Dispatch user register success after making the request\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        })\n        alert('Register Successfully!');\n        // Login in the user as well after registering\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        // Set user data to local storage\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        })\n\n        // Get user login and user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        // Header to send with the request\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        // Make request to server and get the response data\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        // Dispatch user register success after making the request\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        })\n\n        // Get user login and user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        // Header to send with the request\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        // Make request to server and get the response data\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        // Dispatch user register success after making the request\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\n//userinfo action api\nexport const getUserInfoDetails = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_INFO_DETAILS_REQUEST,\n        })\n        const { data } = await axios.get('/api/users/userInfo')\n\n        dispatch({\n            type: USER_INFO_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_INFO_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}