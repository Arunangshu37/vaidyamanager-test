{"ast":null,"code":"var _jsxFileName = \"/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/ReviewOrder.js\";\nimport React, { useState, useEffect, useMemo, useCallback, Component } from 'react';\nimport { Container, Row, Card, Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listUserOrders } from '../actions/orderActions';\nimport { getAllOrders, updateOrderStatus } from '../actions/orderActions';\nimport { listProducts } from '../actions/productActions';\nimport { getUserInfoDetails } from '../actions/userActions';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nconst TextField = styled.input`\n\theight: 32px;\n  width: 200px;\n  border-radius: 3px;\n\tborder-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\tborder: 1px solid #e5e5e5;\n\tpadding: 0 32px 0 16px;\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`;\nconst ClearButton = styled(Button)`\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n\tborder-top-right-radius: 5px;\n\tborder-bottom-right-radius: 5px;\n\theight: 34px;\n\twidth: 32px;\n\ttext-align: center;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n`;\nconst ReviewOrder = _ref => {\n  let {\n    history\n  } = _ref;\n  const currentYear = new Date().getFullYear();\n  const dispatch = useDispatch();\n\n  // Get user orders from Redux store\n  const orderListUser = useSelector(state => state.orderListUser);\n  const {\n    loading: loadingUserOrders,\n    error: errorUserOrders,\n    orders\n  } = orderListUser;\n  console.log(\"User Orders->>\", orders);\n\n  //allorders\n  const allOrders = useSelector(state => state.allOrders);\n  const {\n    loading: loadingOrder,\n    error: errorOrder,\n    allorder\n  } = allOrders;\n  // console.log('Orders of users',allorder)\n\n  //ProductList\n  const productDetails = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products\n  } = productDetails;\n\n  // UserList\n  const userDetails = useSelector(state => state.userInfoDetails);\n  const {\n    users\n  } = userDetails;\n  // console.log(\"Data of user\",userDetails)\n\n  //Update order status\n  const updateOrder = useSelector(state => state.updateOrder);\n  const {\n    success\n  } = updateOrder;\n  let OrderList = [];\n  let SubscriptionList = [];\n  if (allorder) {\n    allorder.forEach((items, index) => {\n      let tempObj = {\n        userId: items.user,\n        id: 1,\n        orderId: items._id,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: items.shippingAddress.address,\n        product: items.orderItems[0].name,\n        productId: items.orderItems[0].product,\n        status: items.orderItems[0].planStatus,\n        quantity: items.orderItems[0].qty,\n        totalPrice: items.totalPrice,\n        stock: items.stock,\n        packagetype: items.orderItems[0].isType,\n        image: items.orderItems[0].image,\n        plans: items.orderItems[0].name,\n        validity: items.orderItems[0].validity,\n        orderItems: items.orderItems\n      };\n      if (items.orderItems[0].isType === \"Tablets\") {\n        OrderList.push(tempObj);\n      } else {\n        SubscriptionList.push(tempObj);\n      }\n    });\n  }\n  // console.log(\"orderlist are\", OrderList);\n  // console.log(\"SubscriptionList are\", SubscriptionList);\n\n  let tempUser;\n  let tempUserId;\n  let tempEmail;\n  let tempPhone;\n  let orderUser;\n  users.forEach((userItems, index) => {\n    OrderList.forEach((order, index) => {\n      if (order.userId == userItems._id) {\n        order.name = userItems.name;\n        order.email = userItems.email;\n        order.phone = userItems.phone;\n      }\n    });\n    SubscriptionList.forEach((order, index) => {\n      if (order.userId == userItems._id) {\n        order.name = userItems.name;\n        order.email = userItems.email;\n        order.phone = userItems.phone;\n      }\n      // console.log(\"Order of subscription\", order)\n    });\n\n    // console.log(\"New OrderList is\", OrderList)\n    // console.log(\"User Items Are\", userItems);\n  });\n\n  products.forEach((productItems, index) => {\n    OrderList.forEach((order, index) => {\n      if (order.product_id == productItems._id) {\n        order.stock = productItems.countInStock;\n      }\n    });\n    SubscriptionList.forEach((order, index) => {\n      if (order.product_id == productItems._id) {\n        order.stock = productItems.countInStock;\n      }\n      // console.log(\"Order of subscription\", order)\n    });\n\n    // console.log(\"New OrderList is\", OrderList)\n    // console.log(\"User Items Are\", userItems);\n  });\n\n  const defaultColDef = useMemo(() => ({\n    editable: true,\n    sortable: true,\n    resizable: true,\n    filter: true,\n    flex: 1,\n    minWidth: 100\n  }));\n\n  //row data\n  const [rowData] = useState([{\n    id: 1,\n    orderId: \"orderid-11eopdnee2jn\",\n    name: \"Rahul\",\n    email: \"rahul@gmail.com\",\n    phone: \"8483054848\",\n    address: \"Pune\",\n    product: \"Paracetamol\",\n    status: \"Dispatched\",\n    quantity: \"10\",\n    totalPrice: \"10\",\n    stock: \"90\",\n    packagetype: \"isDiscreet\",\n    image: \"asdcd\"\n  }, {\n    id: 2,\n    orderId: \"orderid-11eopdnee2jn\",\n    name: \"Arbaaz\",\n    email: \"arbaaz@gmail.com\",\n    phone: \"8483054848\",\n    address: \"Pune\",\n    product: \"Paracetamol\",\n    status: \"Dispatched\",\n    quantity: \"10\",\n    totalPrice: \"10\",\n    stock: \"90\",\n    packagetype: \"isDiscreet\",\n    image: \"asdcd\"\n  }, {\n    id: 3,\n    orderId: \"orderid-11eopdnee2jn\",\n    name: \"Neval\",\n    email: \"Neval@gmail.com\",\n    phone: \"8483054848\",\n    address: \"Pune\",\n    product: \"Paracetamol\",\n    status: \"Dispatched\",\n    quantity: \"10\",\n    totalPrice: \"10\",\n    stock: \"90\",\n    packagetype: \"isDiscreet\",\n    image: \"asdcd\"\n  }, {\n    id: 4,\n    orderId: \"orderid-11eopdnee2jn\",\n    name: \"sapnil\",\n    email: \"swapnil@gmail.com\",\n    phone: \"8483054848\",\n    address: \"Pune\",\n    product: \"Paracetamol\",\n    status: \"Delivered\",\n    quantity: \"10\",\n    totalPrice: \"10\",\n    stock: \"90\",\n    packagetype: \"isDiscreet\",\n    image: \"asdcd\"\n  }]);\n\n  // order columns\n  const [columnDefs] = useState([{\n    headerName: 'Name',\n    field: 'name',\n    rowGroup: true\n  }, {\n    field: 'email'\n  }, {\n    field: 'phone'\n  }, {\n    headerName: 'Address',\n    field: 'address',\n    sortable: true,\n    filter: true\n  }, {\n    headerName: 'Product',\n    field: 'product'\n  }, {\n    field: 'totalPrice'\n  }, {\n    field: 'packagetype'\n  }, {\n    field: 'stock'\n  }, {\n    field: 'status',\n    editable: true\n  }, {\n    field: 'image'\n  }, {\n    field: 'status',\n    cellEditor: 'select',\n    cellEditorParams: {\n      values: ['Confirmed', 'Dispatched', 'Delivered'],\n      editable: true\n    }\n  }]);\n\n  // const onRowClicked(event) => {\n  //   console.log('row', event)\n  // }\n\n  const onRowEditingStarted = useCallback(event => {}, []);\n  const onRowEditingStopped = useCallback(event => {}, []);\n  const onCellEditingStarted = useCallback(event => {}, []);\n  const onCellEditingStopped = useCallback(event => {\n    // console.log('cellEditingStopped ----->', event);\n    // console.log(\"Order Id is\", event.data.orderId);\n    let orderItems = {\n      product: event.data.orderItems[0].product,\n      name: event.data.orderItems[0].name,\n      image: event.data.orderItems[0].image,\n      price: event.data.orderItems[0].price,\n      countInStock: event.data.orderItems[0].countInStock,\n      isType: event.data.orderItems[0].isType,\n      validity: event.data.orderItems[0].validity,\n      activationDate: event.data.orderItems[0].activationDate,\n      expiryDate: event.data.orderItems[0].expiryDate,\n      planStatus: event.value,\n      qty: event.data.orderItems[0].qty\n    };\n    dispatch(updateOrderStatus({\n      orderId: event.data.orderId,\n      status: event.data.planStatus,\n      product: event.data.productId,\n      orderItems: orderItems\n    }, event.data.orderId));\n    console.log(\" After Dispatched Successfule ----->\");\n    window.location.reload();\n  }, []);\n\n  //subscription columns\n  const [subscriptioncolumnDefs] = useState([{\n    headerName: 'Name',\n    field: 'name'\n  }, {\n    field: 'email'\n  }, {\n    field: 'phone'\n  }, {\n    headerName: 'Address',\n    field: 'address'\n  }, {\n    field: 'plans'\n  }, {\n    field: 'productId',\n    hide: true\n  }, {\n    field: 'totalPrice'\n  }, {\n    headerName: 'Validity',\n    field: 'validity'\n  }, {\n    field: 'packagetype'\n  }, {\n    field: 'stock'\n  }, {\n    field: 'status'\n  }, {\n    field: 'orderItems',\n    hide: true\n  }, {\n    field: 'status',\n    cellEditor: 'select',\n    cellEditorParams: {\n      values: ['Active', 'Expired'],\n      editable: true\n    }\n  }]);\n  useEffect(() => {\n    dispatch(listUserOrders());\n    dispatch(getAllOrders());\n    dispatch(listProducts());\n    dispatch(getUserInfoDetails());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, \" Review Order\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, \"Order List\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myGrid\",\n    className: \"ag-theme-alpine\",\n    style: {\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AgGridReact, {\n    rowData: OrderList,\n    columnDefs: columnDefs,\n    defaultColDef: defaultColDef,\n    onRowEditingStarted: onRowEditingStarted,\n    onRowEditingStopped: onRowEditingStopped,\n    onCellEditingStarted: onCellEditingStarted,\n    onCellEditingStopped: onCellEditingStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }\n  }, \" Subscription List\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myGrid\",\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AgGridReact, {\n    rowData: SubscriptionList,\n    columnDefs: subscriptioncolumnDefs,\n    defaultColDef: defaultColDef,\n    onRowEditingStarted: onRowEditingStarted,\n    onRowEditingStopped: onRowEditingStopped,\n    onCellEditingStarted: onCellEditingStarted,\n    onCellEditingStopped: onCellEditingStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default ReviewOrder;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Component","Container","Row","Card","Button","styled","useDispatch","useSelector","listUserOrders","getAllOrders","updateOrderStatus","listProducts","getUserInfoDetails","AgGridReact","TextField","input","ClearButton","ReviewOrder","history","currentYear","Date","getFullYear","dispatch","orderListUser","state","loading","loadingUserOrders","error","errorUserOrders","orders","console","log","allOrders","loadingOrder","errorOrder","allorder","productDetails","productList","products","userDetails","userInfoDetails","users","updateOrder","success","OrderList","SubscriptionList","forEach","items","index","tempObj","userId","user","id","orderId","_id","name","email","phone","address","shippingAddress","product","orderItems","productId","status","planStatus","quantity","qty","totalPrice","stock","packagetype","isType","image","plans","validity","push","tempUser","tempUserId","tempEmail","tempPhone","orderUser","userItems","order","productItems","product_id","countInStock","defaultColDef","editable","sortable","resizable","filter","flex","minWidth","rowData","columnDefs","headerName","field","rowGroup","cellEditor","cellEditorParams","values","onRowEditingStarted","event","onRowEditingStopped","onCellEditingStarted","onCellEditingStopped","data","price","activationDate","expiryDate","value","window","location","reload","subscriptioncolumnDefs","hide","height"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/ReviewOrder.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, Component } from 'react'\nimport { Container, Row, Card, Button } from 'react-bootstrap'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listUserOrders } from '../actions/orderActions'\nimport { getAllOrders, updateOrderStatus } from '../actions/orderActions'\nimport { listProducts } from '../actions/productActions'\nimport { getUserInfoDetails } from '../actions/userActions'\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\n\n\n\n\nconst TextField = styled.input`\n\theight: 32px;\n  width: 200px;\n  border-radius: 3px;\n\tborder-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\tborder: 1px solid #e5e5e5;\n\tpadding: 0 32px 0 16px;\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst ClearButton = styled(Button)`\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n\tborder-top-right-radius: 5px;\n\tborder-bottom-right-radius: 5px;\n\theight: 34px;\n\twidth: 32px;\n\ttext-align: center;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n`;\n\nconst ReviewOrder = ({ history }) => {\n  const currentYear = new Date().getFullYear();\n  const dispatch = useDispatch();\n\n  // Get user orders from Redux store\n  const orderListUser = useSelector((state) => state.orderListUser)\n  const { loading: loadingUserOrders, error: errorUserOrders, orders } = orderListUser\n  console.log(\"User Orders->>\",orders)\n\n\n\n\n  //allorders\n  const allOrders = useSelector((state) => state.allOrders)\n  const { loading: loadingOrder, error: errorOrder, allorder } = allOrders\n  // console.log('Orders of users',allorder)\n\n\n  //ProductList\n  const productDetails = useSelector((state) => state.productList)\n  const { loading, error, products } = productDetails;\n\n\n  // UserList\n  const userDetails = useSelector((state) => state.userInfoDetails)\n  const { users } = userDetails;\n  // console.log(\"Data of user\",userDetails)\n\n\n  //Update order status\n  const updateOrder = useSelector((state) => state.updateOrder)\n  const { success } = updateOrder;\n\n\n\n\n  let OrderList = [];\n  let SubscriptionList = [];\n\n\n  if (allorder) {\n    allorder.forEach((items, index) => {\n\n      let tempObj = {\n        userId: items.user,\n        id: 1,\n        orderId: items._id,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: items.shippingAddress.address,\n        product: items.orderItems[0].name,\n        productId: items.orderItems[0].product,\n        status: items.orderItems[0].planStatus,\n        quantity: items.orderItems[0].qty,\n        totalPrice: items.totalPrice,\n        stock: items.stock,\n        packagetype: items.orderItems[0].isType,\n        image: items.orderItems[0].image,\n        plans: items.orderItems[0].name,\n        validity: items.orderItems[0].validity,\n        orderItems:items.orderItems,\n      }\n\n\n      if (items.orderItems[0].isType === \"Tablets\") {\n        OrderList.push(tempObj)\n      }\n      else {\n\n        SubscriptionList.push(tempObj)\n      }\n\n    })\n  }\n  // console.log(\"orderlist are\", OrderList);\n  // console.log(\"SubscriptionList are\", SubscriptionList);\n\n\n  let tempUser\n  let tempUserId\n  let tempEmail\n  let tempPhone\n  let orderUser\n\n  users.forEach((userItems, index) => {\n    OrderList.forEach((order, index) => {\n      if (order.userId == userItems._id) {\n        order.name = userItems.name;\n        order.email = userItems.email;\n        order.phone = userItems.phone;\n      }\n    })\n    SubscriptionList.forEach((order, index) => {\n      if (order.userId == userItems._id) {\n        order.name = userItems.name;\n        order.email = userItems.email;\n        order.phone = userItems.phone;\n      }\n      // console.log(\"Order of subscription\", order)\n    })\n\n    // console.log(\"New OrderList is\", OrderList)\n    // console.log(\"User Items Are\", userItems);\n  })\n  products.forEach((productItems, index) => {\n    OrderList.forEach((order, index) => {\n      if (order.product_id == productItems._id) {\n        order.stock = productItems.countInStock;\n\n      }\n    })\n    SubscriptionList.forEach((order, index) => {\n      if (order.product_id == productItems._id) {\n        order.stock = productItems.countInStock;\n      }\n      // console.log(\"Order of subscription\", order)\n    })\n\n    // console.log(\"New OrderList is\", OrderList)\n    // console.log(\"User Items Are\", userItems);\n  })\n\n\n  const defaultColDef = useMemo(() => ({\n    editable: true,\n    sortable: true,\n    resizable: true,\n    filter: true,\n    flex: 1,\n    minWidth: 100\n  }));\n\n  //row data\n  const [rowData] = useState([\n\n    {\n      id: 1,\n      orderId: \"orderid-11eopdnee2jn\",\n      name: \"Rahul\",\n      email: \"rahul@gmail.com\",\n      phone: \"8483054848\",\n      address: \"Pune\",\n      product: \"Paracetamol\",\n      status: \"Dispatched\",\n      quantity: \"10\",\n      totalPrice: \"10\",\n      stock: \"90\",\n      packagetype: \"isDiscreet\",\n      image: \"asdcd\",\n    },\n    {\n      id: 2,\n      orderId: \"orderid-11eopdnee2jn\",\n      name: \"Arbaaz\",\n      email: \"arbaaz@gmail.com\",\n      phone: \"8483054848\",\n      address: \"Pune\",\n      product: \"Paracetamol\",\n      status: \"Dispatched\",\n      quantity: \"10\",\n      totalPrice: \"10\",\n      stock: \"90\",\n      packagetype: \"isDiscreet\",\n      image: \"asdcd\",\n    },\n    {\n      id: 3,\n      orderId: \"orderid-11eopdnee2jn\",\n      name: \"Neval\",\n      email: \"Neval@gmail.com\",\n      phone: \"8483054848\",\n      address: \"Pune\",\n      product: \"Paracetamol\",\n      status: \"Dispatched\",\n      quantity: \"10\",\n      totalPrice: \"10\",\n      stock: \"90\",\n      packagetype: \"isDiscreet\",\n      image: \"asdcd\",\n    },\n\n    {\n      id: 4,\n      orderId: \"orderid-11eopdnee2jn\",\n      name: \"sapnil\",\n      email: \"swapnil@gmail.com\",\n      phone: \"8483054848\",\n      address: \"Pune\",\n      product: \"Paracetamol\",\n      status: \"Delivered\",\n      quantity: \"10\",\n      totalPrice: \"10\",\n      stock: \"90\",\n      packagetype: \"isDiscreet\",\n      image: \"asdcd\",\n    },\n  ]);\n\n\n\n  // order columns\n  const [columnDefs] = useState([\n    {\n      headerName: 'Name',\n      field: 'name',\n      rowGroup: true,\n    },\n    { field: 'email' },\n    { field: 'phone', },\n    {\n      headerName: 'Address',\n      field: 'address',\n      sortable: true,\n      filter: true,\n    },\n    {\n      headerName: 'Product',\n      field: 'product',\n\n    },\n   \n    {\n      field: 'totalPrice',\n\n    },\n    { field: 'packagetype' },\n    { field: 'stock' },\n    {\n      field: 'status',\n      editable: true\n    },\n    { field: 'image' },\n    {\n      field: 'status',\n      cellEditor: 'select',\n      cellEditorParams: {\n        values: ['Confirmed', 'Dispatched', 'Delivered'],\n        editable: true\n      }\n    }\n  ])\n\n  // const onRowClicked(event) => {\n  //   console.log('row', event)\n  // }\n\n  const onRowEditingStarted = useCallback((event) => {\n\n  }, []);\n\n  const onRowEditingStopped = useCallback((event) => {\n\n  }, []);\n\n  const onCellEditingStarted = useCallback((event) => {\n\n  }, []);\n\n  const onCellEditingStopped = useCallback((event) => {\n\n    // console.log('cellEditingStopped ----->', event);\n    // console.log(\"Order Id is\", event.data.orderId);\n    let orderItems ={\n   \n        product: event.data.orderItems[0].product,\n        name: event.data.orderItems[0].name,\n        image: event.data.orderItems[0].image,\n        price: event.data.orderItems[0].price,\n        countInStock: event.data.orderItems[0].countInStock,\n        isType:event.data.orderItems[0].isType,\n        validity:event.data.orderItems[0].validity,\n        activationDate:event.data.orderItems[0].activationDate,\n        expiryDate:event.data.orderItems[0].expiryDate,\n        planStatus:event.value,\n        qty:event.data.orderItems[0].qty,\n   \n    }\n    dispatch(updateOrderStatus({ orderId: event.data.orderId, status: event.data.planStatus ,product:event.data.productId,orderItems:orderItems}, event.data.orderId))\n    console.log(\" After Dispatched Successfule ----->\")\n    window.location.reload();\n    \n  }, []);\n\n  //subscription columns\n  const [subscriptioncolumnDefs] = useState([\n    {\n      headerName: 'Name',\n      field: 'name'\n    },\n\n    {\n      field: 'email'\n    },\n    {\n      field: 'phone',\n    },\n    {\n      headerName: 'Address',\n      field: 'address',\n    },\n    {\n      field: 'plans',\n    },\n    {\n      field: 'productId',\n      hide:true\n    },\n    {\n      field: 'totalPrice',\n    },\n    {\n      headerName: 'Validity',\n      field: 'validity',\n\n    },\n\n    {\n      field: 'packagetype'\n    },\n    {\n      field: 'stock'\n    },\n    {\n      field: 'status'\n    },\n    {\n      field: 'orderItems',\n      hide :true\n    },\n    {\n      field: 'status',\n      cellEditor: 'select',\n      cellEditorParams: {\n        values: ['Active','Expired'],\n        editable: true\n      }\n    },\n\n  ])\n\n  useEffect(() => {\n    dispatch(listUserOrders());\n    dispatch(getAllOrders());\n    dispatch(listProducts());\n    dispatch(getUserInfoDetails());\n\n\n\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Card className=\"text-center\">\n        <Card.Header> Review Order</Card.Header>\n        <Card.Body>\n          <Card.Title>\n            <h1>Order List</h1>\n          </Card.Title>\n\n\n          <div id=\"myGrid\" className=\"ag-theme-alpine\" style={{ height: \"500px\" }}>\n            <AgGridReact\n              rowData={OrderList}\n              columnDefs={columnDefs}\n              defaultColDef={defaultColDef}\n              onRowEditingStarted={onRowEditingStarted}\n              onRowEditingStopped={onRowEditingStopped}\n              onCellEditingStarted={onCellEditingStarted}\n              onCellEditingStopped={onCellEditingStopped}\n            >\n            </AgGridReact>\n          </div>\n\n\n\n          <h1> Subscription List</h1>\n\n          <div id=\"myGrid\" className=\"ag-theme-alpine\" style={{ height: 500 }}>\n            <AgGridReact\n              rowData={SubscriptionList}\n              columnDefs={subscriptioncolumnDefs}\n              defaultColDef={defaultColDef}\n              onRowEditingStarted={onRowEditingStarted}\n              onRowEditingStopped={onRowEditingStopped}\n              onCellEditingStarted={onCellEditingStarted}\n              onCellEditingStopped={onCellEditingStopped}\n            >\n            </AgGridReact>\n          </div>\n\n\n        </Card.Body>\n      </Card>\n\n    </Container>\n  );\n}\n\nexport default ReviewOrder\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}