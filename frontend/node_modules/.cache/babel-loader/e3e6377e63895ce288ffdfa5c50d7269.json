{"ast":null,"code":"var _jsxFileName = \"/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Consultation.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Card, Col, ListGroup, Button, Image, Form, Table, Modal } from 'react-bootstrap';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport { Accordion } from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport DatePicker, { addDays, subDays } from \"react-datepicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFilePicker } from \"use-file-picker\";\nimport { listDoctors, createDoctor, updateAppointments, cancelAppointmentDates } from '../actions/productActions';\nimport { listConsultants, updateConsultation, getConsultantDetails, consultationLink } from '../actions/consultationActions.js';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport dayjs from 'dayjs';\nimport { createAppointment, cancelAppointments } from '../actions/consultationActions';\nimport { APPOINTMENT_CREATE_RESET } from '../constants/consultationConstants';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../doctorCard.css\";\nimport DoctorDataCard from '../components/DoctorDataCard';\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\nimport Box from '@mui/material/Box';\nimport SaveIcon from '@mui/icons-material/Save';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport \"../tab.css\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport PaymentsSharpIcon from '@mui/icons-material/PaymentsSharp';\nimport axios from \"axios\";\nimport { cleanData } from 'jquery';\nimport moment from 'moment';\nimport Prescription from './Prescription';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nconst Consultation = _ref => {\n  let {\n    match,\n    history\n  } = _ref;\n  const [isLogin, setIsLogin] = useState(localStorage.getItem('isLogin'));\n  // console.log(\"Logged in Successfuly\", isLogin)\n  const currentYear = new Date().getFullYear();\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\n  const [startDate, setStartDate] = useState(new Date());\n  const [from, setFrom] = useState(new Date());\n  const [to, setTo] = useState(new Date());\n  const [show, setShow] = useState(false);\n  const [editRow, setEditRow] = useState({\n    id: \"\",\n    fromDate: new Date(),\n    toDate: new Date()\n  });\n  const [key, setKey] = useState('Appointments');\n  const [appointmentRowData, setAppointmentRowData] = useState([]);\n  const [select, setSelection] = React.useState([]);\n  const [modalShow, setModalShow] = React.useState({\n    isBoolean: false\n  });\n  const [excludeDate, setExcludeDate] = useState('');\n  const [postdata, setPostdata] = useState('');\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleEdit = date => {\n    handleShow();\n    setEditRow({\n      id: date.row._id,\n      fromDate: new Date(date.row.from),\n      toDate: new Date(date.row.to)\n    });\n    // console.log(\"handle\", date.row)\n  };\n\n  const [endDate, setEndDate] = useState(null);\n  const dispatch = useDispatch();\n\n  // doctor Slot Tab Columns\n  //by default sorting\n  const [docsortModel, setDocsortModel] = useState([{\n    field: \"from\",\n    sort: \"desc\"\n  }]);\n  const doctorSlotColumns = [{\n    field: '_id',\n    headerName: 'ID',\n    width: 90,\n    hide: true\n  }, {\n    field: 'from',\n    headerName: 'From',\n    sortable: true,\n    width: 180,\n    type: 'dateTime',\n    valueGetter: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value && new Date(value);\n    },\n    sortingOrder: ['asc', 'desc']\n  }, {\n    field: 'to',\n    headerName: 'To',\n    sortable: true,\n    width: 180,\n    type: 'dateTime',\n    valueGetter: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return value && new Date(value);\n    }\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    width: 100,\n    renderCell: params => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: () => handleEdit(params),\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EditIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: () => doctorAppointmentCancel(doctorInfo, params.row._id),\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  const [sortModel, setSortModel] = useState([{\n    field: \"date\",\n    sort: \"desc\"\n  }]);\n  // Appointment Tab Columns\n  const appointmentColumns = [{\n    field: '_id',\n    headerName: 'ID',\n    width: 90,\n    hide: true\n  }, {\n    field: 'patientName',\n    headerName: 'Patient Name',\n    width: 120\n  }, {\n    field: 'date',\n    headerName: ' Appointment Date',\n    width: 190,\n    type: 'dateTime',\n    sortable: true,\n    valueGetter: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return value && new Date(value);\n    }\n  }, {\n    field: 'appointment_status',\n    headerName: 'Status',\n    width: 120\n  }, {\n    field: 'payment_status',\n    headerName: 'Payment Status',\n    width: 140\n  }, {\n    field: 'consultationLink',\n    headerName: 'Consultation Link',\n    width: 140,\n    renderCell: params => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        size: \"medium\",\n        disabled: params.row.payment_status === \"Unpaid\",\n        onClick: () => zoomMeeting(params),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, \"Link\"));\n    }\n  },\n  // {\n  //   field: 'status', headerName: 'Consultation Status', width: 180,\n  //   renderCell: (params) => {\n  //     return (\n  //       <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n  //         {/* // disabled={params.row.payment_status === \"Paid\" &&  params.row.consultationLink=='' ? false:true} */}\n  //         {params.row.payment_status === \"Unpaid\" && params.row.consultationLink === '' ? 'Not Done' : 'Done'}\n\n  //       </div>\n  //     )\n  //   }\n  // },\n  {\n    field: 'action',\n    headerName: 'Action',\n    width: 120,\n    renderCell: params => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: () => doctorappointmnetDelete(params.id),\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  const [patientSortModel, setPatientSortModel] = useState([{\n    field: \"date\",\n    sort: \"desc\"\n  }]);\n  //patient Data columns\n  const patientColumns = [{\n    field: '_id',\n    headerName: 'ID',\n    width: 90,\n    hide: true\n  }, {\n    field: 'name',\n    headerName: 'Doctor Name',\n    width: 180\n  }, {\n    field: 'date',\n    headerName: 'Appointment Date',\n    width: 160,\n    type: 'dateTime',\n    sortable: true,\n    valueGetter: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return value && new Date(value);\n    }\n  }, {\n    field: 'appointment_status',\n    headerName: 'Status',\n    width: 100\n  }, {\n    field: 'payment_status',\n    headerName: 'Payment Status',\n    width: 120\n  }, {\n    field: 'payment',\n    headerName: 'Payment',\n    width: 80,\n    renderCell: params => {\n      // console.log(\"Param is\", typeof params.row.doc_fee)\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        disabled: params.row.payment_status === \"Paid\",\n        onClick: () => payment(params),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, \"Pay\"));\n    }\n  }, {\n    field: 'consultationLink',\n    headerName: 'Consultation Link',\n    width: 140,\n    editable: false,\n    renderCell: params => {\n      // console.log(\"params\", params);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        size: \"medium\",\n        disabled: params.row.payment_status === \"Unpaid\" || params.row.consultationLink === '',\n        onClick: () => patientLink(params),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, \"Link\"));\n    }\n  }, {\n    field: 'prescriptionSource',\n    headerName: 'Prescription',\n    width: 120,\n    renderCell: params => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        size: \"large\",\n        disabled: params.row.prescriptionSource === '',\n        onClick: () => pdf(params),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FileDownloadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      })));\n    }\n  }, {\n    field: 'action',\n    headerName: 'Cancel',\n    width: 120,\n    renderCell: params => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\"\n        // onClick={() => appointmentCancel(params.id)\n        ,\n        onClick: () => setModalShow({\n          isBoolean: true,\n          id: params.id\n        }),\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CancelIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n\n  //Display the pdf function\n  const pdf = consultant => {\n    // console.log(\"first\", consultant.row.prescriptionSource)\n    var win = window.open();\n    win.document.write('<iframe src=\"' + consultant.row.prescriptionSource + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>');\n  };\n  const doctorList = useSelector(state => state.doctorList);\n  const {\n    loading,\n    error,\n    doctors\n  } = doctorList;\n  const consultationList = useSelector(state => state.consultationList);\n  const {\n    loadingConsultant,\n    errorConsultant,\n    consultants\n  } = consultationList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const isAdmin = userInfo === null || userInfo === void 0 ? void 0 : userInfo.isAdmin;\n  const isSuperAdmin = userInfo === null || userInfo === void 0 ? void 0 : userInfo.isSuperAdmin;\n  const doctorInfo = doctors === null || doctors === void 0 ? void 0 : doctors.find(doctor => doctor.email_id == (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email));\n  // console.log(\"docInfo\", doctorInfo)\n\n  //cancel the appointment\n  const cancelAppointment = useSelector(state => state.cancelAppointments);\n  const {\n    loadingApp,\n    errorApp,\n    appointments\n  } = cancelAppointment;\n\n  //add from and to time at patient side\n  const [docDate, setDocDate] = useState({\n    \"date\": \"\",\n    \"docName\": \"\"\n  });\n  const [fromTime, setFromTime] = useState(new Date());\n  const [toTime, setToTime] = useState(new Date());\n  const onChangeDate = (date, name) => {\n    var _filterTime, _filterTime2;\n    const newDocDate = {\n      date,\n      docName: name\n    };\n    setDocDate(newDocDate);\n    setStartDate(date);\n    let filterTime;\n    if (name) {\n      var _doctors$find;\n      const consultantDate = doctors === null || doctors === void 0 ? void 0 : (_doctors$find = doctors.find(doctor => doctor.name == name)) === null || _doctors$find === void 0 ? void 0 : _doctors$find.consultant_date;\n      filterTime = consultantDate === null || consultantDate === void 0 ? void 0 : consultantDate.find(dates => dayjs(dates.from).format(\"ddd, MMM DD, YYYY\") == dayjs(date).format(\"ddd, MMM DD, YYYY\"));\n    }\n    console.log(\"filter time\", filterTime);\n    console.log(\"from\", typeof ((_filterTime = filterTime) === null || _filterTime === void 0 ? void 0 : _filterTime.from));\n    console.log(\"To\", typeof ((_filterTime2 = filterTime) === null || _filterTime2 === void 0 ? void 0 : _filterTime2.to));\n    if (filterTime) {\n      setFromTime(filterTime.from);\n      setToTime(filterTime.to);\n    } else {\n      setFromTime(new Date());\n      setToTime(new Date());\n    }\n    // console.log(\"filter time\",filterTime)\n  };\n\n  // console.log(\"from time\",fromTime)\n  useEffect(() => {}, [docDate]);\n  function handleDateChange(date) {\n    // initial change: start by setting the startDate\n    if (!startDate && !endDate) {\n      setStartDate(date);\n      // startDate has been set, set the end date\n    } else if (startDate && !endDate) {\n      setEndDate(date);\n    }\n    // user is choosing another range => set the start date\n    // and set the endDate back to null\n    if (startDate && endDate) {\n      setStartDate(date);\n      setEndDate(null);\n    }\n  }\n  const [doctor, setDoctor] = useState(\"\");\n  const appointmentCreate = useSelector(state => state.createAppointment);\n  const {\n    appointment,\n    success,\n    errorAppointment\n  } = appointmentCreate;\n\n  // use effect for create appointment\n  useEffect(() => {\n    if (success) {\n      dispatch({\n        type: APPOINTMENT_CREATE_RESET\n      });\n    }\n  }, [history, success]);\n  const consultationLinkDisabled = consultationDate => {\n    const timeDiff = dayjs().diff(consultationDate, \"minutes\");\n    // console.log(\"Consultation Date is\", consultationDate, timeDiff);\n    if (0 <= timeDiff && timeDiff <= 25) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  // console.log(\"modal show\", modalShow)\n  // Generate URL function of zoom\n  const zoomMeeting = consultant => {\n    // console.log(\"Consultant is\",consultant)\n    const metas = document.getElementsByTagName('meta');\n    for (let i = 0; i < metas.length; i++) {\n      if (metas[i].getAttribute('name') === \"viewport\") {\n        metas[i].setAttribute('content', \"width=1024, initial-scale=1\");\n        break;\n      }\n    }\n    const data = {\n      // email: \"mayurichavan842@gmail.com\",\n      email: \"info@mindvein.com\"\n    };\n    axios.post(`https://testzoomapi-mayuri0723.vercel.app/meeting`, data).then(response => {\n      let URL = response.data.join_url.replaceAll(\"https://us05web.zoom.us/j/\", \"http://localhost:9999/?\") + `?role=1&name=${consultant.row.name}`;\n      console.log({\n        URL\n      });\n      console.log(consultant.row.name);\n      console.log(response.data);\n      // window.innerWidth = 1024;\n      // window.open(`${URL}`,'_blank',\"width=1268\");\n      // const meetingLinkWitoutPassword = response.data.join_url.split(\"?\")[0];\n      // const webClinetMeetingLink = meetingLinkWitoutPassword.replaceAll(\"/j/\", \"/wc/\") + \"/join\";\n      // console.log({webClinetMeetingLink},{meetingLinkWitoutPassword});\n      window.open(`${URL}`, '_blank');\n      // var newWindow =  window.open(\"/prescription\",'_blank',\"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400\");\n      window.open(`/prescription/${consultant.id}`, '_blank', \"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400\");\n      // console.log(consultant)\n      dispatch(consultationLink(consultant.row._id, response.data.join_url));\n    }).catch(err => console.error(err));\n  };\n  const patientLink = consultant => {\n    // console.log(\"consultant\", consultant)\n    window.open(consultant.row.consultationLink, \"_blank\");\n  };\n\n  //calling from payment button\n  const payment = params => {\n    // console.log(\"Transaction\", typeof params.row.doc_fee)\n    const transactionData = {\n      \"txnid\": \"T\" + params.id,\n      \"amount\": params.row.doc_fee,\n      \"name\": params.row.patientName,\n      \"email\": params.row.patientEmail_address,\n      \"phone\": (userInfo === null || userInfo === void 0 ? void 0 : userInfo.phone) + \"\",\n      \"productinfo\": \"Consultation\",\n      \"surl\": `http://localhost:3000/api/easebuzz/easebuzz_reponse/${params.id}`,\n      \"furl\": `http://localhost:3000/api/easebuzz/easebuzz_reponse/${params.id}`,\n      \"udf1\": \"\",\n      \"udf2\": \"\",\n      \"udf3\": \"\",\n      \"udf4\": \"\",\n      \"udf5\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipcode\": \"\",\n      \"sub_merchant_id\": \"\",\n      \"unique_id\": \"\",\n      \"split_payments\": \"\",\n      \"customer_authentication_id\": \"\",\n      \"udf6\": \"\",\n      \"udf7\": \"\",\n      \"udf8\": \"\",\n      \"udf9\": \"\",\n      \"udf10\": \"\"\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"object\", transactionData, config);\n    axios.post(\"http://localhost:3000/api/easebuzz/initiate_payment\", transactionData, config).then(response => {\n      console.log(\"Response is\", response.data);\n      window.location.href = response.data;\n    }).catch(e => console.log(e));\n  };\n\n  //demo consultant\n  // const consultantpayment = () => {\n  //   const appConsultant= (consultants?.length > 0 && consultants[0] !== 'undefined' && consultants?.filter((consultantmail) => consultantmail?.patientEmail_address == userInfo?.email))\n  //   console.log(\"Appoint consultant\",appConsultant)\n  //   // console.log(\"Consultant is\",  consultant)\n  //   const doctorfee = doctors?.find((doc) => doc.name === doctor)\n  //   const transactionData = {\n  //     \"txnid\": \"T\" + appConsultant._id,\n  //     \"amount\": doctorfee?.consultation_fee,\n  //     \"name\":userInfo?.name,\n  //     \"email\":userInfo?.email,\n  //     \"phone\": userInfo?.phone + \"\",\n  //     \"productinfo\": \"Consultation\",\n  //     \"surl\": `http://45.250.225.44:5000/api/easebuzz/easebuzz_reponse/${appConsultant._id}`,\n  //     \"furl\": `http://45.250.225.44:5000/api/easebuzz/easebuzz_reponse/${appConsultant._id}`,\n  //     \"udf1\": \"\",\n  //     \"udf2\": \"\",\n  //     \"udf3\": \"\",\n  //     \"udf4\": \"\",\n  //     \"udf5\": \"\",\n  //     \"address1\": \"\",\n  //     \"address2\": \"\",\n  //     \"city\": \"\",\n  //     \"state\": \"\",\n  //     \"country\": \"\",\n  //     \"zipcode\": \"\",\n  //     \"sub_merchant_id\": \"\",\n  //     \"unique_id\": \"\",\n  //     \"split_payments\": \"\",\n  //     \"customer_authentication_id\": \"\",\n  //     \"udf6\": \"\",\n  //     \"udf7\": \"\",\n  //     \"udf8\": \"\",\n  //     \"udf9\": \"\",\n  //     \"udf10\": \"\"\n  //   }\n\n  //   const config = {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       Authorization: `Bearer ${userInfo.token}`,\n  //     },\n  //   }\n  //   console.log(\"object\", transactionData, config)\n  //   axios.post(\"http://45.250.225.44:5000/api/easebuzz/initiate_payment\", transactionData, config)\n  //     .then((response) => {\n  //       console.log(\"Set\")\n  //       setPostdata(response.data)\n  //       console.log(\"Response is\", response.data)\n\n  //       // window.location.href = response.data\n  //       window.open(`${response.data}`, '_blank');\n  //     })\n  //     .catch(e => console.log(e))\n  // }\n\n  const placeAppointmentHandler = doctor => {\n    const doctorfee = doctors === null || doctors === void 0 ? void 0 : doctors.find(doc => doc.name === doctor);\n    // console.log(\"Doctor fee\",doctorfee)\n\n    var name = doctor;\n    var payment_status = \"Unpaid\";\n    var appointment_status = \"Confirmed\";\n    var appointment_date = startDate;\n    var confirmed_date = startDate;\n    var payment_details = \"Done\";\n    var prescriptionSource = \"\";\n    var patientEmail_address = userInfo === null || userInfo === void 0 ? void 0 : userInfo.email;\n    var patientName = userInfo === null || userInfo === void 0 ? void 0 : userInfo.name;\n    var patientWeight = \"\";\n    var patientHeight = \"\";\n    var Observation = \"\";\n    var consultationLink = \"\";\n    var actual_patientName = \"\";\n    var doc_fee = doctorfee.consultation_fee;\n    setDoctor(\"\");\n    console.log(\"doctor\", appointment_date);\n    // console.log(\"Consultation Doctor\", doctors.consultation_fee)\n    dispatch(createAppointment({\n      name: name,\n      date: docDate.date,\n      payment_status: payment_status,\n      appointment_status: appointment_status,\n      appointment_date: appointment_date,\n      confirmed_date: confirmed_date,\n      payment_details: payment_details,\n      prescriptionSource: prescriptionSource,\n      patientEmail_address: patientEmail_address,\n      patientName: patientName,\n      patientWeight: patientWeight,\n      patientHeight: patientHeight,\n      Observation: Observation,\n      actual_patientName: actual_patientName,\n      consultationLink: consultationLink,\n      doc_fee: doc_fee\n    }));\n    alert('Appointment is Booked. You have to make the payment for the appointment.Please click on the payment button from the below appointment list.');\n    window.location.reload(false);\n  };\n\n  //Add appointment dates in doctor\n  const addDateAppointmentHandler = (docInfo, from, to) => {\n    const availabeTime = {};\n    availabeTime['from'] = dayjs(from).format('YYYY-MM-DDTHH:mm:ssZ');\n    availabeTime['to'] = dayjs(to).format('YYYY-MM-DDTHH:mm:ssZ');\n    let newDates = Object.assign([], docInfo === null || docInfo === void 0 ? void 0 : docInfo.consultant_date);\n    // console.log(\"Doc\", docInfo)\n    // console.log(\"Consulatny DAte\", docInfo?.consultant_date)\n    // const newDates = []\n    // console.log(\"New Dates\", docInfo, availabeTime, newDates)\n    newDates.push(availabeTime);\n    // console.log(\"AvailableTime\", availabeTime)\n    const consultants_Date = {\n      name: docInfo.name,\n      qualification: docInfo.qualification,\n      email_id: docInfo.email_id,\n      phone_no: docInfo.phone_no,\n      consultant_date: newDates\n    };\n    // console.log(docInfo._id, consultants_Date)\n    dispatch(createDoctor(docInfo._id, consultants_Date));\n    alert('Slot Added Successfully..');\n    window.location.reload(false);\n  };\n  const excludeAppointmentDate = () => {\n    const dates = consultants === null || consultants === void 0 ? void 0 : consultants.filter(e => e.name === doctor);\n    const bookedDates = [];\n    dates.forEach(e => {\n      // console.log(dayjs(startDate).format('ddd, MMM DD, YYYY') , dayjs(e).format('ddd, MMM DD, YYYY'))\n      console.log(startDate, e);\n      if (dayjs(startDate).format('ddd, MMM DD, YYYY,h:mm A') === dayjs(e.appointment_date).format('ddd, MMM DD, YYYY,h:mm A')) {\n        bookedDates.push(new Date(e.appointment_date));\n      }\n    });\n    setExcludeDate(bookedDates);\n    console.log(\"Exclude date\", bookedDates);\n  };\n  const filterPassTime = time => {\n    const currentDate = new Date();\n    const selectedDate = new Date(time);\n    return currentDate.getTime() < selectedDate.getTime();\n  };\n  useEffect(() => {\n    excludeAppointmentDate();\n  }, [doctor, startDate]);\n  useEffect(() => {\n    // Dispatch the list doctors action and fill our state\n    dispatch(listDoctors());\n    dispatch(listConsultants());\n  }, [dispatch]);\n\n  //for  adding prescription \n  const updateConsultationHandler = (id, name, date, file, consulatantData) => {\n    const details1 = {\n      name,\n      date,\n      prescriptionSource: file,\n      appointment_status: consulatantData.appointment_status,\n      payment_details: consulatantData.payment_details,\n      payment_status: consulatantData.payment_status,\n      patientEmail_address: consulatantData.patientEmail_address,\n      patientName: consulatantData.patientName,\n      patientHeight: consulatantData.patientHeight,\n      patientWeight: consulatantData.patientWeight,\n      actual_patientName: consulatantData.actual_patientName,\n      Observation: consulatantData.Observation,\n      consultationLink: consulatantData.consultationLink\n    };\n    // console.log(id, consulatantData)\n    dispatch(updateConsultation(id, details1));\n  };\n\n  //for updation of doc date\n\n  const updateAppointmentDoctorDates = (docInfo, from, to) => {\n    // console.log('DOCINFOID', docInfo._id)\n    const updatedDate = {\n      from: editRow.fromDate,\n      to: editRow.toDate\n    };\n    dispatch(updateAppointments(docInfo._id, editRow.id, updatedDate));\n    // toast.success(\"Lorem ipsum dolor\")\n    // console.log('Date', editRow)\n  };\n\n  //cancel appointment patient side\n  const appointmentCancel = () => {\n    // const redundData={\n    //     \"status\": true,\n    //     \"refund_amount\": 1,\n    //     \"reason\": \"Refund initiated, Your Request Id:RU0EBGAKA9\",\n    //     \"easebuzz_id\": \"T3W4E9GPRZ\",\n    //     \"refund_id\": \"RU0EBGAKA9\"\n    // }\n    if (modalShow.id) {\n      dispatch(cancelAppointments(modalShow.id));\n      // alert('Appointment Cancelled  Successfully..')\n      window.location.reload(false);\n    }\n  };\n  const doctorappointmnetDelete = id => {\n    dispatch(cancelAppointments(id));\n    window.location.reload(false);\n  };\n  const doctorAppointmentCancel = (doctorInfo, id) => {\n    // console.log(\"Doctors info id :\",doctorInfo)\n    dispatch(cancelAppointmentDates(doctorInfo._id, id));\n    alert(\"Appointment Slot deleted Successfully\");\n    window.location.reload(false);\n  };\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     dispatch(listConsultants())\n\n  //   }, 60000);\n  //   return () => clearInterval(interval);\n  // }, [dispatch]);\n\n  //Appointment Tab Data\n  useEffect(() => {\n    const data = (consultants === null || consultants === void 0 ? void 0 : consultants.length) > 0 && consultants[0] !== 'undefined' && (consultants === null || consultants === void 0 ? void 0 : consultants.filter(consultantInfo => (consultantInfo === null || consultantInfo === void 0 ? void 0 : consultantInfo.name) == (doctorInfo === null || doctorInfo === void 0 ? void 0 : doctorInfo.name)));\n    // const data = consultants?.filter((consultantInfo) => consultantInfo?.name == doctorInfo?.name)\n    setAppointmentRowData(data);\n  }, [consultants, doctorInfo]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 9\n    }\n  }, \" Online Consultation\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 11\n    }\n  }, \"We have team of health experts like Psychiatrist (Medical Council of India-MCI, registered), Sexologist, Child Psychiatrist, Clinical Psychologist (Council of India-RCI registered), Occupational Therapist, Speech Therapist, Remedial/Special Educators who mindfully listen, understand and guide you with the quality and intense awareness throughout the process of consultation and therapy. We strongly believe in the natural elements for health and wellness hence we emphasis more on it.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctorCardDetail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DoctorDataCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 13\n    }\n  })), isLogin ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Title, {\n    style: {\n      fontFamily: \"Open Sans, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 15\n    }\n  }, \"** Note After you book your doctor appointment, the consultation link will be active... Please be available in time.\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 21\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 25\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 25\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, isSuperAdmin ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 31\n    }\n  })) : null, !isAdmin && !isSuperAdmin ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 37\n    }\n  }, \"Refund Policy\", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"images/refund.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 39\n    }\n  }))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"display-linebreak\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 39\n    }\n  }, \"If from Doctors side Appointment get's cancelled then total amount of fees will be refunded. If Patient cancels the appointment before the 12 hrs of the appointment 25% of amount will be deducted from the fee and will be refunded.\"))))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 31\n    }\n  }, \"Book New Appointment\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1px\",\n      padding: \"0px 1px 9px 2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 37\n    }\n  }, \"Select Doctors \"), /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        width: '30ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    sx: {\n      width: {\n        sm: 200,\n        md: 300\n      },\n      \"& .MuiInputBase-root\": {\n        height: 35\n      }\n    },\n    value: doctor,\n    onChange: e => setDoctor(e.target.value)\n    // helperText=\"Please select the Doctor\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 39\n    }\n  }, doctors === null || doctors === void 0 ? void 0 : doctors.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 43\n    }\n  }, option.name)))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 35\n    }\n  }, \"Select Slots\"), /*#__PURE__*/React.createElement(DatePicker\n  // isClearable\n  , {\n    selected: docDate.date,\n    onChange: date => onChangeDate(date, doctor),\n    showTimeSelect: true,\n    minTime: new Date(fromTime),\n    maxTime: new Date(toTime),\n    dateFormat: \"MMMM d, yyyy h:mm aa\",\n    excludeTimes: excludeDate,\n    placeholderText: \"Select the Date & Time\",\n    disabled: !doctor,\n    filterTime: filterPassTime,\n    minDate: moment().toDate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 35\n    }\n  }, \"Book Appointment\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    disabled: !doctor || !docDate.date,\n    className: \"btn-block\",\n    type: \"button\",\n    onClick: () => placeAppointmentHandler(doctor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 35\n    }\n  }, \"Book Appointment\")))) : null, !isAdmin && !isSuperAdmin ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 31\n    }\n  }, \"Appointment List\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    getRowId: r => r._id,\n    rows: (consultants === null || consultants === void 0 ? void 0 : consultants.length) > 0 && consultants[0] !== 'undefined' && (consultants === null || consultants === void 0 ? void 0 : consultants.filter(consultantmail => (consultantmail === null || consultantmail === void 0 ? void 0 : consultantmail.patientEmail_address) == (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email))),\n    columns: patientColumns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    disableSelectionOnClick: true,\n    sortModel: patientSortModel,\n    onSortModelChange: model => setPatientSortModel(model),\n    experimentalFeatures: {\n      newEditingApi: true\n    },\n    onSelectionChange: newSelection => {\n      setSelection(newSelection.rows);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: modalShow.isBoolean,\n    onHide: () => setModalShow({\n      isBoolean: false\n    }),\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 39\n    }\n  }, \"Cancel Appointment\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 39\n    }\n  }, \"Refund Policy\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 39\n    }\n  }, \"If from Doctors side Appointment get's cancelled then total amount of fees will be refunded. If Patient cancels the appointment before the 12 hrs of the appointment 25% of amount will be deducted from the fee and will be refunded.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: appointmentCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 39\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"outline-danger\",\n    onClick: () => setModalShow({\n      isBoolean: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 39\n    }\n  }, \"Cancel\")))))) : /*#__PURE__*/React.createElement(React.Fragment, null, doctorInfo ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    id: \"controlled-tab-example\",\n    defaultActiveKey: \"Appointments\",\n    activeKey: key,\n    onSelect: k => setKey(k),\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"Appointments\",\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 77\n      }\n    }, \"Appointments \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-calendar-o\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 96\n      }\n    }), \" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    getRowId: r => r._id,\n    rows: appointmentRowData,\n    columns: appointmentColumns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    sortModel: sortModel,\n    onSortModelChange: model => setSortModel(model),\n    disableSelectionOnClick: true,\n    experimentalFeatures: {\n      newEditingApi: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 47\n    }\n  })))), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"DoctorSlots\",\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 76\n      }\n    }, \"Doctor Slots \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-clock-o\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 95\n      }\n    }), \" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 47\n    }\n  }, \"From\"), \"\\xA0\", /*#__PURE__*/React.createElement(DatePicker, {\n    selected: from,\n    onChange: date => setFrom(date),\n    showTimeSelect: true,\n    timeIntervals: 30,\n    timeCaption: \"Time\",\n    dateFormat: \"MMM d, yyyy hh:mm aa\",\n    placeholderText: \"Please Select From Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 47\n    }\n  }, \" To\"), \"\\xA0\", /*#__PURE__*/React.createElement(DatePicker, {\n    selected: to,\n    onChange: date => setTo(date),\n    showTimeSelect: true,\n    timeIntervals: 30,\n    timeCaption: \"Time\",\n    dateFormat: \"MMM d, yyyy hh:mm aa\",\n    placeholderText: \"Please Select To Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 47\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: () => addDateAppointmentHandler(doctorInfo, from, to),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 47\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    getRowId: r => r._id,\n    rows: doctorInfo === null || doctorInfo === void 0 ? void 0 : doctorInfo.consultant_date,\n    columns: doctorSlotColumns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    disableSelectionOnClick: true,\n    experimentalFeatures: {\n      newEditingApi: true\n    },\n    sortModel: docsortModel,\n    onSortModelChange: model => setDocsortModel(model),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    dialogClassName: \"modal-50w\",\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 47\n    }\n  }, \"Edit the Appointment Dates\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 47\n    }\n  }, \"From\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: editRow.fromDate,\n    onChange: date => setEditRow({\n      ...editRow,\n      fromDate: new Date(date)\n    }),\n    showTimeSelect: true,\n    timeIntervals: 30,\n    timeCaption: \"Time\",\n    dateFormat: \"MMMM d, yyyy hh:mm aa\",\n    placeholderText: \"Please Select From Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 47\n    }\n  }), /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 47\n    }\n  }, \" To\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: editRow.toDate,\n    onChange: date => setEditRow({\n      ...editRow,\n      toDate: new Date(date)\n    }),\n    showTimeSelect: true,\n    timeIntervals: 30,\n    timeCaption: \"Time\",\n    dateFormat: \"MMMM d, yyyy hh:mm aa\",\n    placeholderText: \"Please Select To Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 47\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 47\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      updateAppointmentDoctorDates(doctorInfo, from, to);\n      handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 47\n    }\n  }, \"Save Changes\"))))))) : null)))))), \" \") : /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"footer-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Consultation;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Card","Col","ListGroup","Button","Image","Form","Table","Modal","Tab","Tabs","Accordion","LinkContainer","DatePicker","addDays","subDays","useDispatch","useSelector","useFilePicker","listDoctors","createDoctor","updateAppointments","cancelAppointmentDates","listConsultants","updateConsultation","getConsultantDetails","consultationLink","Message","Loader","dayjs","createAppointment","cancelAppointments","APPOINTMENT_CREATE_RESET","DoctorDataCard","DataGrid","GridActionsCellItem","Box","SaveIcon","EditIcon","DeleteIcon","IconButton","LinkIcon","FileDownloadIcon","CancelIcon","PaymentsSharpIcon","axios","cleanData","moment","Prescription","TextField","MenuItem","Consultation","match","history","isLogin","setIsLogin","localStorage","getItem","currentYear","Date","getFullYear","baseUrl","process","env","REACT_APP_API__BASE_URL","startDate","setStartDate","from","setFrom","to","setTo","show","setShow","editRow","setEditRow","id","fromDate","toDate","key","setKey","appointmentRowData","setAppointmentRowData","select","setSelection","modalShow","setModalShow","isBoolean","excludeDate","setExcludeDate","postdata","setPostdata","handleClose","handleShow","handleEdit","date","row","_id","endDate","setEndDate","dispatch","docsortModel","setDocsortModel","field","sort","doctorSlotColumns","headerName","width","hide","sortable","type","valueGetter","value","sortingOrder","renderCell","params","cursor","doctorAppointmentCancel","doctorInfo","sortModel","setSortModel","appointmentColumns","payment_status","zoomMeeting","doctorappointmnetDelete","patientSortModel","setPatientSortModel","patientColumns","payment","editable","patientLink","prescriptionSource","pdf","consultant","win","window","open","document","write","doctorList","state","loading","error","doctors","consultationList","loadingConsultant","errorConsultant","consultants","userLogin","userInfo","isAdmin","isSuperAdmin","find","doctor","email_id","email","cancelAppointment","loadingApp","errorApp","appointments","docDate","setDocDate","fromTime","setFromTime","toTime","setToTime","onChangeDate","name","newDocDate","docName","filterTime","consultantDate","consultant_date","dates","format","console","log","handleDateChange","setDoctor","appointmentCreate","appointment","success","errorAppointment","consultationLinkDisabled","consultationDate","timeDiff","diff","metas","getElementsByTagName","i","length","getAttribute","setAttribute","data","post","then","response","URL","join_url","replaceAll","catch","err","transactionData","doc_fee","patientName","patientEmail_address","phone","config","headers","Authorization","token","location","href","e","placeAppointmentHandler","doctorfee","doc","appointment_status","appointment_date","confirmed_date","payment_details","patientWeight","patientHeight","Observation","actual_patientName","consultation_fee","alert","reload","addDateAppointmentHandler","docInfo","availabeTime","newDates","Object","assign","push","consultants_Date","qualification","phone_no","excludeAppointmentDate","filter","bookedDates","forEach","filterPassTime","time","currentDate","selectedDate","getTime","updateConsultationHandler","file","consulatantData","details1","updateAppointmentDoctorDates","updatedDate","appointmentCancel","consultantInfo","fontFamily","Header","fontSize","marginTop","padding","sm","md","height","target","map","option","r","consultantmail","model","newEditingApi","newSelection","rows","k","display","justifyContent"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Consultation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Card, Col, ListGroup, Button, Image, Form, Table, Modal } from 'react-bootstrap';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport { Accordion } from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport DatePicker, { addDays, subDays } from \"react-datepicker\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useFilePicker } from \"use-file-picker\";\nimport { listDoctors, createDoctor, updateAppointments, cancelAppointmentDates } from '../actions/productActions'\nimport { listConsultants, updateConsultation, getConsultantDetails, consultationLink } from '../actions/consultationActions.js'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport dayjs from 'dayjs'\nimport { createAppointment, cancelAppointments } from '../actions/consultationActions';\nimport { APPOINTMENT_CREATE_RESET } from '../constants/consultationConstants';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../doctorCard.css\";\nimport DoctorDataCard from '../components/DoctorDataCard';\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\nimport Box from '@mui/material/Box';\nimport SaveIcon from '@mui/icons-material/Save';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport \"../tab.css\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport PaymentsSharpIcon from '@mui/icons-material/PaymentsSharp';\nimport axios from \"axios\";\nimport { cleanData } from 'jquery';\nimport moment from 'moment';\nimport Prescription from './Prescription';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst Consultation = ({ match, history }) => {\n  const [isLogin, setIsLogin] = useState(localStorage.getItem('isLogin'));\n  // console.log(\"Logged in Successfuly\", isLogin)\n  const currentYear = new Date().getFullYear();\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\n  const [startDate, setStartDate] = useState(new Date());\n  const [from, setFrom] = useState(new Date());\n  const [to, setTo] = useState(new Date());\n  const [show, setShow] = useState(false);\n  const [editRow, setEditRow] = useState({ id: \"\", fromDate: new Date(), toDate: new Date() })\n  const [key, setKey] = useState('Appointments');\n  const [appointmentRowData, setAppointmentRowData] = useState([])\n  const [select, setSelection] = React.useState([]);\n  const [modalShow, setModalShow] = React.useState({ isBoolean: false });\n  const [excludeDate, setExcludeDate] = useState('')\n  const [postdata, setPostdata] = useState('');\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleEdit = (date) => {\n    handleShow();\n    setEditRow({ id: date.row._id, fromDate: new Date(date.row.from), toDate: new Date(date.row.to) })\n    // console.log(\"handle\", date.row)\n  }\n\n  const [endDate, setEndDate] = useState(null);\n  const dispatch = useDispatch()\n\n  // doctor Slot Tab Columns\n  //by default sorting\n  const [docsortModel, setDocsortModel] = useState(\n    [\n      {\n        field: \"from\",\n        sort: \"desc\"\n      }\n    ]);\n\n  const doctorSlotColumns = [\n    { field: '_id', headerName: 'ID', width: 90, hide: true },\n    {\n      field: 'from',\n      headerName: 'From',\n      sortable: true,\n      width: 180,\n      type: 'dateTime',\n      valueGetter: ({ value }) => value && new Date(value),\n      sortingOrder: ['asc', 'desc'],\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      sortable: true,\n      width: 180,\n      type: 'dateTime',\n      valueGetter: ({ value }) => value && new Date(value),\n    },\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 100,\n      renderCell: (params) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between align-items-center\"\n            style={{ cursor: \"pointer\" }}\n          >\n            <IconButton\n              color='primary'\n              onClick={() =>\n                handleEdit(params)}\n              size=\"large\">\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              color='primary'\n              onClick={() => doctorAppointmentCancel(doctorInfo, params.row._id)}\n              size=\"large\">\n              <DeleteIcon />\n\n            </IconButton>\n          </div>\n        );\n      },\n    }\n\n  ];\n\n  const [sortModel, setSortModel] = useState([\n    {\n      field: \"date\",\n      sort: \"desc\"\n    }\n  ]);\n  // Appointment Tab Columns\n  const appointmentColumns = [\n    { field: '_id', headerName: 'ID', width: 90, hide: true },\n    { field: 'patientName', headerName: 'Patient Name', width: 120 },\n    {\n      field: 'date', headerName: ' Appointment Date', width: 190,\n      type: 'dateTime', sortable: true, valueGetter: ({ value }) => value && new Date(value)\n    },\n    { field: 'appointment_status', headerName: 'Status', width: 120 },\n    { field: 'payment_status', headerName: 'Payment Status', width: 140 },\n    {\n      field: 'consultationLink', headerName: 'Consultation Link', width: 140,\n      renderCell: (params) => {\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <Button\n              color=\"secondary\" size=\"medium\"\n              disabled={params.row.payment_status === \"Unpaid\"}\n              onClick={() => zoomMeeting(params)}>\n              Link\n            </Button>\n            {/* <IconButton\n              disabled={params.row.payment_status === \"Unpaid\"}\n              color='primary'\n              onClick={() => zoomMeeting(params)}\n              size=\"large\">\n              <LinkIcon />\n            </IconButton> */}\n          </div>\n        )\n      }\n    },\n    // {\n    //   field: 'status', headerName: 'Consultation Status', width: 180,\n    //   renderCell: (params) => {\n    //     return (\n    //       <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n    //         {/* // disabled={params.row.payment_status === \"Paid\" &&  params.row.consultationLink=='' ? false:true} */}\n    //         {params.row.payment_status === \"Unpaid\" && params.row.consultationLink === '' ? 'Not Done' : 'Done'}\n\n    //       </div>\n    //     )\n    //   }\n    // },\n    {\n      field: 'action', headerName: 'Action', width: 120,\n      renderCell: (params) => {\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <IconButton\n              color='primary'\n              onClick={() => doctorappointmnetDelete(params.id)\n              }\n              size=\"large\">\n              <DeleteIcon />\n              {/* <EditIcon /> */}\n            </IconButton>\n          </div>\n        )\n      }\n\n    },\n  ];\n\n\n  const [patientSortModel, setPatientSortModel] = useState([\n    {\n      field: \"date\",\n      sort: \"desc\"\n    }\n  ]);\n  //patient Data columns\n  const patientColumns = [\n    { field: '_id', headerName: 'ID', width: 90, hide: true, },\n    { field: 'name', headerName: 'Doctor Name', width: 180 },\n    {\n      field: 'date', headerName: 'Appointment Date', width: 160,\n      type: 'dateTime', sortable: true, valueGetter: ({ value }) => value && new Date(value),\n\n    },\n    { field: 'appointment_status', headerName: 'Status', width: 100 },\n    { field: 'payment_status', headerName: 'Payment Status', width: 120 },\n    {\n      field: 'payment', headerName: 'Payment', width: 80,\n      renderCell: (params) => {\n        // console.log(\"Param is\", typeof params.row.doc_fee)\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <Button\n              color=\"secondary\" size=\"small\"\n              disabled={params.row.payment_status === \"Paid\"}\n              onClick={() => payment(params)}>\n              Pay\n            </Button>\n\n            {/* <IconButton\n              color='primary'\n              disabled={params.row.payment_status === \"Paid\"}\n              onClick={() => payment(params)}\n              size=\"large\">\n              <PaymentsSharpIcon />\n            </IconButton> */}\n          </div>\n        )\n      }\n    },\n    {\n      field: 'consultationLink', headerName: 'Consultation Link', width: 140, editable: false,\n      renderCell: (params) => {\n        // console.log(\"params\", params);\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <Button\n              color=\"secondary\" size=\"medium\"\n              disabled={params.row.payment_status === \"Unpaid\" || params.row.consultationLink === ''}\n              onClick={() => patientLink(params)}\n            >\n              Link\n            </Button>\n            {/* <IconButton\n              // disabled={params.row.payment_status === \"Unpaid\" && consultationLinkDisabled(params.row.appointment_date)}\n                 disabled={params.row.payment_status === \"Unpaid\" || params.row.consultationLink ===''}\n              color='primary'\n              onClick={() => patientLink(params)}\n              size=\"large\">\n              <LinkIcon />\n            </IconButton> */}\n          </div>\n        )\n      }\n    },\n    {\n      field: 'prescriptionSource', headerName: 'Prescription', width: 120,\n      renderCell: (params) => {\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <IconButton\n              color='primary'\n              size=\"large\"\n              disabled={params.row.prescriptionSource === ''}\n              onClick={() => pdf(params)}\n            >\n              <FileDownloadIcon />\n            </IconButton>\n          </div>\n        )\n      }\n    },\n    {\n      field: 'action', headerName: 'Cancel', width: 120,\n      renderCell: (params) => {\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <IconButton\n              color='primary'\n              // onClick={() => appointmentCancel(params.id)\n              onClick={() => setModalShow({ isBoolean: true, id: params.id })\n              }\n              size=\"large\">\n              <CancelIcon />\n            </IconButton>\n          </div>\n        )\n      }\n    },\n  ];\n\n\n  //Display the pdf function\n  const pdf = (consultant) => {\n    // console.log(\"first\", consultant.row.prescriptionSource)\n    var win = window.open();\n    win.document.write('<iframe src=\"' + consultant.row.prescriptionSource + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>');\n  }\n\n\n  const doctorList = useSelector((state) => state.doctorList)\n  const { loading, error, doctors } = doctorList;\n\n\n  const consultationList = useSelector((state) => state.consultationList)\n  const { loadingConsultant, errorConsultant, consultants } = consultationList;\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const isAdmin = userInfo?.isAdmin;\n  const isSuperAdmin = userInfo?.isSuperAdmin;\n\n  const doctorInfo = doctors?.find((doctor) => doctor.email_id == userInfo?.email)\n  // console.log(\"docInfo\", doctorInfo)\n\n\n  //cancel the appointment\n  const cancelAppointment = useSelector((state) => state.cancelAppointments)\n  const { loadingApp, errorApp, appointments } = cancelAppointment\n\n  //add from and to time at patient side\n  const [docDate, setDocDate] = useState({\n    \"date\": \"\",\n    \"docName\": \"\"\n  })\n  const [fromTime, setFromTime] = useState(new Date())\n  const [toTime, setToTime] = useState(new Date())\n  const onChangeDate = (date, name) => {\n    const newDocDate = {\n      date,\n      docName: name\n    }\n    setDocDate(newDocDate)\n    setStartDate(date)\n    let filterTime\n    if (name) {\n      const consultantDate = doctors?.find((doctor) => doctor.name == name)?.consultant_date\n      filterTime = consultantDate?.find((dates) => dayjs(dates.from).format(\"ddd, MMM DD, YYYY\") == dayjs(date).format(\"ddd, MMM DD, YYYY\"))\n    }\n    console.log(\"filter time\", filterTime)\n    console.log(\"from\", typeof filterTime?.from)\n    console.log(\"To\", typeof filterTime?.to)\n    if (filterTime) {\n\n      setFromTime(filterTime.from)\n      setToTime(filterTime.to)\n\n    }\n    else {\n      setFromTime(new Date())\n      setToTime(new Date())\n    }\n    // console.log(\"filter time\",filterTime)\n\n  }\n\n  // console.log(\"from time\",fromTime)\n  useEffect(() => {\n  }, [docDate])\n\n  function handleDateChange(date) {\n    // initial change: start by setting the startDate\n    if (!startDate && !endDate) {\n      setStartDate(date);\n      // startDate has been set, set the end date\n    } else if (startDate && !endDate) {\n      setEndDate(date);\n    }\n    // user is choosing another range => set the start date\n    // and set the endDate back to null\n    if (startDate && endDate) {\n      setStartDate(date);\n      setEndDate(null);\n    }\n  }\n\n  const [doctor, setDoctor] = useState(\"\");\n  const appointmentCreate = useSelector((state) => state.createAppointment)\n  const { appointment, success, errorAppointment } = appointmentCreate\n\n  // use effect for create appointment\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: APPOINTMENT_CREATE_RESET })\n    }\n  }, [history, success])\n\n  const consultationLinkDisabled = (consultationDate) => {\n    const timeDiff = dayjs().diff(consultationDate, \"minutes\")\n    // console.log(\"Consultation Date is\", consultationDate, timeDiff);\n    if (0 <= timeDiff && timeDiff <= 25) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  // console.log(\"modal show\", modalShow)\n  // Generate URL function of zoom\n  const zoomMeeting = (consultant) => {\n    // console.log(\"Consultant is\",consultant)\n    const metas = document.getElementsByTagName('meta');\n\n    for (let i = 0; i < metas.length; i++) {\n      if (metas[i].getAttribute('name') === \"viewport\") {\n        metas[i].setAttribute('content', \"width=1024, initial-scale=1\");\n        break;\n      }\n    }\n\n    const data = {\n      // email: \"mayurichavan842@gmail.com\",\n      email: \"info@mindvein.com\"\n    };\n    axios\n      .post(`https://testzoomapi-mayuri0723.vercel.app/meeting`, data)\n      .then((response) => {\n        let URL =\n          response.data.join_url.replaceAll(\n            \"https://us05web.zoom.us/j/\",\n            \"http://localhost:9999/?\"\n          ) + `?role=1&name=${consultant.row.name}`;\n        console.log({ URL });\n        console.log(consultant.row.name);\n        console.log(response.data)\n        // window.innerWidth = 1024;\n        // window.open(`${URL}`,'_blank',\"width=1268\");\n        // const meetingLinkWitoutPassword = response.data.join_url.split(\"?\")[0];\n        // const webClinetMeetingLink = meetingLinkWitoutPassword.replaceAll(\"/j/\", \"/wc/\") + \"/join\";\n        // console.log({webClinetMeetingLink},{meetingLinkWitoutPassword});\n        window.open(`${URL}`, '_blank');\n        // var newWindow =  window.open(\"/prescription\",'_blank',\"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400\");\n        window.open(`/prescription/${consultant.id}`, '_blank', \"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400\");\n        // console.log(consultant)\n        dispatch(consultationLink(consultant.row._id, response.data.join_url))\n      })\n      .catch((err) => console.error(err));\n\n\n  };\n\n  const patientLink = (consultant) => {\n    // console.log(\"consultant\", consultant)\n    window.open(consultant.row.consultationLink, \"_blank\")\n  }\n\n  //calling from payment button\n  const payment = (params) => {\n    // console.log(\"Transaction\", typeof params.row.doc_fee)\n    const transactionData = {\n      \"txnid\": \"T\" + params.id,\n      \"amount\": params.row.doc_fee,\n      \"name\": params.row.patientName,\n      \"email\": params.row.patientEmail_address,\n      \"phone\": userInfo?.phone + \"\",\n      \"productinfo\": \"Consultation\",\n      \"surl\": `http://localhost:3000/api/easebuzz/easebuzz_reponse/${params.id}`,\n      \"furl\": `http://localhost:3000/api/easebuzz/easebuzz_reponse/${params.id}`,\n      \"udf1\": \"\",\n      \"udf2\": \"\",\n      \"udf3\": \"\",\n      \"udf4\": \"\",\n      \"udf5\": \"\",\n      \"address1\": \"\",\n      \"address2\": \"\",\n      \"city\": \"\",\n      \"state\": \"\",\n      \"country\": \"\",\n      \"zipcode\": \"\",\n      \"sub_merchant_id\": \"\",\n      \"unique_id\": \"\",\n      \"split_payments\": \"\",\n      \"customer_authentication_id\": \"\",\n      \"udf6\": \"\",\n      \"udf7\": \"\",\n      \"udf8\": \"\",\n      \"udf9\": \"\",\n      \"udf10\": \"\"\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    console.log(\"object\", transactionData, config)\n    axios.post(\"http://localhost:3000/api/easebuzz/initiate_payment\", transactionData, config)\n      .then((response) => {\n        console.log(\"Response is\", response.data)\n\n        window.location.href = response.data\n\n      })\n      .catch(e => console.log(e))\n  }\n\n  //demo consultant\n  // const consultantpayment = () => {\n  //   const appConsultant= (consultants?.length > 0 && consultants[0] !== 'undefined' && consultants?.filter((consultantmail) => consultantmail?.patientEmail_address == userInfo?.email))\n  //   console.log(\"Appoint consultant\",appConsultant)\n  //   // console.log(\"Consultant is\",  consultant)\n  //   const doctorfee = doctors?.find((doc) => doc.name === doctor)\n  //   const transactionData = {\n  //     \"txnid\": \"T\" + appConsultant._id,\n  //     \"amount\": doctorfee?.consultation_fee,\n  //     \"name\":userInfo?.name,\n  //     \"email\":userInfo?.email,\n  //     \"phone\": userInfo?.phone + \"\",\n  //     \"productinfo\": \"Consultation\",\n  //     \"surl\": `http://45.250.225.44:5000/api/easebuzz/easebuzz_reponse/${appConsultant._id}`,\n  //     \"furl\": `http://45.250.225.44:5000/api/easebuzz/easebuzz_reponse/${appConsultant._id}`,\n  //     \"udf1\": \"\",\n  //     \"udf2\": \"\",\n  //     \"udf3\": \"\",\n  //     \"udf4\": \"\",\n  //     \"udf5\": \"\",\n  //     \"address1\": \"\",\n  //     \"address2\": \"\",\n  //     \"city\": \"\",\n  //     \"state\": \"\",\n  //     \"country\": \"\",\n  //     \"zipcode\": \"\",\n  //     \"sub_merchant_id\": \"\",\n  //     \"unique_id\": \"\",\n  //     \"split_payments\": \"\",\n  //     \"customer_authentication_id\": \"\",\n  //     \"udf6\": \"\",\n  //     \"udf7\": \"\",\n  //     \"udf8\": \"\",\n  //     \"udf9\": \"\",\n  //     \"udf10\": \"\"\n  //   }\n\n  //   const config = {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       Authorization: `Bearer ${userInfo.token}`,\n  //     },\n  //   }\n  //   console.log(\"object\", transactionData, config)\n  //   axios.post(\"http://45.250.225.44:5000/api/easebuzz/initiate_payment\", transactionData, config)\n  //     .then((response) => {\n  //       console.log(\"Set\")\n  //       setPostdata(response.data)\n  //       console.log(\"Response is\", response.data)\n\n  //       // window.location.href = response.data\n  //       window.open(`${response.data}`, '_blank');\n  //     })\n  //     .catch(e => console.log(e))\n  // }\n\n\n  const placeAppointmentHandler = (doctor) => {\n    const doctorfee = doctors?.find((doc) => doc.name === doctor)\n    // console.log(\"Doctor fee\",doctorfee)\n\n    var name = doctor\n    var payment_status = \"Unpaid\"\n    var appointment_status = \"Confirmed\"\n    var appointment_date = startDate\n    var confirmed_date = startDate\n    var payment_details = \"Done\"\n    var prescriptionSource = \"\"\n    var patientEmail_address = userInfo?.email\n    var patientName = userInfo?.name\n    var patientWeight = \"\"\n    var patientHeight = \"\"\n    var Observation = \"\"\n    var consultationLink = \"\"\n    var actual_patientName = \"\"\n    var doc_fee = doctorfee.consultation_fee\n\n    setDoctor(\"\")\n    console.log(\"doctor\", appointment_date)\n    // console.log(\"Consultation Doctor\", doctors.consultation_fee)\n    dispatch(\n      createAppointment({\n        name: name,\n        date: docDate.date,\n        payment_status: payment_status,\n        appointment_status: appointment_status,\n        appointment_date: appointment_date,\n        confirmed_date: confirmed_date,\n        payment_details: payment_details,\n        prescriptionSource: prescriptionSource,\n        patientEmail_address: patientEmail_address,\n        patientName: patientName,\n        patientWeight: patientWeight,\n        patientHeight: patientHeight,\n        Observation: Observation,\n        actual_patientName: actual_patientName,\n        consultationLink: consultationLink,\n        doc_fee: doc_fee\n      })\n    )\n    alert('Appointment is Booked. You have to make the payment for the appointment.Please click on the payment button from the below appointment list.')\n    window.location.reload(false);\n  }\n\n\n  //Add appointment dates in doctor\n  const addDateAppointmentHandler = (docInfo, from, to) => {\n    const availabeTime = {}\n    availabeTime['from'] = dayjs(from).format('YYYY-MM-DDTHH:mm:ssZ')\n    availabeTime['to'] = dayjs(to).format('YYYY-MM-DDTHH:mm:ssZ')\n    let newDates = Object.assign([], docInfo?.consultant_date);\n    // console.log(\"Doc\", docInfo)\n    // console.log(\"Consulatny DAte\", docInfo?.consultant_date)\n    // const newDates = []\n    // console.log(\"New Dates\", docInfo, availabeTime, newDates)\n    newDates.push(availabeTime)\n    // console.log(\"AvailableTime\", availabeTime)\n    const consultants_Date = {\n      name: docInfo.name,\n      qualification: docInfo.qualification,\n      email_id: docInfo.email_id,\n      phone_no: docInfo.phone_no,\n      consultant_date: newDates\n    }\n    // console.log(docInfo._id, consultants_Date)\n    dispatch(createDoctor(docInfo._id, consultants_Date))\n    alert('Slot Added Successfully..')\n    window.location.reload(false);\n  }\n\n\n\n  const excludeAppointmentDate = () => {\n    const dates = consultants?.filter((e) => e.name === doctor)\n    const bookedDates = [];\n    dates.forEach((e) => {\n      // console.log(dayjs(startDate).format('ddd, MMM DD, YYYY') , dayjs(e).format('ddd, MMM DD, YYYY'))\n      console.log(startDate, e)\n\n      if (dayjs(startDate).format('ddd, MMM DD, YYYY,h:mm A') === dayjs(e.appointment_date).format('ddd, MMM DD, YYYY,h:mm A')) {\n        bookedDates.push(new Date(e.appointment_date))\n      }\n\n    })\n    setExcludeDate(bookedDates)\n    console.log(\"Exclude date\", bookedDates)\n  }\n\n  const filterPassTime = (time) => {\n    const currentDate = new Date();\n    const selectedDate = new Date(time);\n\n    return currentDate.getTime() < selectedDate.getTime()\n  }\n\n\n\n  useEffect(() => {\n    excludeAppointmentDate();\n  }, [doctor, startDate])\n\n  useEffect(() => {\n    // Dispatch the list doctors action and fill our state\n    dispatch(listDoctors())\n    dispatch(listConsultants())\n  }, [dispatch])\n\n  //for  adding prescription \n  const updateConsultationHandler = (id, name, date, file, consulatantData) => {\n    const details1 = {\n      name,\n      date,\n      prescriptionSource: file,\n      appointment_status: consulatantData.appointment_status,\n      payment_details: consulatantData.payment_details,\n      payment_status: consulatantData.payment_status,\n      patientEmail_address: consulatantData.patientEmail_address,\n      patientName: consulatantData.patientName,\n      patientHeight: consulatantData.patientHeight,\n      patientWeight: consulatantData.patientWeight,\n      actual_patientName: consulatantData.actual_patientName,\n      Observation: consulatantData.Observation,\n      consultationLink: consulatantData.consultationLink\n    }\n    // console.log(id, consulatantData)\n    dispatch(updateConsultation(id, details1))\n  }\n\n  //for updation of doc date\n\n  const updateAppointmentDoctorDates = (docInfo, from, to) => {\n    // console.log('DOCINFOID', docInfo._id)\n    const updatedDate = {\n      from: editRow.fromDate,\n      to: editRow.toDate\n    }\n    dispatch(updateAppointments(docInfo._id, editRow.id, updatedDate))\n    // toast.success(\"Lorem ipsum dolor\")\n    // console.log('Date', editRow)\n  }\n\n\n  //cancel appointment patient side\n  const appointmentCancel = () => {\n\n    // const redundData={\n    //     \"status\": true,\n    //     \"refund_amount\": 1,\n    //     \"reason\": \"Refund initiated, Your Request Id:RU0EBGAKA9\",\n    //     \"easebuzz_id\": \"T3W4E9GPRZ\",\n    //     \"refund_id\": \"RU0EBGAKA9\"\n    // }\n    if (modalShow.id) {\n      dispatch(cancelAppointments(modalShow.id))\n      // alert('Appointment Cancelled  Successfully..')\n      window.location.reload(false);\n    }\n\n  }\n\n\n  const doctorappointmnetDelete = (id) => {\n    dispatch(cancelAppointments(id))\n    window.location.reload(false);\n  }\n\n  const doctorAppointmentCancel = (doctorInfo, id) => {\n    // console.log(\"Doctors info id :\",doctorInfo)\n    dispatch(cancelAppointmentDates(doctorInfo._id, id))\n    alert(\"Appointment Slot deleted Successfully\");\n    window.location.reload(false);\n  }\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     dispatch(listConsultants())\n\n  //   }, 60000);\n  //   return () => clearInterval(interval);\n  // }, [dispatch]);\n\n  //Appointment Tab Data\n  useEffect(() => {\n    const data = consultants?.length > 0 && consultants[0] !== 'undefined' && consultants?.filter((consultantInfo) => consultantInfo?.name == doctorInfo?.name)\n    // const data = consultants?.filter((consultantInfo) => consultantInfo?.name == doctorInfo?.name)\n    setAppointmentRowData(data)\n  }, [consultants, doctorInfo])\n\n  return (\n    <Container>\n      <Card className=\"text-center\">\n        <Card.Header> Online Consultation</Card.Header>\n        <Card.Body>\n          <Card.Text>\n            We have team of health experts like Psychiatrist (Medical Council of India-MCI, registered), Sexologist, Child Psychiatrist, Clinical Psychologist (Council of India-RCI registered), Occupational Therapist, Speech Therapist, Remedial/Special Educators who mindfully listen, understand and guide you with the quality and intense awareness throughout the process of consultation and therapy. We strongly believe in the natural elements for health and wellness hence we emphasis more on it.\n          </Card.Text>\n          <div className=\"doctorCardDetail\">\n            <DoctorDataCard />\n          </div>\n          {isLogin ?\n\n            <>\n              <Card.Title style={{ fontFamily: \"Open Sans, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\" }}>\n                ** Note After you book your doctor appointment, the consultation link will be active... Please be available in time.\n              </Card.Title>\n              <Card.Text>\n                <Card>\n                  <ListGroup variant='flush'>\n\n                    <ListGroup.Item>\n                      {/* 1strow */}\n                      {loading ? (\n                        <Loader />\n                      ) : error ? (\n                        <Message variant='danger'>{error}</Message>\n                      ) : (\n                        <>\n                          {\n                            isSuperAdmin ? <>\n                              <h1></h1>\n                            </> : null\n                          }\n                          {\n                            !isAdmin && !isSuperAdmin ? <>\n                              <Accordion>\n                                <Card >\n                                  <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <h6 style={{ fontSize: \"20px\" }}>Refund Policy\n                                      <img src={\"images/refund.png\"} />\n                                    </h6>\n                                  </Accordion.Toggle>\n\n                                  <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>\n                                      <p className=\"display-linebreak\">If from Doctors side Appointment get's cancelled then total amount of\n                                        fees will be refunded.\n                                        If Patient cancels the appointment before the 12 hrs of the appointment 25% of amount will be deducted from the fee and will be refunded.</p>\n                                    </Card.Body>\n                                  </Accordion.Collapse>\n                                </Card>\n                              </Accordion>\n                              <h3>Book New Appointment</h3>\n                              <Row>\n                                <Col>\n\n                                  <div style={{\n                                    marginTop: \"1px\",\n                                    padding: \"0px 1px 9px 2px\"\n                                  }}>\n                                    <Form.Label>Select Doctors </Form.Label>\n                                    <Box\n                                      component=\"form\"\n                                      sx={{\n                                        '& .MuiTextField-root': { width: '30ch' },\n                                      }}\n                                      noValidate\n                                      autoComplete=\"off\"\n                                    >\n                                      <TextField\n                                        id=\"outlined-select-currency\"\n                                        select\n\n                                        sx={{\n                                          width: { sm: 200, md: 300 },\n                                          \"& .MuiInputBase-root\": {\n                                            height: 35\n                                          }\n                                        }}\n\n                                        value={doctor}\n                                        onChange={(e) => setDoctor(e.target.value)}\n                                      // helperText=\"Please select the Doctor\"\n                                      >\n                                        {doctors?.map((option) => (\n                                          <MenuItem key={option.value} value={option.name}>\n                                            {option.name}\n                                          </MenuItem>\n                                        ))}\n                                      </TextField>\n                                    </Box>\n                                  </div>\n                                </Col>\n                                <Col>\n                                  <Form.Label>Select Slots</Form.Label>\n                                  <DatePicker\n                                    // isClearable\n                                    selected={docDate.date}\n                                    onChange={(date) => onChangeDate(date, doctor)}\n                                    showTimeSelect\n                                    minTime={new Date(fromTime)}\n                                    maxTime={new Date(toTime)}\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                    excludeTimes={excludeDate}\n                                    placeholderText='Select the Date & Time'\n                                    disabled={!doctor}\n                                    filterTime={filterPassTime}\n                                    minDate={moment().toDate()}\n                            \n                                  />\n                                </Col>\n                                <Col>\n                                  <Form.Label>Book Appointment</Form.Label>\n                                  {/* {console.log(\"pay\", !docDate.date)} */}\n                                  <Button\n                                    variant=\"success\"\n                                    disabled={!doctor || !docDate.date}\n                                    className='btn-block'\n                                    type='button'\n                                    onClick={() => placeAppointmentHandler(doctor)}\n                                  >\n                                    Book Appointment\n                                  </Button>\n\n\n                                </Col>\n                              </Row>\n                            </> : null\n                          }\n                          {\n                            !isAdmin && !isSuperAdmin ? <>\n                              <h3>Appointment List</h3>\n                              <div>\n                                <Box sx={{ height: 400, width: '100%' }}>\n                                  <DataGrid\n                                    getRowId={(r) => r._id}\n                                    rows={consultants?.length > 0 && consultants[0] !== 'undefined' && consultants?.filter((consultantmail) => consultantmail?.patientEmail_address == userInfo?.email)}\n                                    columns={patientColumns}\n                                    pageSize={5}\n                                    rowsPerPageOptions={[5]}\n                                    disableSelectionOnClick\n                                    sortModel={patientSortModel}\n                                    onSortModelChange={(model) => setPatientSortModel(model)}\n                                    experimentalFeatures={{ newEditingApi: true }}\n                                    onSelectionChange={(newSelection) => {\n                                      setSelection(newSelection.rows);\n                                    }}\n\n                                  />\n\n                                  <Modal\n                                    show={modalShow.isBoolean}\n                                    onHide={() => setModalShow({ isBoolean: false })}\n                                    size=\"lg\"\n                                    aria-labelledby=\"contained-modal-title-vcenter\"\n                                    centered\n                                  >\n                                    <Modal.Header closeButton>\n                                      <Modal.Title id=\"contained-modal-title-vcenter\">\n                                        Cancel Appointment\n                                      </Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>\n                                      <h4>Refund Policy</h4>\n                                      <p>\n                                        If from Doctors side Appointment get's cancelled then total amount of fees will be refunded.\n                                        If Patient cancels the appointment before the 12 hrs of the appointment 25% of amount will be deducted\n                                        from the fee and will be refunded.\n                                      </p>\n                                    </Modal.Body>\n                                    <Modal.Footer>\n                                      <Button\n                                        variant=\"success\"\n                                        onClick={appointmentCancel}\n                                      >Confirm</Button>\n                                      <Button className=\"outline-danger\"\n                                        onClick={() => setModalShow({ isBoolean: false })}>Cancel</Button>\n                                    </Modal.Footer>\n                                  </Modal>\n                                </Box>\n                              </div>\n                            </> :\n                              <>\n                                {\n                                  doctorInfo ? <>\n                                    {/* Doctor Slots Tab */}\n                                    <div>\n                                      <Tabs id=\"controlled-tab-example\"\n                                        defaultActiveKey=\"Appointments\"\n                                        activeKey={key}\n                                        onSelect={(k) => setKey(k)}\n                                        className=\"mb-3\" >\n\n                                        <Tab eventKey=\"Appointments\" title={<span>Appointments <i className=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> </span>}>\n                                          <div>\n                                            <Box sx={{ height: 400, width: '100%' }}>\n                                              <DataGrid\n                                                getRowId={(r) => r._id}\n                                                rows={appointmentRowData}\n                                                columns={appointmentColumns}\n                                                pageSize={5}\n                                                rowsPerPageOptions={[5]}\n                                                sortModel={sortModel}\n                                                onSortModelChange={(model) => setSortModel(model)}\n                                                disableSelectionOnClick\n                                                experimentalFeatures={{ newEditingApi: true }}\n                                              />\n                                            </Box>\n                                          </div>\n                                        </Tab>\n                                        <Tab eventKey=\"DoctorSlots\" title={<span>Doctor Slots <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> </span>}>\n                                          <Row>\n                                            <Col style={{\n                                              display: \"flex\",\n                                              justifyContent: \"space-around\"\n                                            }}>\n                                              <Card.Title>From</Card.Title>&nbsp;\n                                              <DatePicker\n                                                selected={from}\n                                                onChange={(date) => setFrom(date)}\n                                                showTimeSelect\n                                                timeIntervals={30}\n                                                timeCaption=\"Time\"\n                                                dateFormat=\"MMM d, yyyy hh:mm aa\"\n                                                placeholderText=\"Please Select From Time\"\n                                              />\n\n                                              <Card.Title> To</Card.Title>&nbsp;\n                                              <DatePicker\n                                                selected={to}\n                                                onChange={(date) => setTo(date)}\n                                                showTimeSelect\n                                                timeIntervals={30}\n                                                timeCaption=\"Time\"\n                                                dateFormat=\"MMM d, yyyy hh:mm aa\"\n                                                placeholderText=\"Please Select To Time\"\n                                              />\n                                            </Col>\n                                            <Col>\n                                              <Button\n                                                size=\"lg\"\n                                                variant=\"primary\"\n                                                type=\"submit\"\n                                                onClick={() => addDateAppointmentHandler(doctorInfo, from, to)}>\n                                                Add</Button>\n                                            </Col>\n                                          </Row>\n                                          <Box sx={{ height: 400, width: '100%' }}>\n                                            <DataGrid\n                                              getRowId={(r) => r._id}\n                                              rows={doctorInfo?.consultant_date}\n                                              columns={doctorSlotColumns}\n                                              pageSize={5}\n                                              rowsPerPageOptions={[5]}\n                                              disableSelectionOnClick\n                                              experimentalFeatures={{ newEditingApi: true }}\n                                              sortModel={docsortModel}\n                                              onSortModelChange={(model) => setDocsortModel(model)}\n                                            />\n                                          </Box>\n                                          {/* Modal for from and to time */}\n                                          <Modal\n                                            show={show}\n                                            dialogClassName=\"modal-50w\"\n                                            onHide={handleClose}>\n                                            <Modal.Header closeButton>\n                                              <Modal.Title>Edit the Appointment Dates</Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                              <Card.Title>From</Card.Title>\n                                              <DatePicker\n                                                selected={editRow.fromDate}\n                                                onChange={(date) => setEditRow({ ...editRow, fromDate: new Date(date) })}\n                                                showTimeSelect\n                                                timeIntervals={30}\n                                                timeCaption=\"Time\"\n                                                dateFormat=\"MMMM d, yyyy hh:mm aa\"\n                                                placeholderText=\"Please Select From Time\"\n                                              />\n\n                                              <Card.Title> To</Card.Title>\n                                              <DatePicker\n                                                selected={editRow.toDate}\n                                                onChange={(date) => setEditRow({ ...editRow, toDate: new Date(date) })}\n                                                showTimeSelect\n                                                timeIntervals={30}\n                                                timeCaption=\"Time\"\n                                                dateFormat=\"MMMM d, yyyy hh:mm aa\"\n                                                placeholderText=\"Please Select To Time\"\n                                              />\n                                            </Modal.Body>\n                                            <Modal.Footer>\n                                              <Button variant=\"secondary\" onClick={handleClose}>\n                                                Close\n                                              </Button>\n                                              <Button\n                                                variant=\"primary\"\n                                                onClick={() => { updateAppointmentDoctorDates(doctorInfo, from, to); handleClose(); }}>\n                                                Save Changes\n                                              </Button>\n                                            </Modal.Footer>\n                                          </Modal>\n\n                                        </Tab>\n                                      </Tabs>\n\n                                    </div>\n\n                                  </> : null\n                                }\n                              </>\n                          }\n                        </>\n                      )}\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Card.Text> </> :\n            <Card.Text>\n            </Card.Text>\n          }\n        </Card.Body>\n\n        {/* <Card.Footer className=\"text-muted\">\n              <p>\n            &copy; {currentYear} <strong>Mindvein</strong> - Medicine online Store\n          </p>\n          </Card.Footer> */}\n      </Card>\n      <p className=\"footer-links\">\n        <a\n          href=\"#\"\n          target=\"_blank\"\n        >\n        </a>\n      </p>\n    </Container >\n  )\n}\n\nexport default Consultation\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}