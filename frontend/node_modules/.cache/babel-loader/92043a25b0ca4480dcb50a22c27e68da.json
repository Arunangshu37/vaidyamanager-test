{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Reducers\nimport { productListReducer, productDetailsReducer, doctorListReducer, createDoctorReducer, updateDoctorReducer, updateAppointmentReducer, cancelAppointmentDateReducer, createDoctorDataReducer } from './reducers/productReducers';\nimport { consultationListReducer, createAppointmentReducer, updateConsultationReducer, consultantDetailsReducer, updateConsultationLinkReducer, cancelAppointmentsReducer, updatePrescriptionReducer } from './reducers/consultationReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userInfoDetailsReducer, userResetPasswordReducer } from './reducers/userReducers';\nimport { createOrderReducer, orderDetailsReducer, orderListUserReducer, orderPayReducer, updateOrderReducer, allOrdersReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  doctorList: doctorListReducer,\n  updateDoctor: updateDoctorReducer,\n  consultationList: consultationListReducer,\n  updateConsultation: updateConsultationReducer,\n  consultationLink: updateConsultationLinkReducer,\n  consultantDetails: consultantDetailsReducer,\n  cancelAppointments: cancelAppointmentsReducer,\n  updatePrescriptionData: updatePrescriptionReducer,\n  productDetails: productDetailsReducer,\n  createDoctor: createDoctorReducer,\n  createDoctorData: createDoctorDataReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userInfoDetails: userInfoDetailsReducer,\n  userResetPassword: userResetPasswordReducer,\n  createOrder: createOrderReducer,\n  createAppointment: createAppointmentReducer,\n  updateAppointments: updateAppointmentReducer,\n  cancelAppointmentDates: cancelAppointmentDateReducer,\n  updateOrder: updateOrderReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListUser: orderListUserReducer,\n  allOrders: allOrdersReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\n// Load initial state when the application is loaded\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","doctorListReducer","createDoctorReducer","updateDoctorReducer","updateAppointmentReducer","cancelAppointmentDateReducer","createDoctorDataReducer","consultationListReducer","createAppointmentReducer","updateConsultationReducer","consultantDetailsReducer","updateConsultationLinkReducer","cancelAppointmentsReducer","updatePrescriptionReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userInfoDetailsReducer","userResetPasswordReducer","createOrderReducer","orderDetailsReducer","orderListUserReducer","orderPayReducer","updateOrderReducer","allOrdersReducer","reducer","productList","doctorList","updateDoctor","consultationList","updateConsultation","consultationLink","consultantDetails","cancelAppointments","updatePrescriptionData","productDetails","createDoctor","createDoctorData","cart","userLogin","userRegister","userDetails","userUpdateProfile","userInfoDetails","userResetPassword","createOrder","createAppointment","updateAppointments","cancelAppointmentDates","updateOrder","orderDetails","orderPay","orderListUser","allOrders","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n// Reducers\nimport {\n    productListReducer,\n    productDetailsReducer,\n    doctorListReducer,\n    createDoctorReducer,\n    updateDoctorReducer,\n    updateAppointmentReducer,\n    cancelAppointmentDateReducer,\n    createDoctorDataReducer\n  \n} from './reducers/productReducers'\nimport {  consultationListReducer,\n    createAppointmentReducer,\n    updateConsultationReducer,\n    consultantDetailsReducer,updateConsultationLinkReducer,\n    cancelAppointmentsReducer,\n    updatePrescriptionReducer\n} from './reducers/consultationReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userInfoDetailsReducer,\n    userResetPasswordReducer\n} from './reducers/userReducers'\nimport {\n    createOrderReducer,\n    orderDetailsReducer,\n    orderListUserReducer,\n    orderPayReducer,\n    updateOrderReducer,\n    allOrdersReducer\n} from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    doctorList: doctorListReducer,\n    updateDoctor:updateDoctorReducer,\n    consultationList:consultationListReducer,\n    updateConsultation:updateConsultationReducer,\n    consultationLink:updateConsultationLinkReducer,\n    consultantDetails: consultantDetailsReducer,\n    cancelAppointments:cancelAppointmentsReducer,\n    updatePrescriptionData:updatePrescriptionReducer,\n    productDetails: productDetailsReducer,\n    createDoctor: createDoctorReducer,\n    createDoctorData:createDoctorDataReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userInfoDetails:userInfoDetailsReducer,\n    userResetPassword:userResetPasswordReducer,\n    createOrder: createOrderReducer,\n    createAppointment: createAppointmentReducer,\n    updateAppointments:updateAppointmentReducer,\n    cancelAppointmentDates:cancelAppointmentDateReducer,\n    updateOrder:updateOrderReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListUser: orderListUserReducer,\n    allOrders: allOrdersReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {}\n\n// Load initial state when the application is loaded\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}