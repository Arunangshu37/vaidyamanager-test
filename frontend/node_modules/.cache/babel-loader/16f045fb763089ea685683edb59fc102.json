{"ast":null,"code":"var _jsxFileName = \"/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Observation.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Container, Table, Button, Form, ListGroup, Tab, Tabs, Row, Col } from 'react-bootstrap';\nimport { Accordion, useAccordionToggle } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserInfoDetails } from '../actions/userActions';\nimport { listConsultants } from '../actions/consultationActions.js';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport \"../observation1.css\";\nimport dayjs from 'dayjs';\nimport moment from 'moment';\nimport ReactDOM from 'react-dom';\nimport \"./accordian.css\";\nconst Observation = () => {\n  const dispatch = useDispatch();\n  const [patientData, setpatientData] = useState();\n  const [patientAppointment, setpatientAppointment] = useState();\n  const [activeKey, setActiveKey] = useState(0);\n  const [login, setlogin] = useState(localStorage.getItem('isLogin'));\n  const [isActive, setIsActive] = useState({\n    \"index\": \"\",\n    \"state\": \"false\"\n  });\n  const [file, setFile] = useState();\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const isAdmin = userInfo === null || userInfo === void 0 ? void 0 : userInfo.isAdmin;\n  const doctorData = useSelector(state => state.doctorList);\n  const {\n    loading,\n    error,\n    doctors\n  } = doctorData;\n  const doctorEmail = doctors === null || doctors === void 0 ? void 0 : doctors.find(doctor => doctor.email_id == (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email));\n  // console.log(\"doc\", doctorEmail)\n\n  const patientList = useSelector(state => state.consultationList);\n  // console.log(\"List is\", patientList)\n  const {\n    loadingConsultant,\n    errorConsultant,\n    consultants\n  } = patientList;\n\n  // UserList\n  const userLists = useSelector(state => state.userInfoDetails);\n  const {\n    users\n  } = userLists;\n  // console.log(\"Users List is\", userLists)\n\n  //Prescription file download in pdf\n\n  const fileToBase64 = (file, cb) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      cb(null, reader.result);\n    };\n    reader.onerror = function (error) {\n      cb(error, null);\n    };\n  };\n  const onUploadFileChange = _ref => {\n    let {\n      target\n    } = _ref;\n    // console.log('inside')\n    if (target.files < 1 || !target.validity.valid) {\n      return;\n    }\n    fileToBase64(target.files[0], (err, result) => {\n      if (result) {\n        setFile(result);\n        // fileName = target.files[0]\n      }\n    });\n  };\n  //to find unique patientname\n  const uniques = [...new Set(consultants === null || consultants === void 0 ? void 0 : consultants.map(item => dayjs(item.date).format('M/D/YYYY')))];\n  // Set(consultants?.map(item => item.patientName))];\n  // console.log(\"uniques\", uniques)\n\n  const uniquePatientsAppointment = [];\n  if (uniques) {\n    uniques.map(unique => {\n      const details = {};\n      const appointmentDetails = consultants.filter(consultant => dayjs(consultant.date).format('M/D/YYYY') === unique && consultant.name == doctorEmail.name);\n      if (appointmentDetails.length >= 1) {\n        details[unique] = appointmentDetails;\n        uniquePatientsAppointment.push(details);\n      }\n      // console.log(\"Details\", details)\n      // console.log(\"consultants\", consultants)\n    });\n  }\n  // console.log(\"uniquePatientsAppointment\", uniquePatientsAppointment)\n  // Array.from(Array(7).keys()).map((idx) => {\n  //   const d = new Date(); \n  //   d.setDate(d.getDate() - d.getDay() + idx);\n  //   console.log(d) \n  //    return d; \n  //   });\n\n  const patientDate = event => {\n    // console.log(\"users\", users)\n    const patientInfo = [];\n    const consultationInfo = [];\n    event.map(e => {\n      consultationInfo.push(e);\n      // console.log(consultationInfo)\n      patientInfo.push(users.find(user => user.email === e.patientEmail_address));\n    });\n    setpatientData(patientInfo);\n    setpatientAppointment(consultationInfo);\n    // console.log(\"patientData\", patientInfo, consultationInfo)\n  };\n\n  const handelIsActive = ind => {\n    // console.log(\"isActive\", isActive)\n    if (isActive.state) {\n      setIsActive({\n        \"index\": \"\",\n        \"state\": !isActive.state\n      });\n    } else {\n      setIsActive({\n        \"index\": ind,\n        \"state\": !isActive.state\n      });\n    }\n  };\n  useEffect(() => {\n    dispatch(getUserInfoDetails());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"firstCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Patient Visits\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, uniquePatientsAppointment.map((patientDetail, index) => {\n    const appointmentDate = Object.keys(patientDetail)[0];\n    // let curr = new Date();\n    // let week = [];\n    // for (let i = 1; i <= 7; i++) { \n    //   const appointmentDate = curr.getDate(Object.keys(patientDetail)[0]).curr.getDay()+i\n    //   // let first = curr.getDate() - curr.getDay() + i\n    //   let day = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n    //   week.push(day)\n    //   console.log(week)\n    // }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"list-group-item list-group-item-action active\",\n      \"aria-current\": \"true\",\n      onClick: () => patientDate(patientDetail[appointmentDate]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, appointmentDate);\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"Detailedcard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Patient Data\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, patientAppointment ? patientAppointment.map((appointment, index) => {\n    var _patientData$index, _patientData$index2, _patientData$index3;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"Patient Name: \", appointment.actual_patientName, \" \\xA0 Observation:  \", appointment.Observation, \"Prescription:\", /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      disabled: appointment.prescriptionSource == \"\"\n      // style={{ backgroundColor: \"white !important\", border: \"white\" }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }, appointment.prescriptionSource ? /*#__PURE__*/React.createElement(\"a\", {\n      href: `${appointment === null || appointment === void 0 ? void 0 : appointment.prescriptionSource}`,\n      name: \"Prescription\",\n      type: \"application/pdf\",\n      title: \"Download pdf document\",\n      target: \"_prescription\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 31\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion-title\"\n      // onClick={() => setIsActive(!isActive)}\n      ,\n      onClick: () => handelIsActive(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 27\n      }\n    }, \"Patient Name: \", appointment.actual_patientName, \" \\xA0 Observation:  \", appointment.Observation, \"Prescription:\", isActive.state ? /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/minus.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 47\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/add.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 89\n      }\n    }))), isActive.state && isActive.index == index && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      id: \"uncontrolled-tab-example\",\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"detail\",\n      title: \"Detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 31\n      }\n    }, \"DOB: \", dayjs((_patientData$index = patientData[index]) === null || _patientData$index === void 0 ? void 0 : _patientData$index.DOB).format('M/D/YYYY'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 89\n      }\n    }), \"Age: \", (_patientData$index2 = patientData[index]) === null || _patientData$index2 === void 0 ? void 0 : _patientData$index2.age, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 63\n      }\n    }), \"Gender: \", (_patientData$index3 = patientData[index]) === null || _patientData$index3 === void 0 ? void 0 : _patientData$index3.gender), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"observation\",\n      title: \"Observation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 31\n      }\n    }, appointment.Observation), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"prescription\",\n      title: \"Prescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 31\n      }\n    }, \"Download Prescription:\", /*#__PURE__*/React.createElement(Button, {\n      disabled: appointment.prescriptionSource == \"\",\n      style: {\n        background: \"white !important\",\n        border: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, appointment.prescriptionSource ? /*#__PURE__*/React.createElement(\"a\", {\n      download: \"prescription\",\n      href: `${appointment === null || appointment === void 0 ? void 0 : appointment.prescriptionSource}`,\n      title: \"Download pdf document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 41\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 39\n      }\n    }))))))));\n  }) : null))))));\n};\nexport default Observation;","map":{"version":3,"names":["React","useState","useEffect","Card","Container","Table","Button","Form","ListGroup","Tab","Tabs","Row","Col","Accordion","useAccordionToggle","useDispatch","useSelector","getUserInfoDetails","listConsultants","Message","Loader","dayjs","moment","ReactDOM","Observation","dispatch","patientData","setpatientData","patientAppointment","setpatientAppointment","activeKey","setActiveKey","login","setlogin","localStorage","getItem","isActive","setIsActive","file","setFile","baseUrl","process","env","REACT_APP_API__BASE_URL","userLogin","state","userInfo","isAdmin","doctorData","doctorList","loading","error","doctors","doctorEmail","find","doctor","email_id","email","patientList","consultationList","loadingConsultant","errorConsultant","consultants","userLists","userInfoDetails","users","fileToBase64","cb","reader","FileReader","readAsDataURL","onload","result","onerror","onUploadFileChange","target","files","validity","valid","err","uniques","Set","map","item","date","format","uniquePatientsAppointment","unique","details","appointmentDetails","filter","consultant","name","length","push","patientDate","event","patientInfo","consultationInfo","e","user","patientEmail_address","handelIsActive","ind","patientDetail","index","appointmentDate","Object","keys","appointment","actual_patientName","prescriptionSource","DOB","age","gender","background","border"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Observation.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport { Card, Container, Table, Button, Form, ListGroup, Tab, Tabs, Row, Col } from 'react-bootstrap'\nimport { Accordion, useAccordionToggle } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserInfoDetails } from '../actions/userActions'\nimport { listConsultants } from '../actions/consultationActions.js'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport \"../observation1.css\"\nimport dayjs from 'dayjs'\nimport moment from 'moment';\nimport ReactDOM from 'react-dom';\nimport \"./accordian.css\"\n\nconst Observation = () => {\n  const dispatch = useDispatch();\n  const [patientData, setpatientData] = useState();\n  const [patientAppointment, setpatientAppointment] = useState();\n  const [activeKey, setActiveKey] = useState(0);\n  const [login, setlogin] = useState(localStorage.getItem('isLogin'));\n  const [isActive, setIsActive] = useState({\n    \"index\": \"\",\n    \"state\": \"false\"\n  });\n  const [file, setFile] = useState();\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const isAdmin = userInfo?.isAdmin;\n\n  const doctorData = useSelector((state) => state.doctorList)\n  const { loading, error, doctors } = doctorData;\n  const doctorEmail = doctors?.find((doctor) => doctor.email_id == userInfo?.email)\n  // console.log(\"doc\", doctorEmail)\n\n  const patientList = useSelector((state) => state.consultationList)\n  // console.log(\"List is\", patientList)\n  const { loadingConsultant, errorConsultant, consultants } = patientList;\n\n  // UserList\n  const userLists = useSelector((state) => state.userInfoDetails)\n  const { users } = userLists;\n  // console.log(\"Users List is\", userLists)\n\n  //Prescription file download in pdf\n\n  const fileToBase64 = (file, cb) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = function () {\n      cb(null, reader.result)\n    }\n    reader.onerror = function (error) {\n      cb(error, null)\n    }\n  }\n\n  const onUploadFileChange = ({ target }) => {\n    // console.log('inside')\n    if (target.files < 1 || !target.validity.valid) {\n      return\n    }\n    fileToBase64(target.files[0], (err, result) => {\n      if (result) {\n        setFile(result)\n        // fileName = target.files[0]\n      }\n    })\n  }\n  //to find unique patientname\n  const uniques = [...new\n    Set(consultants?.map(item => dayjs(item.date).format('M/D/YYYY')))];\n  // Set(consultants?.map(item => item.patientName))];\n  // console.log(\"uniques\", uniques)\n\n  const uniquePatientsAppointment = []\n  if (uniques) {\n    uniques.map((unique) => {\n      const details = {}\n      const appointmentDetails = consultants.filter((consultant) => dayjs(consultant.date).format('M/D/YYYY') === unique && consultant.name == doctorEmail.name)\n      if (appointmentDetails.length >= 1) {\n        details[unique] = appointmentDetails\n        uniquePatientsAppointment.push(details)\n      }\n      // console.log(\"Details\", details)\n      // console.log(\"consultants\", consultants)\n    });\n  }\n  // console.log(\"uniquePatientsAppointment\", uniquePatientsAppointment)\n  // Array.from(Array(7).keys()).map((idx) => {\n  //   const d = new Date(); \n  //   d.setDate(d.getDate() - d.getDay() + idx);\n  //   console.log(d) \n  //    return d; \n  //   });\n\n  const patientDate = (event) => {\n    // console.log(\"users\", users)\n    const patientInfo = []\n    const consultationInfo = []\n    event.map((e) => {\n      consultationInfo.push(e)\n      // console.log(consultationInfo)\n      patientInfo.push(users.find((user) => user.email === e.patientEmail_address))\n    })\n    setpatientData(patientInfo)\n    setpatientAppointment(consultationInfo)\n    // console.log(\"patientData\", patientInfo, consultationInfo)\n  }\n\n  const handelIsActive = (ind) => {\n    // console.log(\"isActive\", isActive)\n    if (isActive.state) {\n      setIsActive({\n        \"index\": \"\",\n        \"state\": !isActive.state\n      })\n    } else {\n      setIsActive({\n        \"index\": ind,\n        \"state\": !isActive.state\n      })\n    }\n  }\n\n\n\n  useEffect(() => {\n    dispatch(getUserInfoDetails());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {/* first card */}\n      <div className=\"row\" >\n        <div className=\"col-md-3\" >\n          <Card className='firstCard'>\n            <Card.Body>\n              <h3>Patient Visits</h3>\n              &nbsp;\n              <div className=\"list-group\">\n                {uniquePatientsAppointment.map((patientDetail, index) => {\n                  const appointmentDate = Object.keys(patientDetail)[0]\n                  // let curr = new Date();\n                  // let week = [];\n                  // for (let i = 1; i <= 7; i++) { \n                  //   const appointmentDate = curr.getDate(Object.keys(patientDetail)[0]).curr.getDay()+i\n                  //   // let first = curr.getDate() - curr.getDay() + i\n                  //   let day = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n                  //   week.push(day)\n                  //   console.log(week)\n                  // }\n\n                  return (\n                    <a href=\"#\" className=\"list-group-item list-group-item-action active\" aria-current=\"true\"\n                      onClick={() => patientDate(patientDetail[appointmentDate])}>\n                        {appointmentDate}\n                      {/* {moment(appointmentDate) === moment().week()? moment(appointmentDate):null} */}\n                      {/* {console.log(moment(appointmentDate) === moment().week() && moment(appointmentDate).year() === moment().year())} */}\n                      {/* {moment(appointmentDate).week() === moment().week() && moment(appointmentDate).year() === moment().year()} */}\n                      {/* {console.log(appointmentDate)} */}\n                    </a>\n                  )\n                }\n                )}\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n\n        {/* Accordian */}\n        {/* second Card */}\n        <div className='col-sm-4' >\n          <Card className='Detailedcard'>\n            {/* <h5>Patient Name</h5> */}\n            <Card.Body>\n              <h3>Patient Data</h3>\n              <div>\n                {\n                  patientAppointment ? patientAppointment.map((appointment, index) => (\n                    <>\n                    <div>\n                      Patient Name: {appointment.actual_patientName} &nbsp;\n                      Observation:  {appointment.Observation}\n                      Prescription:\n                      <Button\n                        size='sm'\n                        variant=\"light\"\n                        disabled={appointment.prescriptionSource == \"\"}\n                      // style={{ backgroundColor: \"white !important\", border: \"white\" }}\n                      >\n                        {\n                          appointment.prescriptionSource ? (\n                            <a href={`${appointment?.prescriptionSource}`} name=\"Prescription\" type='application/pdf' title='Download pdf document' target=\"_prescription\" rel=\"noopener noreferrer\" >\n                              <img\n                                src={baseUrl + \"images/pdf.png\"}\n                                alt=\"First slide\"\n                              />\n                            </a>\n                          ) : (\n                            <img\n                              src={baseUrl + \"images/pdf.png\"}\n                              alt=\"First slide\"\n                            />\n                          )\n                        }\n                      </Button>\n                    </div>\n                    <div className=\"accordion\" key={index}>\n                      <div className=\"accordion-item\">\n                        <div\n                          className=\"accordion-title\"\n                          // onClick={() => setIsActive(!isActive)}\n                          onClick={() => handelIsActive(index)}\n                        >\n                          <div>\n                            Patient Name: {appointment.actual_patientName} &nbsp;\n                            Observation:  {appointment.Observation}\n                            Prescription:\n                            {isActive.state ? <img src={\"images/minus.png\"} alt=\"\" /> : <img src={\"images/add.png\"} alt=\"\" />}\n                          </div>\n                        </div>\n                        {isActive.state && isActive.index == index &&\n                          <div className=\"accordion-content\">\n                            <Tabs\n                              id=\"uncontrolled-tab-example\"\n                              className=\"mb-3\"\n                            >\n                              {/* {\n                                  patientData.find((patient) => patient.email === appointment.patientEmail_address)\n                              } */}\n                              <Tab eventKey=\"detail\" title=\"Detail\">\n                                DOB: {dayjs(patientData[index]?.DOB).format('M/D/YYYY')}<br />\n                                Age: {patientData[index]?.age}<br />\n                                Gender: {patientData[index]?.gender}\n                              </Tab>\n                              <Tab eventKey=\"observation\" title=\"Observation\">\n                                {appointment.Observation}\n                                {/* {console.log(appointment.Observation)} */}\n                              </Tab>\n                              <Tab eventKey=\"prescription\" title=\"Prescription\">\n                                {/* {console.log(\"Prescription file is\",appointment.prescriptionSource)} */}\n                                Download Prescription:\n                                <Button\n                                  disabled={appointment.prescriptionSource == \"\"}\n                                  style={{ background: \"white !important\", border: \"white\" }}\n                                >\n                                  {\n                                 appointment.prescriptionSource ? (\n                                      <a download=\"prescription\" href={`${appointment?.prescriptionSource}`} title='Download pdf document'>\n                                        <img\n                                          src={baseUrl + \"images/pdf.png\"}\n                                          alt=\"First slide\"\n                                        />\n                                      </a>\n                                    ) : (\n                                      <img\n                                        src={baseUrl + \"images/pdf.png\"}\n                                        alt=\"First slide\"\n                                      />\n                                    )\n                                  }\n\n                                </Button>\n                              </Tab>\n                            </Tabs>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                    </>\n                  )) : null\n                }\n\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n\n      </div>\n    </Container >\n\n  )\n}\n\nexport default Observation"],"mappings":"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"},"metadata":{},"sourceType":"module"}