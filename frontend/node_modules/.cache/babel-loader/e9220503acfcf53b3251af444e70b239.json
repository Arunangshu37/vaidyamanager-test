{"ast":null,"code":"var _jsxFileName = \"/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Tickets.js\";\nimport React, { useEffect, useState, useNavigate } from \"react\";\nimport { Card, Container, Table, Button, Form, ListGroup, Tab, Tabs, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserInfoDetails } from '../actions/userActions';\nimport { listConsultants } from '../actions/consultationActions.js';\nimport { listDoctors } from '../actions/productActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport \"../observation1.css\";\nimport dayjs from 'dayjs';\nimport moment from 'moment';\nimport ReactDOM from 'react-dom';\nimport \"../accordian.css\";\nimport { styled } from \"@mui/material/styles\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { IconButton } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Collapse from \"@mui/material/Collapse\";\n// import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Contract from \"./Contract\";\nconst Tickets = () => {\n  const dispatch = useDispatch();\n  const [patientData, setpatientData] = useState();\n  const [patientAppointment, setpatientAppointment] = useState();\n  const [activeKey, setActiveKey] = useState(0);\n  const [login, setlogin] = useState(localStorage.getItem('isLogin'));\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\n  const [file, setFile] = useState();\n  const [isActive, setIsActive] = useState({\n    \"index\": \"\",\n    \"state\": \"false\"\n  });\n  const [appointmentRowData, setAppointmentRowData] = useState([]);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const isAdmin = userInfo === null || userInfo === void 0 ? void 0 : userInfo.isAdmin;\n  const doctorData = useSelector(state => state.doctorList);\n  const {\n    loading,\n    error,\n    doctors\n  } = doctorData;\n  // console.log(\"Doctor Data is\", doctors)\n  const doctorEmail = doctors === null || doctors === void 0 ? void 0 : doctors.find(doctor => doctor.email_id === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.email));\n  // console.log(\"doc\", doctorEmail)\n\n  const patientList = useSelector(state => state.consultationList);\n  // console.log(\"List is\", patientList)\n  const {\n    loadingConsultant,\n    errorConsultant,\n    consultants\n  } = patientList;\n  useEffect(() => {\n    // Dispatch the list doctors action and fill our state\n    dispatch(listDoctors());\n    dispatch(listConsultants());\n  }, [dispatch]);\n\n  // UserList\n  const userLists = useSelector(state => state.userInfoDetails);\n  const {\n    users\n  } = userLists;\n  console.log(\"Users List is\", userLists);\n  useEffect(() => {\n    const data = (consultants === null || consultants === void 0 ? void 0 : consultants.length) > 0 && consultants[0] !== 'undefined' && (consultants === null || consultants === void 0 ? void 0 : consultants.filter(consultantInfo => (consultantInfo === null || consultantInfo === void 0 ? void 0 : consultantInfo.name) == (doctorEmail === null || doctorEmail === void 0 ? void 0 : doctorEmail.name)));\n    setAppointmentRowData(data);\n  }, [consultants, doctorEmail]);\n  const handelIsActive = ind => {\n    // console.log(\"isActive\", isActive)\n    if (isActive.state) {\n      setIsActive({\n        \"index\": \"\",\n        \"state\": !isActive.state\n      });\n    } else {\n      setIsActive({\n        \"index\": ind,\n        \"state\": !isActive.state\n      });\n    }\n  };\n  useEffect(() => {\n    dispatch(getUserInfoDetails());\n  }, [dispatch]);\n  const [sortModel, setSortModel] = useState([{\n    field: \"date\",\n    sort: \"desc\"\n  }]);\n  const [open, setOpen] = useState(false);\n  const patientHistoryDetail = [{\n    field: '_id',\n    headerName: 'ID',\n    width: 90,\n    hide: true\n  }, {\n    field: 'date',\n    headerName: 'Appointment Date',\n    width: 190,\n    type: 'dateTime',\n    sortable: true,\n    valueGetter: _ref => {\n      let {\n        value\n      } = _ref;\n      return value && new Date(value);\n    }\n  }, {\n    field: 'patientName',\n    headerName: 'Patient Name',\n    width: 120\n  }, {\n    field: 'patientHeight',\n    headerName: 'Height',\n    width: 120\n  }, {\n    field: 'patientWeight',\n    headerName: 'Weight',\n    width: 140\n  }, {\n    field: 'Observation',\n    headerName: 'Observation',\n    width: 120\n  }, {\n    field: 'prescriptionSource',\n    headerName: 'Prescription',\n    width: 120,\n    renderCell: params => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        size: \"large\"\n        // onClick={()=>window.open(`${params.row.prescriptionSource}`,'_blank')}\n        ,\n        onClick: () => pdf(params),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FileDownloadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  const pdf = consultant => {\n    // console.log(\"first\", consultant.row.prescriptionSource)\n    var win = window.open();\n    win.document.write('<iframe src=\"' + consultant.row.prescriptionSource + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>');\n  };\n\n  //to find unique patientname\n  const uniques = [...new Set(consultants === null || consultants === void 0 ? void 0 : consultants.map(item => dayjs(item.date).format('M/D/YYYY')))];\n  // Set(consultants?.map(item => item.patientName))];\n  // console.log(\"uniques\", uniques)\n\n  const uniquePatientsAppointment = [];\n  if (uniques) {\n    uniques.map(unique => {\n      const details = {};\n      const appointmentDetails = consultants.filter(consultant => dayjs(consultant.date).format('M/D/YYYY') === unique && consultant.name == doctorEmail.name);\n      if (appointmentDetails.length >= 1) {\n        details[unique] = appointmentDetails;\n        uniquePatientsAppointment.push(details);\n      }\n      // console.log(\"Details\", details)\n      // console.log(\"consultants\", consultants)\n    });\n  }\n\n  //patient date fucntion\n  const patientDate = event => {\n    // console.log(\"users\", users)\n    const patientInfo = [];\n    const consultationInfo = [];\n    event.map(e => {\n      consultationInfo.push(e);\n      // console.log(consultationInfo)\n      patientInfo.push(users.find(user => user.email === e.patientEmail_address));\n    });\n    setpatientData(patientInfo);\n    setpatientAppointment(consultationInfo);\n    // console.log(\"patientData\", patientInfo, consultationInfo)\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"6rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    getRowId: r => r._id,\n    rows: appointmentRowData,\n    columns: patientHistoryDetail,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    disableSelectionOnClick: true,\n    experimentalFeatures: {\n      newEditingApi: true\n    },\n    sortModel: sortModel,\n    onSortModelChange: model => setSortModel(model),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"firstCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Patient Visits\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, uniquePatientsAppointment.map((patientDetail, index) => {\n    const appointmentDate = Object.keys(patientDetail)[0];\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"list-group-item list-group-item-action active\",\n      \"aria-current\": \"true\",\n      onClick: () => patientDate(patientDetail[appointmentDate]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 23\n      }\n    }, appointmentDate);\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"Detailedcard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Patient Data\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, patientAppointment ? patientAppointment.map((appointment, index) => {\n    var _patientData$index, _patientData$index2, _patientData$index3;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, \"Patient Name: \", appointment.actual_patientName, \" \\xA0 Observation:  \", appointment.Observation, \"Prescription:\", /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"light\",\n      disabled: appointment.prescriptionSource == \"\"\n      // style={{ backgroundColor: \"white !important\", border: \"white\" }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 27\n      }\n    }, appointment.prescriptionSource ? /*#__PURE__*/React.createElement(\"a\", {\n      href: `${appointment === null || appointment === void 0 ? void 0 : appointment.prescriptionSource}`,\n      name: \"Prescription\",\n      type: \"application/pdf\",\n      title: \"Download pdf document\",\n      target: \"_prescription\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 35\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion-title\"\n      // onClick={() => setIsActive(!isActive)}\n      ,\n      onClick: () => handelIsActive(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 31\n      }\n    }, \"Patient Name: \", appointment.actual_patientName, \" \\xA0 Observation:  \", appointment.Observation, \"Prescription:\", isActive.state ? /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/minus.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 51\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/add.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 93\n      }\n    }))), isActive.state && isActive.index == index && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      id: \"uncontrolled-tab-example\",\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"detail\",\n      title: \"Detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 35\n      }\n    }, \"DOB: \", dayjs((_patientData$index = patientData[index]) === null || _patientData$index === void 0 ? void 0 : _patientData$index.DOB).format('M/D/YYYY'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 93\n      }\n    }), \"Age: \", (_patientData$index2 = patientData[index]) === null || _patientData$index2 === void 0 ? void 0 : _patientData$index2.age, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 67\n      }\n    }), \"Gender: \", (_patientData$index3 = patientData[index]) === null || _patientData$index3 === void 0 ? void 0 : _patientData$index3.gender), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"observation\",\n      title: \"Observation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 35\n      }\n    }, appointment.Observation), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"prescription\",\n      title: \"Prescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 35\n      }\n    }, \"Download Prescription:\", /*#__PURE__*/React.createElement(Button, {\n      disabled: appointment.prescriptionSource == \"\",\n      style: {\n        background: \"white !important\",\n        border: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 37\n      }\n    }, appointment.prescriptionSource ? /*#__PURE__*/React.createElement(\"a\", {\n      download: \"prescription\",\n      href: `${appointment === null || appointment === void 0 ? void 0 : appointment.prescriptionSource}`,\n      title: \"Download pdf document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: baseUrl + \"images/pdf.png\",\n      alt: \"First slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 43\n      }\n    }))))))));\n  }) : null)))))), /*#__PURE__*/React.createElement(Contract, {\n    appointmentRowData: appointmentRowData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Tickets;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Card","Container","Table","Button","Form","ListGroup","Tab","Tabs","Row","Col","useDispatch","useSelector","getUserInfoDetails","listConsultants","listDoctors","Message","Loader","dayjs","moment","ReactDOM","styled","Grid","TextField","DataGrid","GridActionsCellItem","FileDownloadIcon","IconButton","Box","Collapse","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Typography","Paper","EditIcon","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Contract","Tickets","dispatch","patientData","setpatientData","patientAppointment","setpatientAppointment","activeKey","setActiveKey","login","setlogin","localStorage","getItem","baseUrl","process","env","REACT_APP_API__BASE_URL","file","setFile","isActive","setIsActive","appointmentRowData","setAppointmentRowData","userLogin","state","userInfo","isAdmin","doctorData","doctorList","loading","error","doctors","doctorEmail","find","doctor","email_id","email","patientList","consultationList","loadingConsultant","errorConsultant","consultants","userLists","userInfoDetails","users","console","log","data","length","filter","consultantInfo","name","handelIsActive","ind","sortModel","setSortModel","field","sort","open","setOpen","patientHistoryDetail","headerName","width","hide","type","sortable","valueGetter","value","Date","renderCell","params","cursor","pdf","consultant","win","window","document","write","row","prescriptionSource","uniques","Set","map","item","date","format","uniquePatientsAppointment","unique","details","appointmentDetails","push","patientDate","event","patientInfo","consultationInfo","e","user","patientEmail_address","marginTop","height","r","_id","newEditingApi","model","patientDetail","index","appointmentDate","Object","keys","appointment","actual_patientName","Observation","DOB","age","gender","background","border"],"sources":["/home/mayuri/Desktop/vaidya/vaidyamanager/frontend/src/screens/Tickets.js"],"sourcesContent":["import React, { useEffect, useState, useNavigate } from \"react\";\nimport { Card, Container, Table, Button, Form, ListGroup, Tab, Tabs, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserInfoDetails } from '../actions/userActions'\nimport { listConsultants } from '../actions/consultationActions.js'\nimport { listDoctors } from '../actions/productActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport \"../observation1.css\"\nimport dayjs from 'dayjs'\nimport moment from 'moment';\nimport ReactDOM from 'react-dom';\nimport \"../accordian.css\"\nimport { styled } from \"@mui/material/styles\";\nimport { Grid, TextField } from \"@mui/material\";\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { IconButton } from '@mui/material'\nimport Box from '@mui/material/Box';\nimport Collapse from \"@mui/material/Collapse\";\n// import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Contract from \"./Contract\";\n\n\n\nconst Tickets = () => {\n  const dispatch = useDispatch();\n  const [patientData, setpatientData] = useState();\n  const [patientAppointment, setpatientAppointment] = useState();\n  const [activeKey, setActiveKey] = useState(0);\n  const [login, setlogin] = useState(localStorage.getItem('isLogin'));\n  const baseUrl = process.env.REACT_APP_API__BASE_URL;\n  const [file, setFile] = useState();\n  const [isActive, setIsActive] = useState({\n    \"index\": \"\",\n    \"state\": \"false\"\n  });\n  const [appointmentRowData, setAppointmentRowData] = useState([])\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const isAdmin = userInfo?.isAdmin;\n\n  const doctorData = useSelector((state) => state.doctorList)\n  const { loading, error, doctors } = doctorData;\n  // console.log(\"Doctor Data is\", doctors)\n  const doctorEmail = doctors?.find((doctor) => doctor.email_id === userInfo?.email)\n  // console.log(\"doc\", doctorEmail)\n\n  const patientList = useSelector((state) => state.consultationList)\n  // console.log(\"List is\", patientList)\n  const { loadingConsultant, errorConsultant, consultants } = patientList;\n\n  useEffect(() => {\n    // Dispatch the list doctors action and fill our state\n    dispatch(listDoctors())\n    dispatch(listConsultants())\n  }, [dispatch])\n\n\n  // UserList\n  const userLists = useSelector((state) => state.userInfoDetails)\n  const { users } = userLists;\n  console.log(\"Users List is\", userLists)\n\n  useEffect(() => {\n    const data = consultants?.length > 0 && consultants[0] !== 'undefined' && consultants?.filter((consultantInfo) => consultantInfo?.name == doctorEmail?.name)\n    setAppointmentRowData(data)\n  }, [consultants, doctorEmail])\n\n\n\n  const handelIsActive = (ind) => {\n    // console.log(\"isActive\", isActive)\n    if (isActive.state) {\n      setIsActive({\n        \"index\": \"\",\n        \"state\": !isActive.state\n      })\n    } else {\n      setIsActive({\n        \"index\": ind,\n        \"state\": !isActive.state\n      })\n    }\n  }\n  useEffect(() => {\n    dispatch(getUserInfoDetails());\n  }, [dispatch]);\n\n  const [sortModel, setSortModel] = useState([\n    {\n      field: \"date\",\n      sort: \"desc\"\n    }\n  ]);\n  const [open, setOpen] = useState(false);\n  const patientHistoryDetail = [\n    { field: '_id', headerName: 'ID', width: 90, hide: true },\n    {\n      field: 'date', headerName: 'Appointment Date', width: 190,\n      type: 'dateTime',\n      sortable: true,\n      valueGetter: ({ value }) => value && new Date(value),\n    },\n    { field: 'patientName', headerName: 'Patient Name', width: 120 },\n    { field: 'patientHeight', headerName: 'Height', width: 120 },\n    { field: 'patientWeight', headerName: 'Weight', width: 140 },\n    { field: 'Observation', headerName: 'Observation', width: 120 },\n    {\n      field: 'prescriptionSource', headerName: 'Prescription', width: 120,\n      renderCell: (params) => {\n        return (\n          <div className='d-flex justify-content-between align-items-center' style={{ cursor: 'pointer' }}>\n            <IconButton\n              color='primary'\n              size=\"large\"\n              // onClick={()=>window.open(`${params.row.prescriptionSource}`,'_blank')}\n              onClick={() => pdf(params)}\n            >\n              <FileDownloadIcon />\n              {/* <a type= \"application/pdf\" target=\"_blank\"   href={`${params.prescriptionSource}`}/> */}\n            </IconButton>\n          </div>\n        )\n      }\n    },\n\n  ];\n\n  const pdf = (consultant) => {\n    // console.log(\"first\", consultant.row.prescriptionSource)\n    var win = window.open();\n    win.document.write('<iframe src=\"' + consultant.row.prescriptionSource + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>');\n  }\n\n  //to find unique patientname\n  const uniques = [...new\n    Set(consultants?.map(item => dayjs(item.date).format('M/D/YYYY')))];\n  // Set(consultants?.map(item => item.patientName))];\n  // console.log(\"uniques\", uniques)\n\n\n  const uniquePatientsAppointment = []\n  if (uniques) {\n    uniques.map((unique) => {\n      const details = {}\n      const appointmentDetails = consultants.filter((consultant) => dayjs(consultant.date).format('M/D/YYYY') === unique && consultant.name == doctorEmail.name)\n      if (appointmentDetails.length >= 1) {\n        details[unique] = appointmentDetails\n        uniquePatientsAppointment.push(details)\n      }\n      // console.log(\"Details\", details)\n      // console.log(\"consultants\", consultants)\n    }\n\n    )\n  }\n\n  //patient date fucntion\n  const patientDate = (event) => {\n    // console.log(\"users\", users)\n    const patientInfo = []\n    const consultationInfo = []\n    event.map((e) => {\n      consultationInfo.push(e)\n      // console.log(consultationInfo)\n      patientInfo.push(users.find((user) => user.email === e.patientEmail_address))\n    })\n    setpatientData(patientInfo)\n    setpatientAppointment(consultationInfo)\n    // console.log(\"patientData\", patientInfo, consultationInfo)\n  }\n\n\n  return (\n    <div>\n      <Container>\n        {/* first card */}\n\n        <div style={{ marginTop: \"6rem\" }}>\n          <div>\n            <Box sx={{ height: 400, width: '100%' }}>\n              <DataGrid\n                getRowId={(r) => r._id}\n                rows={appointmentRowData}\n                columns={patientHistoryDetail}\n                pageSize={5}\n                rowsPerPageOptions={[5]}\n                disableSelectionOnClick\n                experimentalFeatures={{ newEditingApi: true }}\n                sortModel={sortModel}\n                onSortModelChange={(model) => setSortModel(model)}\n              />\n            </Box>\n          </div>\n\n        </div>\n        <div className=\"row\" >\n          <div className=\"col-md-3\" >\n            <Card className='firstCard'>\n              <Card.Body>\n                <h3>Patient Visits</h3>\n                &nbsp;\n                <div className=\"list-group\">\n                  {uniquePatientsAppointment.map((patientDetail, index) => {\n                    const appointmentDate = Object.keys(patientDetail)[0]\n                    return (\n                      <a href=\"#\" className=\"list-group-item list-group-item-action active\" aria-current=\"true\"\n                        onClick={() => patientDate(patientDetail[appointmentDate])}>\n                        {appointmentDate}\n                      </a>\n                    )\n                  }\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n\n          {/* Accordian */}\n          {/* second Card */}\n          <div className='col-sm-4' >\n            <Card className='Detailedcard'>\n              {/* <h5>Patient Name</h5> */}\n              <Card.Body>\n                <h3>Patient Data</h3>\n                <div>\n                  {\n                    patientAppointment ? patientAppointment.map((appointment, index) => (\n                      <>\n                        <div>\n                          Patient Name: {appointment.actual_patientName} &nbsp;\n                          Observation:  {appointment.Observation}\n                          Prescription:\n                          <Button\n                            size='sm'\n                            variant=\"light\"\n                            disabled={appointment.prescriptionSource == \"\"}\n                          // style={{ backgroundColor: \"white !important\", border: \"white\" }}\n                          >\n                            {\n                              appointment.prescriptionSource ? (\n                                <a href={`${appointment?.prescriptionSource}`} name=\"Prescription\" type='application/pdf' title='Download pdf document' target=\"_prescription\" rel=\"noopener noreferrer\" >\n                                  <img\n                                    src={baseUrl + \"images/pdf.png\"}\n                                    alt=\"First slide\"\n                                  />\n                                </a>\n                              ) : (\n                                <img\n                                  src={baseUrl + \"images/pdf.png\"}\n                                  alt=\"First slide\"\n                                />\n                              )\n                            }\n                          </Button>\n                        </div>\n                        <div className=\"accordion\" key={index}>\n                          <div className=\"accordion-item\">\n                            <div\n                              className=\"accordion-title\"\n                              // onClick={() => setIsActive(!isActive)}\n                              onClick={() => handelIsActive(index)}\n                            >\n                              <div>\n                                Patient Name: {appointment.actual_patientName} &nbsp;\n                                Observation:  {appointment.Observation}\n                                Prescription:\n                                {isActive.state ? <img src={\"images/minus.png\"} alt=\"\" /> : <img src={\"images/add.png\"} alt=\"\" />}\n                              </div>\n                            </div>\n                            {isActive.state && isActive.index == index &&\n                              <div className=\"accordion-content\">\n                                <Tabs\n                                  id=\"uncontrolled-tab-example\"\n                                  className=\"mb-3\"\n                                >\n                                  {/* {\n                                  patientData.find((patient) => patient.email === appointment.patientEmail_address)\n                              } */}\n                                  <Tab eventKey=\"detail\" title=\"Detail\">\n                                    DOB: {dayjs(patientData[index]?.DOB).format('M/D/YYYY')}<br />\n                                    Age: {patientData[index]?.age}<br />\n                                    Gender: {patientData[index]?.gender}\n                                  </Tab>\n                                  <Tab eventKey=\"observation\" title=\"Observation\">\n                                    {appointment.Observation}\n                                    {/* {console.log(appointment.Observation)} */}\n                                  </Tab>\n                                  <Tab eventKey=\"prescription\" title=\"Prescription\">\n                                    {/* {console.log(\"Prescription file is\",appointment.prescriptionSource)} */}\n                                    Download Prescription:\n                                    <Button\n                                      disabled={appointment.prescriptionSource == \"\"}\n                                      style={{ background: \"white !important\", border: \"white\" }}\n                                    >\n                                      {\n                                        appointment.prescriptionSource ? (\n                                          <a download=\"prescription\" href={`${appointment?.prescriptionSource}`} title='Download pdf document'>\n                                            <img\n                                              src={baseUrl + \"images/pdf.png\"}\n                                              alt=\"First slide\"\n                                            />\n                                          </a>\n                                        ) : (\n                                          <img\n                                            src={baseUrl + \"images/pdf.png\"}\n                                            alt=\"First slide\"\n                                          />\n                                        )\n                                      }\n\n                                    </Button>\n                                  </Tab>\n                                </Tabs>\n                              </div>\n                            }\n                          </div>\n                        </div>\n                      </>\n                    )) : null\n                  }\n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      </Container>\n\n      {/* demo table */}\n      <Contract\n      appointmentRowData={appointmentRowData} />\n    </div>\n  );\n};\n\nexport default Tickets;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACtG,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,kBAAkB;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,IAAI,EAAEC,SAAS,QAAQ,eAAe;AAC/C,SAASC,QAAQ,EAAEC,mBAAmB,QAAQ,kBAAkB;AAChE,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,IAAIC,gBAAgB,QAAQ,yBAAyB;AACrE,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,QAAQ,MAAM,YAAY;AAIjC,MAAMC,OAAO,GAAG,MAAM;EACpB,MAAMC,QAAQ,GAAGhC,WAAW,EAAE;EAC9B,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,EAAE;EAChD,MAAM,CAAC+C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhD,QAAQ,EAAE;EAC9D,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmD,KAAK,EAAEC,QAAQ,CAAC,GAAGpD,QAAQ,CAACqD,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EACnE,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG5D,QAAQ,EAAE;EAClC,MAAM,CAAC6D,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAAC;IACvC,OAAO,EAAE,EAAE;IACX,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAAC+D,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAMiE,SAAS,GAAGpD,WAAW,CAAEqD,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzD,MAAM;IAAEE;EAAS,CAAC,GAAGF,SAAS;EAC9B,MAAMG,OAAO,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,OAAO;EAEjC,MAAMC,UAAU,GAAGxD,WAAW,CAAEqD,KAAK,IAAKA,KAAK,CAACI,UAAU,CAAC;EAC3D,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGJ,UAAU;EAC9C;EACA,MAAMK,WAAW,GAAGD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,QAAQ,MAAKV,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEW,KAAK,EAAC;EAClF;;EAEA,MAAMC,WAAW,GAAGlE,WAAW,CAAEqD,KAAK,IAAKA,KAAK,CAACc,gBAAgB,CAAC;EAClE;EACA,MAAM;IAAEC,iBAAiB;IAAEC,eAAe;IAAEC;EAAY,CAAC,GAAGJ,WAAW;EAEvEhF,SAAS,CAAC,MAAM;IACd;IACA6C,QAAQ,CAAC5B,WAAW,EAAE,CAAC;IACvB4B,QAAQ,CAAC7B,eAAe,EAAE,CAAC;EAC7B,CAAC,EAAE,CAAC6B,QAAQ,CAAC,CAAC;;EAGd;EACA,MAAMwC,SAAS,GAAGvE,WAAW,CAAEqD,KAAK,IAAKA,KAAK,CAACmB,eAAe,CAAC;EAC/D,MAAM;IAAEC;EAAM,CAAC,GAAGF,SAAS;EAC3BG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,SAAS,CAAC;EAEvCrF,SAAS,CAAC,MAAM;IACd,MAAM0F,IAAI,GAAG,CAAAN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,MAAM,IAAG,CAAC,IAAIP,WAAW,CAAC,CAAC,CAAC,KAAK,WAAW,KAAIA,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEQ,MAAM,CAAEC,cAAc,IAAK,CAAAA,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEC,IAAI,MAAInB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEmB,IAAI,EAAC;IAC5J7B,qBAAqB,CAACyB,IAAI,CAAC;EAC7B,CAAC,EAAE,CAACN,WAAW,EAAET,WAAW,CAAC,CAAC;EAI9B,MAAMoB,cAAc,GAAIC,GAAG,IAAK;IAC9B;IACA,IAAIlC,QAAQ,CAACK,KAAK,EAAE;MAClBJ,WAAW,CAAC;QACV,OAAO,EAAE,EAAE;QACX,OAAO,EAAE,CAACD,QAAQ,CAACK;MACrB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLJ,WAAW,CAAC;QACV,OAAO,EAAEiC,GAAG;QACZ,OAAO,EAAE,CAAClC,QAAQ,CAACK;MACrB,CAAC,CAAC;IACJ;EACF,CAAC;EACDnE,SAAS,CAAC,MAAM;IACd6C,QAAQ,CAAC9B,kBAAkB,EAAE,CAAC;EAChC,CAAC,EAAE,CAAC8B,QAAQ,CAAC,CAAC;EAEd,MAAM,CAACoD,SAAS,EAAEC,YAAY,CAAC,GAAGjG,QAAQ,CAAC,CACzC;IACEkG,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrG,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMsG,oBAAoB,GAAG,CAC3B;IAAEJ,KAAK,EAAE,KAAK;IAAEK,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAC,EACzD;IACEP,KAAK,EAAE,MAAM;IAAEK,UAAU,EAAE,kBAAkB;IAAEC,KAAK,EAAE,GAAG;IACzDE,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE;MAAA,IAAC;QAAEC;MAAM,CAAC;MAAA,OAAKA,KAAK,IAAI,IAAIC,IAAI,CAACD,KAAK,CAAC;IAAA;EACtD,CAAC,EACD;IAAEX,KAAK,EAAE,aAAa;IAAEK,UAAU,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAI,CAAC,EAChE;IAAEN,KAAK,EAAE,eAAe;IAAEK,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC5D;IAAEN,KAAK,EAAE,eAAe;IAAEK,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC5D;IAAEN,KAAK,EAAE,aAAa;IAAEK,UAAU,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/D;IACEN,KAAK,EAAE,oBAAoB;IAAEK,UAAU,EAAE,cAAc;IAAEC,KAAK,EAAE,GAAG;IACnEO,UAAU,EAAGC,MAAM,IAAK;MACtB,oBACE;QAAK,SAAS,EAAC,mDAAmD;QAAC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC9F,oBAAC,UAAU;QACT,KAAK,EAAC,SAAS;QACf,IAAI,EAAC;QACL;QAAA;QACA,OAAO,EAAE,MAAMC,GAAG,CAACF,MAAM,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAE3B,oBAAC,gBAAgB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAET,CACT;IAEV;EACF,CAAC,CAEF;EAED,MAAME,GAAG,GAAIC,UAAU,IAAK;IAC1B;IACA,IAAIC,GAAG,GAAGC,MAAM,CAACjB,IAAI,EAAE;IACvBgB,GAAG,CAACE,QAAQ,CAACC,KAAK,CAAC,eAAe,GAAGJ,UAAU,CAACK,GAAG,CAACC,kBAAkB,GAAG,kIAAkI,CAAC;EAC9M,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,CAAC,GAAG,IAClBC,GAAG,CAACxC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyC,GAAG,CAACC,IAAI,IAAI1G,KAAK,CAAC0G,IAAI,CAACC,IAAI,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACrE;EACA;;EAGA,MAAMC,yBAAyB,GAAG,EAAE;EACpC,IAAIN,OAAO,EAAE;IACXA,OAAO,CAACE,GAAG,CAAEK,MAAM,IAAK;MACtB,MAAMC,OAAO,GAAG,CAAC,CAAC;MAClB,MAAMC,kBAAkB,GAAGhD,WAAW,CAACQ,MAAM,CAAEwB,UAAU,IAAKhG,KAAK,CAACgG,UAAU,CAACW,IAAI,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC,KAAKE,MAAM,IAAId,UAAU,CAACtB,IAAI,IAAInB,WAAW,CAACmB,IAAI,CAAC;MAC1J,IAAIsC,kBAAkB,CAACzC,MAAM,IAAI,CAAC,EAAE;QAClCwC,OAAO,CAACD,MAAM,CAAC,GAAGE,kBAAkB;QACpCH,yBAAyB,CAACI,IAAI,CAACF,OAAO,CAAC;MACzC;MACA;MACA;IACF,CAAC,CAEA;EACH;;EAEA;EACA,MAAMG,WAAW,GAAIC,KAAK,IAAK;IAC7B;IACA,MAAMC,WAAW,GAAG,EAAE;IACtB,MAAMC,gBAAgB,GAAG,EAAE;IAC3BF,KAAK,CAACV,GAAG,CAAEa,CAAC,IAAK;MACfD,gBAAgB,CAACJ,IAAI,CAACK,CAAC,CAAC;MACxB;MACAF,WAAW,CAACH,IAAI,CAAC9C,KAAK,CAACX,IAAI,CAAE+D,IAAI,IAAKA,IAAI,CAAC5D,KAAK,KAAK2D,CAAC,CAACE,oBAAoB,CAAC,CAAC;IAC/E,CAAC,CAAC;IACF7F,cAAc,CAACyF,WAAW,CAAC;IAC3BvF,qBAAqB,CAACwF,gBAAgB,CAAC;IACvC;EACF,CAAC;;EAGD,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGR;IAAK,KAAK,EAAE;MAAEI,SAAS,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAG;IAAC,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAErC,KAAK,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtC,oBAAC,QAAQ;IACP,QAAQ,EAAGsC,CAAC,IAAKA,CAAC,CAACC,GAAI;IACvB,IAAI,EAAEhF,kBAAmB;IACzB,OAAO,EAAEuC,oBAAqB;IAC9B,QAAQ,EAAE,CAAE;IACZ,kBAAkB,EAAE,CAAC,CAAC,CAAE;IACxB,uBAAuB;IACvB,oBAAoB,EAAE;MAAE0C,aAAa,EAAE;IAAK,CAAE;IAC9C,SAAS,EAAEhD,SAAU;IACrB,iBAAiB,EAAGiD,KAAK,IAAKhD,YAAY,CAACgD,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAClD,CACE,CACF,CAEF,eACN;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAK,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB,oBAAC,IAAI;IAAC,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzB,oBAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAAuB,uBAEvB;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxBjB,yBAAyB,CAACJ,GAAG,CAAC,CAACsB,aAAa,EAAEC,KAAK,KAAK;IACvD,MAAMC,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACJ,aAAa,CAAC,CAAC,CAAC,CAAC;IACrD,oBACE;MAAG,IAAI,EAAC,GAAG;MAAC,SAAS,EAAC,+CAA+C;MAAC,gBAAa,MAAM;MACvF,OAAO,EAAE,MAAMb,WAAW,CAACa,aAAa,CAACE,eAAe,CAAC,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC1DA,eAAe,CACd;EAER,CAAC,CACA,CACG,CACI,CACP,CACH,eAIN;IAAK,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB,oBAAC,IAAI;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAE5B,oBAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAqB,eACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEIrG,kBAAkB,GAAGA,kBAAkB,CAAC6E,GAAG,CAAC,CAAC2B,WAAW,EAAEJ,KAAK;IAAA;IAAA,oBAC7D,uDACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,qBACiBI,WAAW,CAACC,kBAAkB,0BAC9BD,WAAW,CAACE,WAAW,gCAEtC,oBAAC,MAAM;MACL,IAAI,EAAC,IAAI;MACT,OAAO,EAAC,OAAO;MACf,QAAQ,EAAEF,WAAW,CAAC9B,kBAAkB,IAAI;MAC9C;MAAA;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAGI8B,WAAW,CAAC9B,kBAAkB,gBAC5B;MAAG,IAAI,EAAG,GAAE8B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE9B,kBAAmB,EAAE;MAAC,IAAI,EAAC,cAAc;MAAC,IAAI,EAAC,iBAAiB;MAAC,KAAK,EAAC,uBAAuB;MAAC,MAAM,EAAC,eAAe;MAAC,GAAG,EAAC,qBAAqB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACtK;MACE,GAAG,EAAElE,OAAO,GAAG,gBAAiB;MAChC,GAAG,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACjB,CACA,gBAEJ;MACE,GAAG,EAAEA,OAAO,GAAG,gBAAiB;MAChC,GAAG,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAEpB,CAEI,CACL,eACN;MAAK,SAAS,EAAC,WAAW;MAAC,GAAG,EAAE4F,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACpC;MAAK,SAAS,EAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC7B;MACE,SAAS,EAAC;MACV;MAAA;MACA,OAAO,EAAE,MAAMrD,cAAc,CAACqD,KAAK,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAErC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,qBACiBI,WAAW,CAACC,kBAAkB,0BAC9BD,WAAW,CAACE,WAAW,mBAErC5F,QAAQ,CAACK,KAAK,gBAAG;MAAK,GAAG,EAAE,kBAAmB;MAAC,GAAG,EAAC,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,gBAAG;MAAK,GAAG,EAAE,gBAAiB;MAAC,GAAG,EAAC,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC7F,CACF,EACLL,QAAQ,CAACK,KAAK,IAAIL,QAAQ,CAACsF,KAAK,IAAIA,KAAK,iBACxC;MAAK,SAAS,EAAC,mBAAmB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAChC,oBAAC,IAAI;MACH,EAAE,EAAC,0BAA0B;MAC7B,SAAS,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAKhB,oBAAC,GAAG;MAAC,QAAQ,EAAC,QAAQ;MAAC,KAAK,EAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAC7BhI,KAAK,uBAAC0B,WAAW,CAACsG,KAAK,CAAC,uDAAlB,mBAAoBO,GAAG,CAAC,CAAC3B,MAAM,CAAC,UAAU,CAAC,eAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAM,kCACxDlF,WAAW,CAACsG,KAAK,CAAC,wDAAlB,oBAAoBQ,GAAG,eAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAM,qCAC3B9G,WAAW,CAACsG,KAAK,CAAC,wDAAlB,oBAAoBS,MAAM,CAC/B,eACN,oBAAC,GAAG;MAAC,QAAQ,EAAC,aAAa;MAAC,KAAK,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5CL,WAAW,CAACE,WAAW,CAEpB,eACN,oBAAC,GAAG;MAAC,QAAQ,EAAC,cAAc;MAAC,KAAK,EAAC,cAAc;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,0CAG/C,oBAAC,MAAM;MACL,QAAQ,EAAEF,WAAW,CAAC9B,kBAAkB,IAAI,EAAG;MAC/C,KAAK,EAAE;QAAEoC,UAAU,EAAE,kBAAkB;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAGzDP,WAAW,CAAC9B,kBAAkB,gBAC5B;MAAG,QAAQ,EAAC,cAAc;MAAC,IAAI,EAAG,GAAE8B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE9B,kBAAmB,EAAE;MAAC,KAAK,EAAC,uBAAuB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAClG;MACE,GAAG,EAAElE,OAAO,GAAG,gBAAiB;MAChC,GAAG,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACjB,CACA,gBAEJ;MACE,GAAG,EAAEA,OAAO,GAAG,gBAAiB;MAChC,GAAG,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAEpB,CAGI,CACL,CACD,CACH,CAEJ,CACF,CACL;EAAA,CACJ,CAAC,GAAG,IAAI,CAEP,CACI,CACP,CACH,CACF,CACI,eAGZ,oBAAC,QAAQ;IACT,kBAAkB,EAAEQ,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtC;AAEV,CAAC;AAED,eAAepB,OAAO"},"metadata":{},"sourceType":"module"}